cscope 15 $HOME/Projects/gmystar/src -q 0000000852 0000140048
	@CodeConverter.cc

1 
	~"CodeC⁄vîãr.h
"

2 
	gCodeC⁄vîãr
::
	$c⁄vît
(*
öbuf
,
öÀn
,*
outbuf
,
ouéí
)

4 **
pö
 = &
öbuf
;

5 **
pout
 = &
outbuf
;

7 
	`mem£t
(
outbuf
,0,
ouéí
);

8  
	`ic⁄v
(
cd
,
pö
,(
size_t
 *)&
öÀn
,
pout
,(size_à*)&
ouéí
);

9 
	}
}

	@CodeConverter.h

4 
	~<ic⁄v.h
>

5 
	~<io°ªam
>

6 
	~<°rög.h
>

8 
	#OUTLEN
 255

	)

10 
usög
 
«me•a˚
 
	g°d
;

13 ˛as†
	cCodeC⁄vîãr


15 
	m¥iv©e
:

16 
ic⁄v_t
 
cd
;

17 
	mpublic
:

19 
	$CodeC⁄vîãr
(c⁄° *
‰om_ch¨£t
,c⁄° *
to_ch¨£t
)

21 
cd
 = 
	`ic⁄v_›í
(
to_ch¨£t
,
‰om_ch¨£t
);

25 ~
	$CodeC⁄vîãr
()

27 
	`ic⁄v_˛o£
(
cd
);

28 
	}
}

31 
c⁄vît
(*
öbuf
,
öÀn
,*
outbuf
,
ouéí
);

	@Config.h

1 
	~"My°¨.h
"

2 ˛as†
	cC⁄fig


	@MD5.cc

49 
	~"MD5.h
"

52 
	#S11
 7

	)

53 
	#S12
 12

	)

54 
	#S13
 17

	)

55 
	#S14
 22

	)

56 
	#S21
 5

	)

57 
	#S22
 9

	)

58 
	#S23
 14

	)

59 
	#S24
 20

	)

60 
	#S31
 4

	)

61 
	#S32
 11

	)

62 
	#S33
 16

	)

63 
	#S34
 23

	)

64 
	#S41
 6

	)

65 
	#S42
 10

	)

66 
	#S43
 15

	)

67 
	#S44
 21

	)

69 
	gPADDING
[64] = {

77 
	#F
(
x
, 
y
, 
z
Ë(((xË& (y)Ë| ((~xË& (z)))

	)

78 
	#G
(
x
, 
y
, 
z
Ë(((xË& (z)Ë| ((yË& (~z)))

	)

79 
	#H
(
x
, 
y
, 
z
Ë((xË^ (yË^ (z))

	)

80 
	#I
(
x
, 
y
, 
z
Ë((yË^ ((xË| (~z)))

	)

84 
	#ROTATE_LEFT
(
x
, 
n
Ë(((xË<< (n)Ë| ((xË>> (32-“))))

	)

89 
	#FF
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

90 (
a
Ë+
	`F
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
UINT4
)(
ac
); \

91 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

92 (
a
Ë+(
b
); \

93 }

	)

94 
	#GG
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

95 (
a
Ë+
	`G
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
UINT4
)(
ac
); \

96 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

97 (
a
Ë+(
b
); \

98 }

	)

99 
	#HH
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

100 (
a
Ë+
	`H
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
UINT4
)(
ac
); \

101 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

102 (
a
Ë+(
b
); \

103 }

	)

104 
	#II
(
a
, 
b
, 
c
, 
d
, 
x
, 
s
, 
ac
) { \

105 (
a
Ë+
	`I
 ((
b
), (
c
), (
d
)Ë+ (
x
Ë+ (
UINT4
)(
ac
); \

106 (
a
Ë
	`ROTATE_LEFT
 (◊), (
s
)); \

107 (
a
Ë+(
b
); \

108 }

	)

110 
	gMD5
::
	$MD5
()

112 
	}
}

116 
MD5
::
	$MD5Inô
 (
MD5_CTX
 * 
c⁄ãxt
)

118 
c⁄ãxt
->
cou¡
[0] = context->count[1] = 0;

121 
c⁄ãxt
->
°©e
[0] = 0x67452301;

122 
c⁄ãxt
->
°©e
[1] = 0xefcdab89;

123 
c⁄ãxt
->
°©e
[2] = 0x98badcfe;

124 
c⁄ãxt
->
°©e
[3] = 0x10325476;

125 
	}
}

131 
	gMD5
::
	$MD5Upd©e
 (
MD5_CTX
 *
c⁄ãxt
, *
öput
, 
öputLí
)

133 
i
, 
ödex
, 
∑πLí
;

136 
ödex
 = ()((
c⁄ãxt
->
cou¡
[0] >> 3) & 0x3F);

139 i‡((
c⁄ãxt
->
cou¡
[0] +((
UINT4
)
öputLí
 << 3))

140 < ((
UINT4
)
öputLí
 << 3))

141 
c⁄ãxt
->
cou¡
[1]++;

142 
c⁄ãxt
->
cou¡
[1] +((
UINT4
)
öputLí
 >> 29);

144 
∑πLí
 = 64 - 
ödex
;

148 i‡(
öputLí
 >
∑πLí
) {

149 
MD5_mem˝y


150 ((
POINTER
)&
c⁄ãxt
->
buf„r
[
ödex
], (POINTER)
öput
, 
∑πLí
);

151 
	`MD5Tønsf‹m
 (
c⁄ãxt
->
°©e
, c⁄ãxt->
buf„r
);

153 
i
 = 
∑πLí
; i + 63 < 
öputLí
; i += 64)

154 
	`MD5Tønsf‹m
 (
c⁄ãxt
->
°©e
, &
öput
[
i
]);

156 
ödex
 = 0;

159 
i
 = 0;

162 
MD5_mem˝y


163 ((
POINTER
)&
c⁄ãxt
->
buf„r
[
ödex
], (POINTER)&
öput
[
i
],

164 
öputLí
-
i
);

165 
	}
}

170 
	gMD5
::
	$MD5FöÆ
 (
dige°
[16], 
MD5_CTX
 *
c⁄ãxt
)

172 
bôs
[8];

173 
ödex
, 
∑dLí
;

176 
	`Encode
 (
bôs
, 
c⁄ãxt
->
cou¡
, 8);

180 
ödex
 = ()((
c⁄ãxt
->
cou¡
[0] >> 3) & 0x3f);

181 
∑dLí
 = (
ödex
 < 56) ? (56 - index) : (120 - index);

182 
	`MD5Upd©e
 (
c⁄ãxt
, 
PADDING
, 
∑dLí
);

185 
	`MD5Upd©e
 (
c⁄ãxt
, 
bôs
, 8);

188 
	`Encode
 (
dige°
, 
c⁄ãxt
->
°©e
, 16);

192 
	`MD5_mem£t
 ((
POINTER
)
c⁄ãxt
, 0,  (*context));

193 
	}
}

195 * 
	gMD5
::
	$CompuãHash
(* 
§c
,
Àn
)

197 
MD5_CTX
 
c⁄ãxt
;

198 
dige°
[16];

200 
	`MD5Inô
(&
c⁄ãxt
);

201 
	`MD5Upd©e
(&
c⁄ãxt
, 
§c
, 
Àn
);

202 
	`MD5FöÆ
(
dige°
, &
c⁄ãxt
);

204  
dige°
;

205 
	}
}

209 
	gMD5
::
	$MD5Tønsf‹m
 (
UINT4
 
°©e
[4],
block
[64])

211 
UINT4
 
a
 = 
°©e
[0], 
b
 = sèã[1], 
c
 = sèã[2], 
d
 = sèã[3], 
x
[16];

213 
	`Decode
 (
x
, 
block
, 64);

216 
	`FF
 (
a
, 
b
, 
c
, 
d
, 
x
[ 0], 
S11
, 0xd76aa478);

217 
	`FF
 (
d
, 
a
, 
b
, 
c
, 
x
[ 1], 
S12
, 0xe8c7b756);

218 
	`FF
 (
c
, 
d
, 
a
, 
b
, 
x
[ 2], 
S13
, 0x242070db);

219 
	`FF
 (
b
, 
c
, 
d
, 
a
, 
x
[ 3], 
S14
, 0xc1bdceee);

220 
	`FF
 (
a
, 
b
, 
c
, 
d
, 
x
[ 4], 
S11
, 0xf57c0faf);

221 
	`FF
 (
d
, 
a
, 
b
, 
c
, 
x
[ 5], 
S12
, 0x4787c62a);

222 
	`FF
 (
c
, 
d
, 
a
, 
b
, 
x
[ 6], 
S13
, 0xa8304613);

223 
	`FF
 (
b
, 
c
, 
d
, 
a
, 
x
[ 7], 
S14
, 0xfd469501);

224 
	`FF
 (
a
, 
b
, 
c
, 
d
, 
x
[ 8], 
S11
, 0x698098d8);

225 
	`FF
 (
d
, 
a
, 
b
, 
c
, 
x
[ 9], 
S12
, 0x8b44f7af);

226 
	`FF
 (
c
, 
d
, 
a
, 
b
, 
x
[10], 
S13
, 0xffff5bb1);

227 
	`FF
 (
b
, 
c
, 
d
, 
a
, 
x
[11], 
S14
, 0x895cd7be);

228 
	`FF
 (
a
, 
b
, 
c
, 
d
, 
x
[12], 
S11
, 0x6b901122);

229 
	`FF
 (
d
, 
a
, 
b
, 
c
, 
x
[13], 
S12
, 0xfd987193);

230 
	`FF
 (
c
, 
d
, 
a
, 
b
, 
x
[14], 
S13
, 0xa679438e);

231 
	`FF
 (
b
, 
c
, 
d
, 
a
, 
x
[15], 
S14
, 0x49b40821);

234 
	`GG
 (
a
, 
b
, 
c
, 
d
, 
x
[ 1], 
S21
, 0xf61e2562);

235 
	`GG
 (
d
, 
a
, 
b
, 
c
, 
x
[ 6], 
S22
, 0xc040b340);

236 
	`GG
 (
c
, 
d
, 
a
, 
b
, 
x
[11], 
S23
, 0x265e5a51);

237 
	`GG
 (
b
, 
c
, 
d
, 
a
, 
x
[ 0], 
S24
, 0xe9b6c7aa);

238 
	`GG
 (
a
, 
b
, 
c
, 
d
, 
x
[ 5], 
S21
, 0xd62f105d);

239 
	`GG
 (
d
, 
a
, 
b
, 
c
, 
x
[10], 
S22
, 0x2441453);

240 
	`GG
 (
c
, 
d
, 
a
, 
b
, 
x
[15], 
S23
, 0xd8a1e681);

241 
	`GG
 (
b
, 
c
, 
d
, 
a
, 
x
[ 4], 
S24
, 0xe7d3fbc8);

242 
	`GG
 (
a
, 
b
, 
c
, 
d
, 
x
[ 9], 
S21
, 0x21e1cde6);

243 
	`GG
 (
d
, 
a
, 
b
, 
c
, 
x
[14], 
S22
, 0xc33707d6);

244 
	`GG
 (
c
, 
d
, 
a
, 
b
, 
x
[ 3], 
S23
, 0xf4d50d87);

247 
	`GG
 (
b
, 
c
, 
d
, 
a
, 
x
[ 8], 
S24
, 0x455a14ed);

248 
	`GG
 (
a
, 
b
, 
c
, 
d
, 
x
[13], 
S21
, 0xa9e3e905);

249 
	`GG
 (
d
, 
a
, 
b
, 
c
, 
x
[ 2], 
S22
, 0xfcefa3f8);

250 
	`GG
 (
c
, 
d
, 
a
, 
b
, 
x
[ 7], 
S23
, 0x676f02d9);

251 
	`GG
 (
b
, 
c
, 
d
, 
a
, 
x
[12], 
S24
, 0x8d2a4c8a);

254 
	`HH
 (
a
, 
b
, 
c
, 
d
, 
x
[ 5], 
S31
, 0xfffa3942);

255 
	`HH
 (
d
, 
a
, 
b
, 
c
, 
x
[ 8], 
S32
, 0x8771f681);

256 
	`HH
 (
c
, 
d
, 
a
, 
b
, 
x
[11], 
S33
, 0x6d9d6122);

257 
	`HH
 (
b
, 
c
, 
d
, 
a
, 
x
[14], 
S34
, 0xfde5380c);

258 
	`HH
 (
a
, 
b
, 
c
, 
d
, 
x
[ 1], 
S31
, 0xa4beea44);

259 
	`HH
 (
d
, 
a
, 
b
, 
c
, 
x
[ 4], 
S32
, 0x4bdecfa9);

260 
	`HH
 (
c
, 
d
, 
a
, 
b
, 
x
[ 7], 
S33
, 0xf6bb4b60);

261 
	`HH
 (
b
, 
c
, 
d
, 
a
, 
x
[10], 
S34
, 0xbebfbc70);

262 
	`HH
 (
a
, 
b
, 
c
, 
d
, 
x
[13], 
S31
, 0x289b7ec6);

263 
	`HH
 (
d
, 
a
, 
b
, 
c
, 
x
[ 0], 
S32
, 0xeaa127fa);

264 
	`HH
 (
c
, 
d
, 
a
, 
b
, 
x
[ 3], 
S33
, 0xd4ef3085);

265 
	`HH
 (
b
, 
c
, 
d
, 
a
, 
x
[ 6], 
S34
, 0x4881d05);

266 
	`HH
 (
a
, 
b
, 
c
, 
d
, 
x
[ 9], 
S31
, 0xd9d4d039);

267 
	`HH
 (
d
, 
a
, 
b
, 
c
, 
x
[12], 
S32
, 0xe6db99e5);

268 
	`HH
 (
c
, 
d
, 
a
, 
b
, 
x
[15], 
S33
, 0x1fa27cf8);

269 
	`HH
 (
b
, 
c
, 
d
, 
a
, 
x
[ 2], 
S34
, 0xc4ac5665);

272 
	`II
 (
a
, 
b
, 
c
, 
d
, 
x
[ 0], 
S41
, 0xf4292244);

273 
	`II
 (
d
, 
a
, 
b
, 
c
, 
x
[ 7], 
S42
, 0x432aff97);

274 
	`II
 (
c
, 
d
, 
a
, 
b
, 
x
[14], 
S43
, 0xab9423a7);

275 
	`II
 (
b
, 
c
, 
d
, 
a
, 
x
[ 5], 
S44
, 0xfc93a039);

276 
	`II
 (
a
, 
b
, 
c
, 
d
, 
x
[12], 
S41
, 0x655b59c3);

277 
	`II
 (
d
, 
a
, 
b
, 
c
, 
x
[ 3], 
S42
, 0x8f0ccc92);

278 
	`II
 (
c
, 
d
, 
a
, 
b
, 
x
[10], 
S43
, 0xffeff47d);

279 
	`II
 (
b
, 
c
, 
d
, 
a
, 
x
[ 1], 
S44
, 0x85845dd1);

280 
	`II
 (
a
, 
b
, 
c
, 
d
, 
x
[ 8], 
S41
, 0x6fa87e4f);

281 
	`II
 (
d
, 
a
, 
b
, 
c
, 
x
[15], 
S42
, 0xfe2ce6e0);

282 
	`II
 (
c
, 
d
, 
a
, 
b
, 
x
[ 6], 
S43
, 0xa3014314);

283 
	`II
 (
b
, 
c
, 
d
, 
a
, 
x
[13], 
S44
, 0x4e0811a1);

284 
	`II
 (
a
, 
b
, 
c
, 
d
, 
x
[ 4], 
S41
, 0xf7537e82);

285 
	`II
 (
d
, 
a
, 
b
, 
c
, 
x
[11], 
S42
, 0xbd3af235);

286 
	`II
 (
c
, 
d
, 
a
, 
b
, 
x
[ 2], 
S43
, 0x2ad7d2bb);

287 
	`II
 (
b
, 
c
, 
d
, 
a
, 
x
[ 9], 
S44
, 0xeb86d391);

289 
°©e
[0] +
a
;

290 
°©e
[1] +
b
;

291 
°©e
[2] +
c
;

292 
°©e
[3] +
d
;

297 
	`MD5_mem£t
 ((
POINTER
)
x
, 0,  (x));

298 
	}
}

303 
	gMD5
::
	$Encode
(*
ouçut
, 
UINT4
 *
öput
, 
Àn
)

305 
i
, 
j
;

307 
i
 = 0, 
j
 = 0; j < 
Àn
; i++, j += 4) {

308 
ouçut
[
j
] = ()(
öput
[
i
] & 0xff);

309 
ouçut
[
j
+1] = ()((
öput
[
i
] >> 8) & 0xff);

310 
ouçut
[
j
+2] = ()((
öput
[
i
] >> 16) & 0xff);

311 
ouçut
[
j
+3] = ()((
öput
[
i
] >> 24) & 0xff);

313 
	}
}

318 
	gMD5
::
	$Decode
 (
UINT4
 *
ouçut
, *
öput
, 
Àn
)

320 
i
, 
j
;

322 
i
 = 0, 
j
 = 0; j < 
Àn
; i++, j += 4)

323 
ouçut
[
i
] = ((
UINT4
)
öput
[
j
]) | (((UINT4)input[j+1]) << 8) |

324 (((
UINT4
)
öput
[
j
+2]) << 16) | (((UINT4)input[j+3]) << 24);

325 
	}
}

330 
	gMD5
::
	$MD5_mem˝y
 (
POINTER
 
ouçut
, POINTER 
öput
, 
Àn
)

332 
i
;

334 
i
 = 0; i < 
Àn
; i++)

336 
ouçut
[
i
] = 
öput
[i];

337 
	}
}

342 
	gMD5
::
	$MD5_mem£t
 (
POINTER
 
ouçut
,
vÆue
,
Àn
)

344 
i
;

345 
i
 = 0; i < 
Àn
; i++)

346 ((*)
ouçut
)[
i
] = ()
vÆue
;

347 
	}
}

	@MD5.h

26 *
	tPOINTER
;

29 
	tUINT2
;

32 
	tUINT4
;

37 
UINT4
 
	m°©e
[4];

38 
UINT4
 
	mcou¡
[2];

39 
	mbuf„r
[64];

40 } 
	tMD5_CTX
;

42 ˛as†
	cMD5


44 
	mpublic
:

45 
MD5
();

46 * 
CompuãHash
(*
§c
,
Àn
);

48 
	mmd5D©a
[256];

49 *
	mmd5Dig
;

50 
	mmd5Lí
;

52 
	m¥Ÿe˘ed
:

53 
MD5Inô
(
MD5_CTX
 * 
c⁄ãxt
);

54 
MD5Upd©e
(
MD5_CTX
 *
c⁄ãxt
, *
öput
, 
öputLí
);

55 
MD5FöÆ
(
dige°
[16], 
MD5_CTX
 *
c⁄ãxt
);

57 
MD5Tønsf‹m
(
UINT4
 
°©e
[4], 
block
[64]);

58 
Encode
(*
ouçut
, 
UINT4
 *
öput
, 
Àn
);

59 
Decode
 (
UINT4
 *
ouçut
, *
öput
, 
Àn
);

60 
MD5_mem˝y
 (
POINTER
 
ouçut
, POINTER 
öput
, 
Àn
);

61 
MD5_mem£t
 (
POINTER
 
ouçut
,
vÆue
,
Àn
);

	@Mystar.cc

1 
	~"My°¨.h
"

2 
	~"CodeC⁄vîãr.h
"

3 
	#MAXCOUNT
 10

	)

4 
	gMy°¨
::
	$My°¨
()

6 
	`öô
();

7 
	`checkAndSëC⁄fig
();

8 
	}
}

9 
	gMy°¨
::
	$öô
()

11 
l
 = 
NULL
;

12 
p
 = 
NULL
;

13 
isFú°PackëFromSîvî
 = 1;

15 
	}
}

16 
	gMy°¨
::
	$authí
()

18 if(
	`öô_authí
()==0)

19 
	`ópﬁ
();

20 
	}
}

21 
	gMy°¨
::
	$öô_authí
()

23 
l_îrbuf
[
LIBNET_ERRBUF_SIZE
];

24 
l
 = 
	`lib√t_öô
(
LIBNET_LINK
, 
nic
, 
l_îrbuf
);

25 if(
l
==
NULL
)

26 
	`îr_quô
("lib√t_öô:%s\n", 
l_îrbuf
);

27 
p
 = 
	`pˇp_›í_live
(
nic
, 65536, 0, 500, 
p_îrbuf
);

28 if(
p
==
NULL
)

30 
	`îr_msg
("pˇp_›í_live:%s\n", 
p_îrbuf
);

32 
	`lib√t_de°roy
(
l
);

35 
p_fd
 = 
	`pˇp_fûío
(
p
);

36 
l_ëhî_addr
 = 
	`lib√t_gë_hwaddr
(
l
);

37 if(
l_ëhî_addr
 =
NULL
)

39 
	`îr_msg
("u«bÀÅÿgëÜoˇ»ma¯addªs†:%s\n", 
	`lib√t_gëîr‹
(
l
));

41 
	`mem˝y
(
loˇlMAC
, 
l_ëhî_addr
, (localMAC));

42 #ifde‡
DEBUG


43 
	`¥ötf
("localmac‰∏∫:");

44 
i
;

45 
i
=0;i<6;i++)

47 
	`¥ötf
("%2x ",*(
loˇlMAC
+
i
));

49 
	`¥ötf
("\n");

52 if(
u£r
.
	`gë_ÁkeAddªss
()==
NULL
)

54 
l_ù
=
	`lib√t_gë_ùaddr4
(
l
);

55 if(
l_ù
 ==-1)

57 
	`îr_msg
("u«bÀÅÿgë i∞addªss--ög‹ed... :%s\n",
	`lib√t_gëîr‹
(
l
));

58 
l_ù
=0;

60 
	`mem˝y
(
m_ù
,&
l_ù
,(m_ip));

61 
	`¥ötf
("Áé∞Âú®m_ip‰∏∫:");

62 
i
=0;i<3;i++)

64 
	`¥ötf
("%d.",*(
m_ù
+
i
));

66 
	`¥ötf
("%d\n",*(
m_ù
+
i
));

70 if–
	`öë_±⁄
(
AF_INET
,
u£r
.
	`gë_ÁkeAddªss
(),
m_ù
)<=0 )

71 
	`îr_msg
("invalid fakeAddress found in mystar.conf, ignored...\n");

72 
	`¥ötf
("ËÆæÁΩÆm_ip‰∏∫:");

73 
i
=0;i<3;i++)

75 
	`¥ötf
("%d.",*(
m_ù
+
i
));

77 
	`¥ötf
("%d\n",*(
m_ù
+
i
));

80 if(
	`pˇp_looku≤ë
(
nic
,&
p_√èddr
,&
p_√tmask
,
p_îrbuf
)==-1)

82 
	`îr_msg
("u«bÀÅÿgëÇëmask--ig‹ed... %s\n",
p_îrbuf
); 
p_√tmask
=0;}

83 
	`mem˝y
(
m_√tmask
,&
p_√tmask
,(m_netmask));

85 
	`InôülizeBlog
(
m_ù
,
m_√tmask
,
m_√tg©e
,
m_dns1
);

88 
	`¢¥ötf
(
fûãr_buf
,(fûãr_buf),
FILTER_STR
, 
loˇlMAC
[0],localMAC[1],

89 
loˇlMAC
[2],localMAC[3],localMAC[4],localMAC[5],localMAC[6]);

90 if(
	`pˇp_compûe
(
p
, &
fûãr_code
,
fûãr_buf
, 0, 
p_√tmask
)==-1)

92 
	`îr_msg
("pˇp_compûe(): %s", 
	`pˇp_gëîr
(
p
));

94 
	`pˇp_˛o£
(
p
);

95 
	`lib√t_de°roy
(
l
);

98 if(
	`pˇp_£tfûãr
(
p
, &
fûãr_code
)==-1)

100 
	`îr_msg
("pˇp_£tfûãr(): %s", 
	`pˇp_gëîr
(
p
));

102 
	`pˇp_˛o£
(
p
);

103 
	`lib√t_de°roy
(
l
);

106 
	`pˇp_‰ìcode
(&
fûãr_code
);

109 ()
	`sigfûl£t
(&
sig£t_fuŒ
);

110 ()
	`sig¥ocmask
(
SIG_BLOCK
,&
sig£t_fuŒ
,
NULL
);

112 
	}
}

113 
	gMy°¨
::
	$ópﬁ
()

122 #ifde‡
DEBUG


123 
	`¥ötf
("ÊâßË°åeapolÂçèËÆÆ\n");

124 
	`¥ötf
("ÂÖàÂèë‰∏Ä‰∏™ÂåÖ‰ΩúÂºÄÂßãÔºö\n");

126 
m_°©e
 = 0;

127 ()
	`SídFödSîvîPackë
(
l
);

128 
∑ckëCou¡_SítFödSîvî
 = 1;

129 
∑ckëCou¡_SítName
 = 0;

130 
∑ckëCou¡_SítPassw‹d
 = 0;

131 
i
 =1;

132 
åue
)

134 #ifde‡
DEBUG


135 
	`¥ötf
("Á¨¨%dÊ¨°Âæ™ÁéØ:\n",
i
);

137 
i
++;

138 (Ë
	`sigfûl£t
(&
sig£t_fuŒ
);

139 (Ë
	`sigdñ£t
(&
sig£t_fuŒ
, 
SIGINT
);

140 
	`FD_ZERO
 (&
ªad_£t
);

141 
	`FD_SET
 (
p_fd
, &
ªad_£t
);

142 
timeout
.
tv_£c
 = 1;

143 
timeout
.
tv_n£c
 = 0;

146  
	`p£À˘
(
p_fd
+1,&
ªad_£t
,
NULL
,NULL,&
timeout
,&
sig£t_fuŒ
) )

150 
	`pˇp_˛o£
(
p
);

151 
	`lib√t_de°roy
(
l
);

154 
m_°©e
)

157 if(++
∑ckëCou¡_SítFödSîvî
>
MAXCOUNT
)

159 
	`puts
("search serverÅime out, Restartingáuthenticaton!");

162 ()
	`SídFödSîvîPackë
(
l
);

165 if(++
∑ckëCou¡_SítName
>
MAXCOUNT
)

167 
	`puts
("send usernameÅime out, Restartingáuthenticaton!");

170 ()
	`SídNamePackë
(
l
, 
pkt_d©a
);

173 if(++
∑ckëCou¡_SítPassw‹d
>
MAXCOUNT
)

175 
	`puts
("sentÖasswordÅime out, Restartingáuthenticaton!");

178 ()
	`SídPassw‹dPackë
(
l
, 
pkt_d©a
);

181 
	`pˇp_˛o£
(
p
);

182 
	`lib√t_de°roy
(
l
);

189 if((
	`pˇp_√xt_ex
(
p
,&
pkt_hdr
,&
pkt_d©a
))!=1) ;

192 i‡((!
isFú°PackëFromSîvî
)&&(
	`memcmp
(
de°MAC
,
pkt_d©a
+6,6)!=0)) ;

197  
pkt_d©a
[0x12] )

200  
pkt_d©a
[0x16] )

203 if(
m_°©e
!=0)

205 
cout
<<"csip\n";

206 
	`show_mesßge
("Server found,Ñequesting userÇame...\n");

207 
	`£nd_u£∫ame
();

208 ++
∑ckëCou¡_SítName
;

211 if(
m_°©e
!=1)

213 
	`show_mesßge
("UserÇame valid,ÑequestingÖassword...\n");

214 ++
∑ckëCou¡_SítPassw‹d
;

215 
	`£nd_∑ssw‹d
();

221 if(
m_°©e
!=2)

223 
m_°©e
=3;

224 
	`show_mesßge
("@@ Password valid,áuthentication SUCCESS!!! :)\n");

225 i‡(
echoI¡îvÆ
<=0)

228 
	`¥ötf
("echoI¡îvÆ:%d",
echoI¡îvÆ
);

229 
	`pˇp_˛o£
(
p
); 
	`lib√t_de°roy
(
l
);

233 
off£t
=
	`¡ohs
–*((
u_öt16_t
*)(
pkt_d©a
+0x10)) );

234 
uTemp
.
ulVÆue
 = *((
u_öt32_t
 *)(
pkt_d©a
+(0x11+
off£t
)-0x08));

235 
m_key
.
btVÆue
[0] = 
	`Alog
(
uTemp
.btValue[3]);

236 
m_key
.
btVÆue
[1] = 
	`Alog
(
uTemp
.btValue[2]);

237 
m_key
.
btVÆue
[2] = 
	`Alog
(
uTemp
.btValue[1]);

238 
m_key
.
btVÆue
[3] = 
	`Alog
(
uTemp
.btValue[0]);

241 ()
	`sigem±y£t
(&
sig£t_zîo
);

242 ()
	`sigadd£t
(&
sig£t_zîo
,
SIGINT
);

243 ()
	`sig¥ocmask
(
SIG_UNBLOCK
,&
sig£t_zîo
,
NULL
);

245 
	`show_mesßge
("Keeping sendingÉcho...\n");

247 
ULONG_BYTEARRAY
 
m_£rülNo
;

248 
m_£rülNo
.
ulVÆue
 = 0x1000002a;

249 
	`SídEchoPackë
(
l
, 
pkt_d©a
, &
m_£rülNo
)==0)

250 
	`¶ìp
(
echoI¡îvÆ
);

252 
	`pˇp_˛o£
(
p
);

253 
	`lib√t_de°roy
(
l
);

257 if((
m_°©e
==0)||(m_state==3)) ;

258 
m_°©e
=0;

259 
msgLí
=
	`¡ohs
–*((
u_öt16_t
*)(
pkt_d©a
+0x10)) )-10;

260 *
msgBuf_utf8
=
NULL
;

261 i‡(
msgLí
>0)

263 if(
msgLí
>=((
msgBuf
)-1)) msgLen=(msgBuf)-1;

264 
	`mem£t
(
msgBuf
,'\0',(msgBuf));

265 
	`mem˝y
(
msgBuf
, 
pkt_d©a
+0x1c, 
msgLí
);

266 
pmsgBuf
=
msgBuf
;

268 if((
msgLí
>2)&&(
msgBuf
[0]==0xd)&&(msgBuf[1]==0xa)Ë
pmsgBuf
+=2;

270 #ifde‡
DEBUG


335 
msgBuf_utf8
=
	`gbk2utf8
(
msgBuf
);

345 
pmsgBuf
=
NULL
;

349 
	`¥ötf
("@@ Authítiˇt⁄ faûed!!! :(%s\n",
msgBuf_utf8
);

350 #ifde‡
DEBUG


353 ()
	`SídEndCîtPackë
(
l
);

362 
	}
}

363 
	gMy°¨
::
	$£nd_u£∫ame
()

365 
m_°©e
 = 1;

366 i‡(
isFú°PackëFromSîvî
)

368 
	`mem˝y
 (
de°MAC
, 
pkt_d©a
 + 6, 6);

369 
isFú°PackëFromSîvî
 = 0;

371 #ifde‡
DEBUG


372 
	`Âuts
("ÂèëÈÄÅÁî®Êà∑ÂåÖ",
°dout
);

374 (Ë
	`SídNamePackë
(
l
, 
pkt_d©a
);

375 
	}
}

376 
	gMy°¨
::
	$£nd_∑ssw‹d
()

378 
m_°©e
 = 2;

379 #ifde‡
DEBUG


380 
	`Âuts
("ÂèëÈÄÅÂØÜÁ†ÅÂåÖ",
°dout
);

382 ()
	`SídPassw‹dPackë
(
l
, 
pkt_d©a
);

383 
	}
}

384 
	gMy°¨
::
	$logout
(
signo
)

386 
l_îrbuf
[
LIBNET_ERRBUF_SIZE
];

387 if(
m_°©e
==3)

389 
l
=
	`lib√t_öô
(
LIBNET_LINK
, 
nic
,
l_îrbuf
);

390 if–
l
 =
NULL
)

391 
	`_exô
(0);

392 ()
	`SídEndCîtPackë
(
l
);

393 
	`lib√t_de°roy
(
l
);

395 
	`_exô
(0);

396 
	}
}

397 
	gMy°¨
::
	$hñp
()

399 
	`Âuts
("--noguò u£ comm™dÜöêöãrÁ˚\n",
°dout
);

400 
	`Âuts
("--hñ∞ showÅhi†hñp\n",
°dout
);

401 
	}
}

402 
	gMy°¨
::
	$show_mesßge
(c⁄° *
mesßge
)

404 
	`¥ötf
("%s", 
mesßge
);

405 
	}
}

408 
	gMy°¨
::
	$authí_
()

410 if(
	`öô_authí
()==0)

412 
°©e
;

413 
	`ópﬁ_£¨ch
());

414 
	`ópﬁ_£ndu£∫ame
());

415 
°©e
=
	`ópﬁ_£nd∑ssw‹d
())

417 if(
°©e
==3)

423 
	}
}

424 
	gMy°¨
::
	$ópﬁ_£¨ch
()

433 ()
	`SídFödSîvîPackë
(
l
);

435 (Ë
	`sigfûl£t
(&
sig£t_fuŒ
);

436 (Ë
	`sigdñ£t
(&
sig£t_fuŒ
, 
SIGINT
);

437 
	`FD_ZERO
 (&
ªad_£t
);

438 
	`FD_SET
 (
p_fd
, &
ªad_£t
);

439 
timeout
.
tv_£c
 = 1;

440 
timeout
.
tv_n£c
 = 0;

443  
	`p£À˘
(
p_fd
+1,&
ªad_£t
,
NULL
,NULL,&
timeout
,&
sig£t_fuŒ
) )

447 
	`pˇp_˛o£
(
p
);

448 
	`lib√t_de°roy
(
l
);

454 if((
	`pˇp_√xt_ex
(
p
,&
pkt_hdr
,&
pkt_d©a
))!=1)  3;

456 i‡((!
isFú°PackëFromSîvî
)&&(
	`memcmp
(
de°MAC
,
pkt_d©a
+6,6)!=0))  3;

458 if––
pkt_d©a
[0x12] == 0x01 ) && (Ökt_data[0x16] == 0x01 ) )

460 
	`Âuts
 ("@@ Sîvî found,Ñeque°ög u£∏«me...\n", 
°dout
);

465 
	}
}

466 
	gMy°¨
::
	$ópﬁ_£ndu£∫ame
()

475 
	`£nd_u£∫ame
();

476 (Ë
	`sigfûl£t
(&
sig£t_fuŒ
);

477 (Ë
	`sigdñ£t
(&
sig£t_fuŒ
, 
SIGINT
);

478 
	`FD_ZERO
 (&
ªad_£t
);

479 
	`FD_SET
 (
p_fd
, &
ªad_£t
);

480 
timeout
.
tv_£c
 = 1;

481 
timeout
.
tv_n£c
 = 0;

484  
	`p£À˘
(
p_fd
+1,&
ªad_£t
,
NULL
,NULL,&
timeout
,&
sig£t_fuŒ
) )

488 
	`pˇp_˛o£
(
p
);

489 
	`lib√t_de°roy
(
l
);

497 if((
	`pˇp_√xt_ex
(
p
,&
pkt_hdr
,&
pkt_d©a
))!=1)  3;

500 i‡((!
isFú°PackëFromSîvî
)&&(
	`memcmp
(
de°MAC
,
pkt_d©a
+6,6)!=0))  3;

505 if––
pkt_d©a
[0x12] == 0x01 ) && (Ökt_data[0x16] == 0x04 ) )

507 
	`Âuts
 ("@@ U£∏«mêvÆid,Ñeque°ögÖassw‹d...\n", 
°dout
);

512 
	}
}

513 
	gMy°¨
::
	$ópﬁ_£nd∑ssw‹d
()

522 
	`£nd_∑ssw‹d
();

523 (Ë
	`sigfûl£t
(&
sig£t_fuŒ
);

524 (Ë
	`sigdñ£t
(&
sig£t_fuŒ
, 
SIGINT
);

525 
	`FD_ZERO
 (&
ªad_£t
);

526 
	`FD_SET
 (
p_fd
, &
ªad_£t
);

527 
timeout
.
tv_£c
 = 1;

528 
timeout
.
tv_n£c
 = 0;

531  
	`p£À˘
(
p_fd
+1,&
ªad_£t
,
NULL
,NULL,&
timeout
,&
sig£t_fuŒ
) )

535 
	`pˇp_˛o£
(
p
);

536 
	`lib√t_de°roy
(
l
);

544 if((
	`pˇp_√xt_ex
(
p
,&
pkt_hdr
,&
pkt_d©a
))!=1)  3;

547 i‡((!
isFú°PackëFromSîvî
)&&(
	`memcmp
(
de°MAC
,
pkt_d©a
+6,6)!=0))  3;

552 if–
pkt_d©a
[0x12] == 0x03 )

554 
	`Âuts
("@@ Passw‹d vÆid,áuthítiˇti⁄ SUCCESS!!! :)\n",
°dout
);

555 i‡(
echoI¡îvÆ
<=0)

558 
	`¥ötf
("echoI¡îvÆ:%d",
echoI¡îvÆ
);

559 
	`pˇp_˛o£
(
p
); 
	`lib√t_de°roy
(
l
);

564 
off£t
=
	`¡ohs
–*((
u_öt16_t
*)(
pkt_d©a
+0x10)) );

565 
uTemp
.
ulVÆue
 = *((
u_öt32_t
 *)(
pkt_d©a
+(0x11+
off£t
)-0x08));

566 
m_key
.
btVÆue
[0] = 
	`Alog
(
uTemp
.btValue[3]);

567 
m_key
.
btVÆue
[1] = 
	`Alog
(
uTemp
.btValue[2]);

568 
m_key
.
btVÆue
[2] = 
	`Alog
(
uTemp
.btValue[1]);

569 
m_key
.
btVÆue
[3] = 
	`Alog
(
uTemp
.btValue[0]);

572 ()
	`sigem±y£t
(&
sig£t_zîo
);

573 ()
	`sigadd£t
(&
sig£t_zîo
,
SIGINT
);

574 ()
	`sig¥ocmask
(
SIG_UNBLOCK
,&
sig£t_zîo
,
NULL
);

576 
	`Âuts
("Kìpög sídögÉcho... ‰øùÊåÅËøûÊé•‰∫Ü„ÄÇ„ÄÇ„ÄÇ\n",
°dout
);

577 
ULONG_BYTEARRAY
 
m_£rülNo
;

578 
m_£rülNo
.
ulVÆue
 = 0x1000002a;

579 
	`SídEchoPackë
(
l
,
pkt_d©a
, &
m_£rülNo
)==0)

580 
	`¶ìp
(
echoI¡îvÆ
);

582 
	`pˇp_˛o£
(
p
);

583 
	`lib√t_de°roy
(
l
);

586 if–
pkt_d©a
[0x12] == 0x04 )

588 
msgLí
=
	`¡ohs
–*((
u_öt16_t
*)(
pkt_d©a
+0x10)) )-10;

589 *
msgBuf_utf8
=
NULL
;

590 i‡(
msgLí
>0)

592 if(
msgLí
>=((
msgBuf
)-1)) msgLen=(msgBuf)-1;

593 
	`mem£t
(
msgBuf
,'\0',(msgBuf));

594 
	`mem˝y
(
msgBuf
, 
pkt_d©a
+0x1c, 
msgLí
);

595 
pmsgBuf
=
msgBuf
;

597 if((
msgLí
>2)&&(
msgBuf
[0]==0xd)&&(msgBuf[1]==0xa)Ë
pmsgBuf
+=2;

601 
pmsgBuf
=
NULL
;

605 
	`¥ötf
("@@ Authítiˇt⁄ faûed!!! :(%s\n",
msgBuf_utf8
);

606 ()
	`SídEndCîtPackë
(
l
);

609 
	}
}

	@Mystar.h

1 
	~<°dlib.h
>

2 
	~<io°ªam
>

12 
	~<sys/ty≥s.h
>

13 
	~<sys/time.h
>

14 
	~<sys/£À˘.h
>

15 
	~<sys/sockë.h
>

16 
	~<√töë/ö.h
>

20 
	~<pˇp.h
>

21 
	~<lib√t.h
>

23 
	~"U£r.h
"

24 
	~"MD5.h
"

26 
	#DEBUG
 1

	)

28 
	#FILTER_STR
 "ëhî[12:2]=0x888ê™dÉthî d° %02x:%02x:%02x:%02x:%02x:%02x"

	)

29 
	#BUFFER_SIZE
 4096

	)

31 
usög
 
«me•a˚
 
	g°d
;

35 
u_öt32_t
 
	mulVÆue
;

36 
u_öt8_t
 
	mbtVÆue
[4];

37 }
	tULONG_BYTEARRAY
;

39 ˛as†
	cMy°¨


41 
	mpublic
:

42 
My°¨
();

43 
authí
();

44 
hñp
();

45 *
gbk2utf8
(*
§c
);

46 
	m¥Ÿe˘ed
:

47 
öô
();

48 
checkAndSëC⁄fig
();

49 
öô_fûe
();

50 
modify_fûe
();

51 
öô_authí
();

52 
ópﬁ
();

53 
£nd_u£∫ame
();

54 
£nd_∑ssw‹d
();

56 
authí_
();

57 
ópﬁ_£ndu£∫ame
();

58 
ópﬁ_£nd∑ssw‹d
();

59 
ópﬁ_£¨ch
();

61 
show_mesßge
(c⁄° *
mesßge
);

64 
SídFödSîvîPackë
(
lib√t_t
 *
l
);

65 
SídNamePackë
(
lib√t_t
 *
l
, c⁄° 
u_ch¨
 *
pkt_d©a
);

66 
SídPassw‹dPackë
(
lib√t_t
 *
l
,c⁄° 
u_ch¨
 *
pkt_d©a
);

67 
SídEchoPackë
(
lib√t_t
 *
l
,c⁄° 
u_ch¨
 *
pkt_d©a
, 
ULONG_BYTEARRAY
 *
m_£rülNo
);

68 
SídEndCîtPackë
(
lib√t_t
 *
l
);

72 
îr_ªt
(c⁄° *
fmt
, ...);

73 
îr_sys
(c⁄° *
fmt
, ...);

74 
îr_dump
(c⁄° *
fmt
, ...);

75 
îr_msg
(c⁄° *
fmt
, ...);

76 
îr_quô
(c⁄° *
fmt
, ...);

77 
îr_doô
(, c⁄° *, 
va_li°
);

79 
logout
(
signo
);

82 
InôülizeBlog
(c⁄° *
m_ù
, c⁄° *
m_√tmask
,

83 c⁄° *
m_√tg©e
, c⁄° *
m_dns1
);

85 
FûlNëP¨am©î
(
F‹Fûl
[]);

87 
Alog
(
BF‹Alog
);

88 
Blog
();

93 
U£r
 
	mu£r
;

94 
MD5
 
	mmd5
;

96 
	mnic
[32];

97 
	möãŒigítRec⁄√˘
;

98 
	mechoI¡îvÆ
;

99 
	mauthítiˇti⁄Mode
;

101 
	mloˇlMAC
[6];

102 
	mde°MAC
[6];

103 
	mm_ù
[4];

104 
	mm_√tmask
[4];

105 
	mm_√tg©e
[4];

106 
	mm_dns1
[4];

109 
lib√t_t
 *
	ml
;

110 
pˇp_t
 *
	mp
;

111 
	mp_fd
;

112 
u_öt32_t
 
	ml_ù
;

113 
u_öt32_t
 
	mp_√èddr
, 
	mp_√tmask
;

114 
	mfûãr_buf
[256];

115 
bpf_¥ogøm
 
	mfûãr_code
;

117 
lib√t_ëhî_addr
 *
	ml_ëhî_addr
;

119 
	mp_îrbuf
[
PCAP_ERRBUF_SIZE
];

120 
	ml_îrbuf
[
LIBNET_ERRBUF_SIZE
];

122 
	misFú°PackëFromSîvî
;

127 
ULONG_BYTEARRAY
 
	mm_key
;

129 vﬁ©ûê
sig_©omic_t
 
	mm_°©e
;

130 
sig£t_t
 
	msig£t_fuŒ
,
	msig£t_zîo
;

133 
fd_£t
 
	mªad_£t
;

134 
time•ec
 
	mtimeout
;

135 c⁄° 
u_ch¨
 *
	mpkt_d©a
;

136 
pˇp_pkthdr
 *
	mpkt_hdr
;

137 
u_öt16_t
 
	moff£t
;

138 
ULONG_BYTEARRAY
 
	muTemp
;

139 
	mmsgLí
;

140 
	mmsgBuf
[256];

141 *
	mpmsgBuf
;

	@User.cc

1 
	~"U£r.h
"

2 
	gU£r
::
	$U£r
(*
u£∫ame
, *
∑ssw‹d
, *
nick«me
, *
ÁkeAddªss
)

4 
	`£t_u£∫ame
(
u£∫ame
);

5 
	`£t_∑ssw‹d
(
∑ssw‹d
);

6 
	`£t_nick«me
(
nick«me
);

7 
	`£t_ÁkeAddªss
(
ÁkeAddªss
);

8 
	}
}

9 
	gU£r
::
	$U£r
()

11 
	`mem£t
(
u£∫ame
,'\0',32);

12 
	`mem£t
(
∑ssw‹d
,'\0',32);

13 
	`mem£t
(
nick«me
,'\0',32);

14 
	`mem£t
(
ÁkeAddªss
,'\0',32);

15 
	}
}

16 
	gU£r
::
	$£t_u£∫ame
(c⁄° *
u£∫ame
)

18 if–(
u£∫ame
 =
NULL
) || (username[0] == 0) )

19 
	`¥ötf
("invalidÇame found in mystar.conf!\n");

22 
	`°r˝y
(
this
->
u£∫ame
,username);

23 
	`¥ötf
("u£∫amêi†%s\n",
u£∫ame
);

25 
	}
}

26 
	gU£r
::
	$£t_∑ssw‹d
(c⁄° *
∑ssw‹d
)

28 if–(
∑ssw‹d
 =
NULL
) || (password[0] == 0) )

29 
	`¥ötf
("invalidÖassword found in mystar.conf!\n");

32 
	`°r˝y
(
this
->
∑ssw‹d
,password);

33 
	`¥ötf
("∑ssw‹d i†%s\n", 
∑ssw‹d
);

35 
	}
}

36 
	gU£r
::
	$£t_nick«me
(c⁄° *
nick«me
)

38 if–(
nick«me
=
NULL
) || (nickname[0] == 0) )

39 
	`¥ötf
("invalidÇickname found in mystar.conf!\n");

42 
	`°r˝y
(
this
->
nick«me
,nickname);

43 
	`¥ötf
("nick«mêi†%s\n", 
nick«me
);

45 
	}
}

46 
	gU£r
::
	$£t_ÁkeAddªss
(c⁄° *
ÁkeAddªss
)

48 if–(
ÁkeAddªss
 =
NULL
) || (fakeAddress[0] == 0) )

49 
	`¥ötf
("invalid fakeAddress found in mystar.conf!\n");

52 
	`°r˝y
(
this
->
ÁkeAddªss
,fakeAddress);

55 
	}
}

56 *
	gU£r
::
	$gë_u£∫ame
()

58  
u£∫ame
;

59 
	}
}

60 *
	gU£r
::
	$gë_∑ssw‹d
()

62  
∑ssw‹d
;

63 
	}
}

64 *
	gU£r
::
	$gë_nick«me
()

67  
nick«me
;

68 
	}
}

69 *
	gU£r
::
	$gë_ÁkeAddªss
()

72  
ÁkeAddªss
;

73 
	}
}

	@User.h

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 ˛as†
	cU£r


6 
	mpublic
:

7 
U£r
(*
u£∫ame
, *
∑ssw‹d
, *
nick«me
, *
ÁkeAddªss
);

8 
U£r
();

9 
£t_u£∫ame
(c⁄° *
u£∫ame
);

10 
£t_∑ssw‹d
(c⁄° *
∑ssw‹d
);

11 
£t_nick«me
(c⁄° *
nick«me
);

12 
£t_ÁkeAddªss
(c⁄° *
ÁkeAddªss
);

13 *
gë_u£∫ame
();

14 *
gë_∑ssw‹d
();

15 *
gë_nick«me
();

16 *
gë_ÁkeAddªss
();

17 
	m¥iv©e
:

18 
u£∫ame
[32];

19 
	m∑ssw‹d
[32];

20 
	mnick«me
[32];

21 
	mÁkeAddªss
[32];

	@blog.cc

1 
	~"My°¨.h
"

3 
	gblogIsInôülized
 = 0;

4 
	gm_IP
[4];

5 
	gm_NëMask
[4];

6 
	gm_NëG©e
[4];

7 
	gm_DNS1
[4];

8 
	gcú˛eCheck
[2];

11 
	gMy°¨
::
	$InôülizeBlog
 (c⁄° *
m_ù
, c⁄° *
m_√tmask
,

12 c⁄° *
m_√tg©e
, c⁄° *
m_dns1
)

14 
	`mem˝y
 (
m_IP
, 
m_ù
, 4);

15 
	`mem˝y
 (
m_NëMask
, 
m_√tmask
, 4);

16 
	`mem˝y
 (
m_NëG©e
, 
m_√tg©e
, 4);

17 
	`mem˝y
 (
m_DNS1
, 
m_dns1
, 4);

19 
	`Blog
 ();

21 
blogIsInôülized
 = 1;

22 
	}
}

25 
	gMy°¨
::
	$FûlNëP¨am©î
 (
F‹Fûl
[])

27 i‡(
blogIsInôülized
 == 0)

28 
	`îr_quô
 ("BlogálgorithmÇot initialied yet \n");

30 
F‹Fûl
[0] = 
	`Alog
 (
m_IP
[0]);

31 
F‹Fûl
[1] = 
	`Alog
 (
m_IP
[1]);

32 
F‹Fûl
[2] = 
	`Alog
 (
m_IP
[2]);

33 
F‹Fûl
[3] = 
	`Alog
 (
m_IP
[3]);

34 
F‹Fûl
[4] = 
	`Alog
 (
m_NëMask
[0]);

35 
F‹Fûl
[5] = 
	`Alog
 (
m_NëMask
[1]);

36 
F‹Fûl
[6] = 
	`Alog
 (
m_NëMask
[2]);

37 
F‹Fûl
[7] = 
	`Alog
 (
m_NëMask
[3]);

38 
F‹Fûl
[8] = 
	`Alog
 (
m_NëG©e
[0]);

39 
F‹Fûl
[9] = 
	`Alog
 (
m_NëG©e
[1]);

40 
F‹Fûl
[10] = 
	`Alog
 (
m_NëG©e
[2]);

41 
F‹Fûl
[11] = 
	`Alog
 (
m_NëG©e
[3]);

42 
F‹Fûl
[12] = 
	`Alog
 (
m_DNS1
[0]);

43 
F‹Fûl
[13] = 
	`Alog
 (
m_DNS1
[1]);

44 
F‹Fûl
[14] = 
	`Alog
 (
m_DNS1
[2]);

45 
F‹Fûl
[15] = 
	`Alog
 (
m_DNS1
[3]);

46 
F‹Fûl
[16] = 
	`Alog
 (
cú˛eCheck
[0]);

47 
F‹Fûl
[17] = 
	`Alog
 (
cú˛eCheck
[1]);

48 
	}
}

50 
	gMy°¨
::
	$Alog
 (
BF‹Alog
)

52 
a
 = 0, 
b
 = 0, 
c
 = 0, 
d
 = 0, 
iRt
;

54 
a
 = 
BF‹Alog
;

55 
c
 = 
a
;

56 
d
 = 
a
;

57 
c
 &= 0x40;

58 
b
 = 
a
;

59 
d
 >>= 2;

60 
c
 |
d
;

61 
d
 = 
a
;

62 
c
 >>= 2;

63 
d
 &= 0x20;

64 
c
 |
d
;

65 
d
 = 
a
;

66 
c
 >>= 2;

67 
d
 &= 0x10;

68 
c
 |
d
;

70 
d
 = 
a
;

71 
d
 &= 2;

72 
b
 <<= 2;

73 
d
 |
b
;

74 
b
 = 
a
;

75 
d
 <<= 2;

76 
b
 &= 4;

77 
a
 &= 8;

78 
d
 |
b
;

79 
d
 <<= 2;

80 
d
 |
a
;

82 
c
 >>= 1;

83 
d
 <<= 1;

84 
c
 |
d
;

85 
iRt
 = (~
c
) & 0xff;

86  
iRt
;

87 
	}
}

91 
	gMy°¨
::
	$Blog
 ()

93 
TabÀ
[] =

128 
sCú˛eBa£
[0x15] =

133 
iCú˛e
 = 0x15;

134 
i
, 
ax
 = 0, 
bx
 = 0, 
dx
 = 0;

136 
sCú˛eBa£
[0x05] = 
m_IP
[0];

137 
sCú˛eBa£
[0x06] = 
m_IP
[1];

138 
sCú˛eBa£
[0x07] = 
m_IP
[2];

139 
sCú˛eBa£
[0x08] = 
m_IP
[3];

140 
sCú˛eBa£
[0x09] = 
m_NëMask
[0];

141 
sCú˛eBa£
[0x0a] = 
m_NëMask
[1];

142 
sCú˛eBa£
[0x0b] = 
m_NëMask
[2];

143 
sCú˛eBa£
[0x0c] = 
m_NëMask
[3];

144 
sCú˛eBa£
[0x0d] = 
m_NëG©e
[0];

145 
sCú˛eBa£
[0x0e] = 
m_NëG©e
[1];

146 
sCú˛eBa£
[0x0f] = 
m_NëG©e
[2];

147 
sCú˛eBa£
[0x10] = 
m_NëG©e
[3];

148 
sCú˛eBa£
[0x11] = 
m_DNS1
[0];

149 
sCú˛eBa£
[0x12] = 
m_DNS1
[1];

150 
sCú˛eBa£
[0x13] = 
m_DNS1
[2];

151 
sCú˛eBa£
[0x14] = 
m_DNS1
[3];

153 
i
 = 0; i < 
iCú˛e
; i++)

155 
dx
 = 
ax
;

156 
bx
 = 0;

157 
bx
 = (bx & 0xff00Ë| 
sCú˛eBa£
[
i
];

158 
dx
 &= 0xffff;

159 
dx
 >>= 8;

160 
dx
 ^
bx
;

161 
bx
 = 0;

162 
bx
 &= 0x00ff;

163 
bx
 |(
ax
 & 0xff) << 8;

165 
ax
 = 
TabÀ
[
dx
 * 2] | Table[dx * 2 + 1] << 8;

166 
ax
 ^
bx
;

168 
cú˛eCheck
[0] = (Ë((
ax
 & 0xff00) >> 8);

169 
cú˛eCheck
[1] = (Ë(
ax
 & 0x00ff);

170 
	}
}

	@checkAndSetConfig.cc

1 
	~"My°¨.h
"

2 
	~"töyxml.h
"

3 
	~"töy°r.h
"

5 
	gMy°¨
::
	$checkAndSëC⁄fig
()

8 
TiXmlDocumít
 
	`my°¨c⁄f
("gMystar.xml");

9 if(
my°¨c⁄f
.
	`LﬂdFûe
())

13 
	`öô_fûe
();

16 
TiXmlEÀmít
* 
my°¨roŸ
 = 
my°¨c⁄f
.
	`RoŸEÀmít
();

17 if(
my°¨roŸ
 =
NULL
)

19 
TiXmlEÀmít
* 
U£rsEÀmít
 = 
my°¨roŸ
->
	`Fú°ChûdEÀmít
();

20 if(
U£rsEÀmít
==
NULL
)

22 
TiXmlEÀmít
* 
U£rEÀmít
 = 
U£rsEÀmít
->
	`Fú°ChûdEÀmít
();

23 if(
U£rEÀmít
==
NULL
)

25 
TiXmlEÀmít
 *
nick«me
 = 
U£rEÀmít
->
	`Fú°ChûdEÀmít
();

26 
TiXmlEÀmít
 *
u£∫ame
 = 
nick«me
->
	`NextSiblögEÀmít
();

27 
TiXmlEÀmít
 *
∑ssw‹d
 = 
u£∫ame
->
	`NextSiblögEÀmít
();

28 
TiXmlEÀmít
 *
ÁkeAddªss
 = 
∑ssw‹d
->
	`NextSiblögEÀmít
();

30 
u£r
.
	`£t_nick«me
(
nick«me
->
	`GëText
());

31 
u£r
.
	`£t_u£∫ame
(
u£∫ame
->
	`GëText
());

32 
u£r
.
	`£t_∑ssw‹d
(
∑ssw‹d
->
	`GëText
());

33 
u£r
.
	`£t_ÁkeAddªss
(
ÁkeAddªss
->
	`GëText
());

35 
TiXmlEÀmít
 *
c⁄fig
 = 
U£rsEÀmít
->
	`NextSiblögEÀmít
();

36 
TiXmlEÀmít
 *
authí
 = 
c⁄fig
->
	`Fú°ChûdEÀmít
();

37 
TiXmlEÀmít
 *
nicEÀmít
 = 
authí
->
	`NextSiblögEÀmít
();

38 
TiXmlEÀmít
 *
echo
 = 
nicEÀmít
->
	`NextSiblögEÀmít
();

40 
	`°∫˝y
(
nic
, 
nicEÀmít
->
	`GëText
(), (nic)-1);

41 
nic
[(nic)-1]=0;

42 #ifde‡
DEBUG


43 
	`¥ötf
("ni¯is: %s\n",
nic
);

46 
echoI¡îvÆ
 = 
	`©oi
(
echo
->
	`GëText
());

47 #ifde‡
DEBUG


48 
	`¥ötf
("echoI¡îvÆ is: %d\n",
echoI¡îvÆ
);

52 
	}
}

53 
	gMy°¨
::
	$öô_fûe
()

56 
TiXmlDocumít
 *
myDocumít
 = 
√w
 
	`TiXmlDocumít
();

57 
TiXmlDe˛¨©i⁄
 *
tôÀ
 = 
√w
 
	`TiXmlDe˛¨©i⁄
("1.0","utf-8","yes");

58 
myDocumít
->
	`LökEndChûd
(
tôÀ
);

60 
TiXmlCommít
 *
commít
 = 
√w
 
	`TiXmlCommít
("updateÅhe information below");

61 
myDocumít
->
	`LökEndChûd
(
commít
);

64 
TiXmlEÀmít
 *
RoŸEÀmít
 = 
√w
 
	`TiXmlEÀmít
("mystar");

65 
myDocumít
->
	`LökEndChûd
(
RoŸEÀmít
);

67 
TiXmlEÀmít
 *
U£rsEÀmít
 = 
√w
 
	`TiXmlEÀmít
("users");

68 
RoŸEÀmít
->
	`LökEndChûd
(
U£rsEÀmít
);

70 
TiXmlEÀmít
 *
u£rEÀmít
 = 
√w
 
	`TiXmlEÀmít
("user");

71 
U£rsEÀmít
->
	`LökEndChûd
(
u£rEÀmít
);

73 
u£rEÀmít
->
	`SëAâribuã
("active", "true");

75 
TiXmlEÀmít
 *
ãmpEÀmít
 = 
√w
 
	`TiXmlEÀmít
("nickname");

76 
u£rEÀmít
->
	`LökEndChûd
(
ãmpEÀmít
);

77 
TiXmlText
 *
ãmpC⁄ã¡
 = 
√w
 
	`TiXmlText
("yourÇickÇame");

78 
ãmpEÀmít
->
	`LökEndChûd
(
ãmpC⁄ã¡
);

80 
ãmpEÀmít
 = 
√w
 
	`TiXmlEÀmít
("name");

81 
u£rEÀmít
->
	`LökEndChûd
(
ãmpEÀmít
);

82 
ãmpC⁄ã¡
 = 
√w
 
	`TiXmlText
("your userÇame");

83 
ãmpEÀmít
->
	`LökEndChûd
(
ãmpC⁄ã¡
);

85 
ãmpEÀmít
 = 
√w
 
	`TiXmlEÀmít
("password");

86 
u£rEÀmít
->
	`LökEndChûd
(
ãmpEÀmít
);

87 
ãmpC⁄ã¡
 = 
√w
 
	`TiXmlText
("yourÖassword");

88 
ãmpEÀmít
->
	`LökEndChûd
(
ãmpC⁄ã¡
);

90 
ãmpEÀmít
 = 
√w
 
	`TiXmlEÀmít
("fakeAddress");

91 
u£rEÀmít
->
	`LökEndChûd
(
ãmpEÀmít
);

92 
ãmpC⁄ã¡
 = 
√w
 
	`TiXmlText
("your IPáddress");

93 
ãmpEÀmít
->
	`LökEndChûd
(
ãmpC⁄ã¡
);

95 
TiXmlEÀmít
 *
c⁄figEÀmít
 = 
√w
 
	`TiXmlEÀmít
("config");

96 
RoŸEÀmít
->
	`LökEndChûd
(
c⁄figEÀmít
);

98 
ãmpEÀmít
 = 
√w
 
	`TiXmlEÀmít
("authenticationMode");

99 
c⁄figEÀmít
->
	`LökEndChûd
(
ãmpEÀmít
);

100 
ãmpC⁄ã¡
 = 
√w
 
	`TiXmlText
("0");

101 
ãmpEÀmít
->
	`LökEndChûd
(
ãmpC⁄ã¡
);

103 
ãmpEÀmít
 = 
√w
 
	`TiXmlEÀmít
("nic");

104 
c⁄figEÀmít
->
	`LökEndChûd
(
ãmpEÀmít
);

105 
ãmpC⁄ã¡
 = 
√w
 
	`TiXmlText
("eth0");

106 
ãmpEÀmít
->
	`LökEndChûd
(
ãmpC⁄ã¡
);

108 
ãmpEÀmít
 = 
√w
 
	`TiXmlEÀmít
("echoInterval");

109 
c⁄figEÀmít
->
	`LökEndChûd
(
ãmpEÀmít
);

110 
ãmpC⁄ã¡
 = 
√w
 
	`TiXmlText
("4");

111 
ãmpEÀmít
->
	`LökEndChûd
(
ãmpC⁄ã¡
);

113 
ãmpEÀmít
 = 
√w
 
	`TiXmlEÀmít
("intelligentReconnect");

114 
c⁄figEÀmít
->
	`LökEndChûd
(
ãmpEÀmít
);

115 
ãmpC⁄ã¡
 = 
√w
 
	`TiXmlText
("0");

116 
ãmpEÀmít
->
	`LökEndChûd
(
ãmpC⁄ã¡
);

118 
myDocumít
->
	`SaveFûe
("gMystar.xml");

119 
cout
<<"ÂàùÂßãÂåñÈÖçÁΩÆÊñá‰ª∂gMy°¨.xml"<<
ídl
;

120 
	}
}

121 
	gMy°¨
::
	$modify_fûe
()

123 
TiXmlDocumít
 
	`my°¨c⁄f
("gMystar.xml");

124 if(
my°¨c⁄f
.
	`LﬂdFûe
())

127 
	}
}

	@gMystar.cc

1 
	~"gMy°¨.h
"

2 
	~<±hªad.h
>

3 
ã°
();

4 
	ggMy°¨
::
	$gMy°¨
(
¨gc
, * 
¨gv
[])

6 
Maö
 
	`kô
(
¨gc
, 
¨gv
);

9 
°©us_ic⁄
 = 
SètusIc⁄
::
	`¸óã
(
Gtk
::
Stock
::
HELP
);

10 
°©us_ic⁄
->
	`£t_toﬁtù
("Áî®gtkmmÂíågladeÂÅöÁöÑÈîêÊç∑ÂÆ¢Êà∑Á´Ø.");

14 
ªfXml
 = 
Gnome
::
Gœde
::
Xml
::
	`¸óã
("./gMystar.glade");

15 
My°¨MaöWödow

NULL
;

16 
My°¨MaöWödow

ªfXml
->
	`gë_widgë
("gMystar", MystarMainWindow);

18 
nick«me_íåy

NULL
;

19 
nick«me_íåy
 = 
ªfXml
->
	`gë_widgë
("nickname",Çickname_entry);

20 
nick«me_íåy
->
	`£t_ãxt
(
u£r
.
	`gë_nick«me
());

22 
u£∫ame_íåy

NULL
;

23 
u£∫ame_íåy

ªfXml
->
	`gë_widgë
("username", username_entry);

24 
u£∫ame_íåy
->
	`£t_ãxt
(
u£r
.
	`gë_u£∫ame
());

26 
∑ssw‹d_íåy

NULL
;

27 
∑ssw‹d_íåy

ªfXml
->
	`gë_widgë
("password",Öassword_entry);

28 
∑ssw‹d_íåy
->
	`£t_ãxt
(
u£r
.
	`gë_∑ssw‹d
());

30 
ÁkeAddªss_íåy
 = 
NULL
;

31 
ÁkeAddªss_íåy
 = 
ªfXml
->
	`gë_widgë
("fakeAddress", fakeAddress_entry);

32 
ÁkeAddªss_íåy
->
	`£t_ãxt
(
u£r
.
	`gë_ÁkeAddªss
());

34 
c⁄√˘_buâ⁄
 = 
NULL
;

35 
c⁄√˘_buâ⁄
 = 
ªfXml
->
	`gë_widgë
("connect_button", connect_button);

36 if(
c⁄√˘_buâ⁄
)

38 
c⁄√˘_buâ⁄
->
	`sig«l_˛icked
().
	`c⁄√˘
(
sigc
::
	`mem_fun
(*
this
, &
gMy°¨
::
⁄_buâ⁄_c⁄√˘_˛icked
));

41 
quô_buâ⁄
 = 
NULL
;

42 
quô_buâ⁄
 = 
ªfXml
->
	`gë_widgë
("quit_button", quit_button);

43 if(
quô_buâ⁄
)

45 
quô_buâ⁄
->
	`sig«l_˛icked
().
	`c⁄√˘
(
sigc
::
	`mem_fun
(*
this
, &
gMy°¨
::
⁄_buâ⁄_quô_˛icked
));

48 
°©us_œbñ
 = 
NULL
;

49 
°©us_œbñ
 = 
ªfXml
->
	`gë_widgë
("status",status_label);

53 
kô
.
	`run
(*
My°¨MaöWödow
);

56 
	`authí
();

57 
	}
}

58 
	ggMy°¨
::
	$gMy°¨
()

60 
	`authí
();

61 
	}
}

62 
	ggMy°¨
::
	$⁄_buâ⁄_quô_˛icked
()

64 
My°¨MaöWödow
->
	`hide
();

65 
	}
}

66 
	ggMy°¨
::
	$⁄_buâ⁄_c⁄√˘_˛icked
()

68 
cout
<<"Áî®‰∫éËøûÊé•ÁöÑË¥¶Âè∑‰ø°ÊÅØÊòØ:"<<
ídl
;

69 
°r
[20];

70 
	`°r˝y
(
°r
,
nick«me_íåy
->
	`gë_ãxt
().
	`c_°r
());

71 
u£r
.
	`£t_nick«me
(
°r
);

73 
	`°r˝y
(
°r
,
u£∫ame_íåy
->
	`gë_ãxt
().
	`c_°r
());

74 
u£r
.
	`£t_u£∫ame
(
°r
);

76 
	`°r˝y
(
°r
,
∑ssw‹d_íåy
->
	`gë_ãxt
().
	`c_°r
());

77 
u£r
.
	`£t_∑ssw‹d
(
°r
);

79 
	`°r˝y
(
°r
,
ÁkeAddªss_íåy
->
	`gë_ãxt
().
	`c_°r
());

80 
u£r
.
	`£t_ÁkeAddªss
(
°r
);

84 
	`show_mesßge
("beginÅoáuthen\n");

87 
±hªad_t
 
authí_thªad
;

88 
ªs
;

89 
ªs
 = 
	`±hªad_¸óã
(&
authí_thªad
, 
NULL
, (*(*))()
authí
, NULL);

90 if(
ªs
!=0)

92 
	`≥º‹
("Thread creation failed");

93 
	`exô
(
EXIT_FAILURE
);

95 
	`¥ötf
("authí code:%d\n",
ªs
);

96 
ªs
)

99 
	`modify_fûe
();

111 
	}
}

112 
	ggMy°¨
::
	$hñp
()

114 
	`¥ötf
("to useÇo gui mode,ÖleaseÅype --nogui\n");

115 
	}
}

116 
	ggMy°¨
::
	$show_mesßge
(c⁄° *
mesßge
)

119 
°©us_œbñ
->
	`£t_ãxt
(
mesßge
);

120 
	}
}

121 
	ggMy°¨
::
	$⁄_åay_˛icked
()

123 
	}
}

124 
	$ã°
()

126 
åue
)

128 
cout
<<"hello\n";

129 
	`¶ìp
(4);

132 
	}
}

	@gMystar.h

1 
	~"My°¨.h
"

2 
	~<gtkmm.h
>

3 
	~<libgœdemm.h
>

4 
	~<boo°/Àxiˇl_ˇ°.hµ
>

5 
usög
 
«me•a˚
 
	gGtk
;

7 ˛as†
	cgMy°¨
:
public
 
My°¨


9 
public
:

10 
gMy°¨
(
¨gc
, *
¨gv
[]);

11 
gMy°¨
();

12 
hñp
();

13 
	m¥Ÿe˘ed
:

14 
⁄_buâ⁄_quô_˛icked
();

15 
⁄_buâ⁄_c⁄√˘_˛icked
();

16 
⁄_åay_˛icked
();

17 
show_mesßge
(c⁄° *
mesßge
);

19 
Wödow
 *
	mMy°¨MaöWödow
;

20 
Wödow
 *
	mc⁄√˘ögWödow
;

21 
	mGlib
::
RefPå
<
Gnome
::
Gœde
::
Xml
> 
ªfXml
;

22 
E¡ry
 *
	mu£∫ame_íåy
;

23 
E¡ry
 *
	m∑ssw‹d_íåy
;

24 
E¡ry
 *
	mÁkeAddªss_íåy
;

25 
E¡ry
 *
	mnick«me_íåy
;

26 
Buâ⁄
 *
	mc⁄√˘_buâ⁄
;

27 
Buâ⁄
 *
	mquô_buâ⁄
;

28 
Labñ
 *
	m°©us_œbñ
;

29 
	mGlib
::
RefPå
<
Gtk
::
SètusIc⁄
> 
°©us_ic⁄
;

	@gbk2utf8.cc

1 
	~"My°¨.h
"

2 
	~<ic⁄v.h
>

38 
	$code_c⁄vît
(*
‰om_ch¨£t
,*
to_ch¨£t
,*
öbuf
,
size_t
 
öÀn
,*
outbuf
,size_à
ouéí
)

40 
ic⁄v_t
 
cd
;

41 
rc
;

42 **
pö
 = &
öbuf
;

43 **
pout
 = &
outbuf
;

45 
cd
 = 
	`ic⁄v_›í
(
to_ch¨£t
,
‰om_ch¨£t
);

46 i‡(
cd
==0)  -1;

47 
	`mem£t
(
outbuf
,0,
ouéí
);

48 i‡(
	`ic⁄v
(
cd
,
pö
,&
öÀn
,
pout
,&
ouéí
)==-1)  -1;

49 
	`ic⁄v_˛o£
(
cd
);

51 
	}
}

53 
	$u2g
(*
öbuf
,
öÀn
,*
outbuf
,
ouéí
)

56 
‰om_ch¨£t
[] = "utf-8";

57 
to_ch¨£t
[] = "gb2312";

58  
	`code_c⁄vît
(
‰om_ch¨£t
,
to_ch¨£t
,
öbuf
,
öÀn
,
outbuf
,
ouéí
);

59 
	}
}

61 
	$g2u
(*
öbuf
,
size_t
 
öÀn
,*
outbuf
,size_à
ouéí
)

64 
‰om_ch¨£t
[] = "gb2312";

65 
to_ch¨£t
[] = "utf-8";

66  
	`code_c⁄vît
(
‰om_ch¨£t
,
to_ch¨£t
,
öbuf
,
öÀn
,
outbuf
,
ouéí
);

67 
	}
}

68 *
	gMy°¨
::
	$gbk2utf8
(*
§c
)

70 
utf8_°r
[255];

71 
rc
 = 
	`g2u
(
§c
,
	`°æí
(§c),
utf8_°r
,255);

72 *
utf8_p
 = 
utf8_°r
;

73  
utf8_p
;

74 
	}
}

	@main.cc

1 
	~"gMy°¨.h
"

3 
	$maö
(
¨gc
, *
¨gv
[])

5 if(
¨gc
 == 2)

7 if(!
	`°rcmp
(
¨gv
[1],"--nogui"))

9 
gMy°¨
 
gmy°¨
;

11 if(!
	`°rcmp
(
¨gv
[1],"--help"))

13 
gMy°¨
::
	`hñp
();

15 if(!
	`°rcmp
(
¨gv
[1],"--test"))

20 
	`¥ötf
("usage: gMystar --help for more details");

25 
gMy°¨
 
	`gmy°¨
(
¨gc
, 
¨gv
);

28 
	}
}

	@myerr.cc

3 
	~"My°¨.h
"

6 
	gMy°¨
::
	$îr_ªt
(c⁄° *
fmt
, ...)

8 
va_li°
 
≠
;

10 
	`va_°¨t
(
≠
, 
fmt
);

11 
	`îr_doô
(1, 
fmt
, 
≠
);

12 
	`va_íd
(
≠
);

14 
	}
}

17 
	gMy°¨
::
	$îr_sys
(c⁄° *
fmt
, ...)

19 
va_li°
 
≠
;

21 
	`va_°¨t
(
≠
, 
fmt
);

22 
	`îr_doô
(1, 
fmt
, 
≠
);

23 
	`va_íd
(
≠
);

24 
	`exô
(1);

25 
	}
}

28 
	gMy°¨
::
	$îr_dump
(c⁄° *
fmt
, ...)

30 
va_li°
 
≠
;

32 
	`va_°¨t
(
≠
, 
fmt
);

33 
	`îr_doô
(1, 
fmt
, 
≠
);

34 
	`va_íd
(
≠
);

35 
	`ab‹t
();

36 
	`exô
(1);

37 
	}
}

40 
	gMy°¨
::
	$îr_msg
(c⁄° *
fmt
, ...)

42 
va_li°
 
≠
;

44 
	`va_°¨t
(
≠
, 
fmt
);

45 
	`îr_doô
(0, 
fmt
, 
≠
);

46 
	`va_íd
(
≠
);

48 
	}
}

51 
	gMy°¨
::
	$îr_quô
(c⁄° *
fmt
, ...)

53 
va_li°
 
≠
;

55 
	`va_°¨t
(
≠
, 
fmt
);

56 
	`îr_doô
(0, 
fmt
, 
≠
);

57 
	`va_íd
(
≠
);

58 
	`exô
(1);

59 
	}
}

62 
	gMy°¨
::
	$îr_doô
(
î∫oÊag
, c⁄° *
fmt
, 
va_li°
 
≠
)

64 
î∫o_ßve
;

65 
buf
[4096];

67 
î∫o_ßve
 = 
î∫o
;

68 
	`v•rötf
(
buf
, 
fmt
, 
≠
);

69 i‡(
î∫oÊag
)

70 
	`•rötf
(
buf
+
	`°æí
(buf), ": %s", 
	`°ªº‹
(
î∫o_ßve
));

71 
	`°rˇt
(
buf
, "\n");

72 
	`fÊush
(
°dout
);

73 
	`Âuts
(
buf
, 
°dîr
);

74 
	`fÊush
(
NULL
);

76 
	}
}

	@sendpacket.cc

1 
	~"My°¨.h
"

2 
	gMy°¨
::
	$SídFödSîvîPackë
 (
lib√t_t
 * 
l
)

4 
uöt8_t
 
brﬂdPackage
[0x3E8] = {

15 
uöt8_t
 
Sènd¨dAddr
[] = { 0x01, 0x80, 0xC2, 0x00, 0x00, 0x03 };

16 
uöt8_t
 
SèrAddr
[] = { 0x01, 0xD0, 0xF8, 0x00, 0x00, 0x03 };

21 
	`¥ötf
("hello\n");

23 i‡(
authítiˇti⁄Mode
 == 1)

24 
	`mem˝y
(
brﬂdPackage
, 
SèrAddr
, 6);

26 
	`mem˝y
(
brﬂdPackage
, 
Sènd¨dAddr
, 6);

27 #ifde‡
DEBUG


38 
	`mem˝y
 (
brﬂdPackage
 + 6, 
loˇlMAC
, 6);

39 
	`FûlNëP¨am©î
 (&
brﬂdPackage
[0x17]);

40 
	`Âuts
 (">> Sórchög f‹ sîvî...\n", 
°dout
);

41  (
	`lib√t_wrôe_lök
(
l
, 
brﬂdPackage
, 0x3E8) == 0x3E8) ? 0 : -1;

42 
	}
}

44 
	gMy°¨
::
	$SídNamePackë
 (
lib√t_t
 * 
l
, c⁄° 
u_ch¨
 * 
pkt_d©a
)

46 
uöt8_t
 
ackPackage
[0x3E8] = {

57 
uöt8_t
 
ackShida
[] = {

69 
«meLí
;

71 
«meLí
 = 
	`°æí
 (
u£r
.
	`gë_u£∫ame
());

72 
	`mem˝y
 (
ackPackage
, 
de°MAC
, 6);

73 
	`mem˝y
 (
ackPackage
 + 6, 
loˇlMAC
, 6);

74 
ackPackage
[0x12] = 0x02;

75 
ackPackage
[0x13] = 
pkt_d©a
[0x13];

76 *(*Ë(
ackPackage
 + 0x10Ë
	`ht⁄s
 ((Ë(5 + 
«meLí
));

77 *(*Ë(
ackPackage
 + 0x14) = *(*) (ackPackage + 0x10);

78 
	`mem˝y
 (
ackPackage
 + 0x17, 
u£r
.
	`gë_u£∫ame
(), 
«meLí
);

80 
	`FûlNëP¨am©î
 (&
ackShida
[0x05]);

81 
	`mem˝y
 (
ackPackage
 + 0x17 + 
«meLí
, 
ackShida
, 0x6e);

83 
	`Âuts
 (">> Sídög u£∏«me...\n", 
°dout
);

85  (
	`lib√t_wrôe_lök
 (
l
, 
ackPackage
, 0x3E8) == 0x3E8) ? 0 : -1;

86 
	}
}

88 
	gMy°¨
::
	$SídPassw‹dPackë
 (
lib√t_t
 * 
l
, c⁄° 
u_ch¨
 * 
pkt_d©a
)

90 
uöt8_t
 
ackPackage
[0x3E8] = {

102 
uöt8_t
 
ackShida
[] = {

115 
md5
.
md5Lí
=0;

119 
«meLí
, 
∑ssw‹dLí
;

121 
«meLí
 = 
	`°æí
 (
u£r
.
	`gë_u£∫ame
());

122 
∑ssw‹dLí
 = 
	`°æí
 (
u£r
.
	`gë_∑ssw‹d
());

124 
	`mem˝y
 (
ackPackage
, 
de°MAC
, 6);

125 
	`mem˝y
 (
ackPackage
 + 6, 
loˇlMAC
, 6);

127 
ackPackage
[0x12] = 0x02;

128 
ackPackage
[0x13] = 
pkt_d©a
[0x13];

129 *(
ackPackage
 + 0x16Ë*(
pkt_d©a
 + 0x16);

131 *(*Ë(
ackPackage
 + 0x10Ë
	`ht⁄s
 ((Ë(22 + 
«meLí
));

132 *(*Ë(
ackPackage
 + 0x14) = *(*) (ackPackage + 0x10);

134 
md5
.
md5D©a
[md5.
md5Lí
++] = 
ackPackage
[0x13];

135 
	`mem˝y
 (
md5
.
md5D©a
 + md5.
md5Lí
, 
u£r
.
	`gë_∑ssw‹d
(), 
∑ssw‹dLí
);

136 
md5
.
md5Lí
 +
∑ssw‹dLí
;

137 
	`mem˝y
 (
md5
.
md5D©a
 + md5.
md5Lí
, 
pkt_d©a
 + 0x18,Ökt_data[0x17]);

138 
md5
.
md5Lí
 +
pkt_d©a
[0x17];

139 
md5
.
md5Dig
 = md5.
	`CompuãHash
(md5.
md5D©a
, md5.
md5Lí
);

141 
ackPackage
[0x17] = 16;

142 
	`mem˝y
 (
ackPackage
 + 0x18, 
md5
.
md5Dig
, 16);

144 
	`mem˝y
 (
ackPackage
 + 0x28, 
u£r
.
	`gë_u£∫ame
(), 
«meLí
);

146 
	`FûlNëP¨am©î
 (&
ackShida
[0x05]);

147 
	`mem˝y
 (
ackPackage
 + 0x28 + 
«meLí
, 
ackShida
, 0x6e);

149 
	`Âuts
 (">> SídögÖassw‹d... \n", 
°dout
);

150  (
	`lib√t_wrôe_lök
 (
l
, 
ackPackage
, 0x3E8) == 0x3E8) ? 0 : -1;

151 
	}
}

153 
	gMy°¨
::
	$SídEchoPackë
 (
lib√t_t
 * 
l
, c⁄° 
u_ch¨
 * 
pkt_d©a
, 
ULONG_BYTEARRAY
 *
m_£rülNo
)

155 
uöt8_t
 
echoPackage
[] = {

163 
ULONG_BYTEARRAY
 
uCry±1
, 
uCry±2
, 
uCry±1_A·î
, 
uCry±2_A·î
;

165 
m_£rülNo
->
ulVÆue
++;

167 
uCry±1
.
ulVÆue
 = 
m_key
.ulVÆuê+ 
m_£rülNo
->ulValue;

168 
uCry±2
.
ulVÆue
 = 
m_£rülNo
->ulValue;

170 
	`mem˝y
 (
echoPackage
, 
de°MAC
, 6);

171 
	`mem˝y
 (
echoPackage
 + 6, 
loˇlMAC
, 6);

173 
uCry±1_A·î
.
ulVÆue
 = 
	`ht⁄l
 (
uCry±1
.ulValue);

174 
uCry±2_A·î
.
ulVÆue
 = 
	`ht⁄l
 (
uCry±2
.ulValue);

176 
echoPackage
[0x18] = 
	`Alog
 (
uCry±1_A·î
.
btVÆue
[0]);

177 
echoPackage
[0x19] = 
	`Alog
 (
uCry±1_A·î
.
btVÆue
[1]);

178 
echoPackage
[0x1a] = 
	`Alog
 (
uCry±1_A·î
.
btVÆue
[2]);

179 
echoPackage
[0x1b] = 
	`Alog
 (
uCry±1_A·î
.
btVÆue
[3]);

180 
echoPackage
[0x22] = 
	`Alog
 (
uCry±2_A·î
.
btVÆue
[0]);

181 
echoPackage
[0x23] = 
	`Alog
 (
uCry±2_A·î
.
btVÆue
[1]);

182 
echoPackage
[0x24] = 
	`Alog
 (
uCry±2_A·î
.
btVÆue
[2]);

183 
echoPackage
[0x25] = 
	`Alog
 (
uCry±2_A·î
.
btVÆue
[3]);

184 #ifde‡
DEBUG


185 
	`¥ötf
("sendáÉcho.\n");

187  (
	`lib√t_wrôe_lök
 (
l
, 
echoPackage
, 0x2d) == 0x2d) ? 0 : -1;

188 
	}
}

190 
	gMy°¨
::
	$SídEndCîtPackë
 (
lib√t_t
 * 
l
)

192 
uöt8_t
 
ExôPackë
[] = {

204 
	`mem˝y
(
ExôPackë
, 
de°MAC
, 6);

205 
	`mem˝y
(
ExôPackë
 + 6, 
loˇlMAC
, 6);

206 
	`FûlNëP¨am©î
 (&
ExôPackë
[0x17]);

207 
	`Âuts
 (">> Logoutög... \n", 
°dout
);

208  (
	`lib√t_wrôe_lök
 (
l
, 
ExôPackë
, 0x80) == 0x80) ? 0 : -1;

209 
	}
}

	@tinystr.cpp

30 #i‚de‡
TIXML_USE_STL


32 
	~"töy°r.h
"

35 c⁄° 
	gTiXmlSåög
::
size_ty≥
 
TiXmlSåög
::
≈os
 = 
°©ic_ˇ°
< TiXmlString::size_type >(-1);

39 
	gTiXmlSåög
::
Rï
 
TiXmlSåög
::
nuŒªp_
 = { 0, 0, { '\0' } };

42 
	gTiXmlSåög
::
	$ª£rve
 (
size_ty≥
 
ˇp
)

44 i‡(
ˇp
 > 
	`ˇ∑côy
())

46 
TiXmlSåög
 
tmp
;

47 
tmp
.
	`öô
(
	`Àngth
(), 
ˇp
);

48 
	`mem˝y
(
tmp
.
	`°¨t
(), 
	`d©a
(), 
	`Àngth
());

49 
	`sw≠
(
tmp
);

51 
	}
}

54 
	gTiXmlSåög
& TiXmlSåög::
	$assign
(c⁄° * 
°r
, 
size_ty≥
 
Àn
)

56 
size_ty≥
 
ˇp
 = 
	`ˇ∑côy
();

57 i‡(
Àn
 > 
ˇp
 || cap > 3*(len + 8))

59 
TiXmlSåög
 
tmp
;

60 
tmp
.
	`öô
(
Àn
);

61 
	`mem˝y
(
tmp
.
	`°¨t
(), 
°r
, 
Àn
);

62 
	`sw≠
(
tmp
);

66 
	`memmove
(
	`°¨t
(), 
°r
, 
Àn
);

67 
	`£t_size
(
Àn
);

69  *
this
;

70 
	}
}

73 
	gTiXmlSåög
& TiXmlSåög::
	$≠≥nd
(c⁄° * 
°r
, 
size_ty≥
 
Àn
)

75 
size_ty≥
 
√wsize
 = 
	`Àngth
(Ë+ 
Àn
;

76 i‡(
√wsize
 > 
	`ˇ∑côy
())

78 
	`ª£rve
 (
√wsize
 + 
	`ˇ∑côy
());

80 
	`memmove
(
	`föish
(), 
°r
, 
Àn
);

81 
	`£t_size
(
√wsize
);

82  *
this
;

83 
	}
}

86 
TiXmlSåög
 
	g›î©‹
 + (c⁄° 
	gTiXmlSåög
 & 
	ga
, c⁄° TiXmlSåög & 
	gb
)

88 
TiXmlSåög
 
	gtmp
;

89 
	gtmp
.
ª£rve
(
a
.
Àngth
(Ë+ 
b
.length());

90 
	gtmp
 +
a
;

91 
	gtmp
 +
b
;

92  
	gtmp
;

95 
TiXmlSåög
 
	g›î©‹
 + (c⁄° 
	gTiXmlSåög
 & 
	ga
, c⁄° * 
	gb
)

97 
TiXmlSåög
 
	gtmp
;

98 
	gTiXmlSåög
::
size_ty≥
 
b_Àn
 = 
°©ic_ˇ°
<
TiXmlSåög
::size_ty≥>–
°æí
(
b
) );

99 
	gtmp
.
ª£rve
(
a
.
Àngth
(Ë+ 
b_Àn
);

100 
	gtmp
 +
a
;

101 
	gtmp
.
≠≥nd
(
b
, 
b_Àn
);

102  
	gtmp
;

105 
TiXmlSåög
 
	g›î©‹
 + (c⁄° * 
	ga
, c⁄° 
	gTiXmlSåög
 & 
	gb
)

107 
TiXmlSåög
 
	gtmp
;

108 
	gTiXmlSåög
::
size_ty≥
 
a_Àn
 = 
°©ic_ˇ°
<
TiXmlSåög
::size_ty≥>–
°æí
(
a
) );

109 
	gtmp
.
ª£rve
(
a_Àn
 + 
b
.
Àngth
());

110 
	gtmp
.
≠≥nd
(
a
, 
a_Àn
);

111 
	gtmp
 +
b
;

112  
	gtmp
;

	@tinystr.h

37 #i‚de‡
TIXML_USE_STL


39 #i‚de‡
TIXML_STRING_INCLUDED


40 
	#TIXML_STRING_INCLUDED


	)

42 
	~<as£π.h
>

43 
	~<°rög.h
>

49 #i‡
deföed
(
_MSC_VER
) && (_MSC_VER >= 1200 )

51 
	#TIXML_EXPLICIT
 
ex∂icô


	)

52 #ñi‡
deföed
(
__GNUC__
) && (__GNUC__ >= 3 )

54 
	#TIXML_EXPLICIT
 
ex∂icô


	)

56 
	#TIXML_EXPLICIT


	)

67 ˛as†
	cTiXmlSåög


69 
	mpublic
 :

71 
size_t
 
	tsize_ty≥
;

74 c⁄° 
size_ty≥
 
	m≈os
;

78 
	$TiXmlSåög
 (Ë: 
	$ªp_
(&
nuŒªp_
)

83 
	$TiXmlSåög
 ( c⁄° 
TiXmlSåög
 & 
c›y
Ë: 
	$ªp_
(0)

85 
	`öô
(
c›y
.
	`Àngth
());

86 
	`mem˝y
(
	`°¨t
(), 
c›y
.
	`d©a
(), 
	`Àngth
());

87 
	}
}

90 
TIXML_EXPLICIT
 
	$TiXmlSåög
 ( c⁄° * 
c›y
Ë: 
	$ªp_
(0)

92 
	`öô
–
°©ic_ˇ°
<
size_ty≥
>–
	`°æí
(
c›y
) ));

93 
	`mem˝y
(
	`°¨t
(), 
c›y
, 
	`Àngth
());

94 
	}
}

97 
TIXML_EXPLICIT
 
	$TiXmlSåög
 ( c⁄° * 
°r
, 
size_ty≥
 
Àn
Ë: 
	$ªp_
(0)

99 
	`öô
(
Àn
);

100 
	`mem˝y
(
	`°¨t
(), 
°r
, 
Àn
);

101 
	}
}

104 ~
	$TiXmlSåög
 ()

106 
	`quô
();

107 
	}
}

110 
	gTiXmlSåög
& 
	g›î©‹
 = (c⁄° * 
c›y
)

112  
assign
–
c›y
, (
size_ty≥
)
°æí
(copy));

116 
	gTiXmlSåög
& 
	g›î©‹
 = (c⁄° 
TiXmlSåög
 & 
c›y
)

118  
assign
(
c›y
.
°¨t
(), c›y.
Àngth
());

123 
	gTiXmlSåög
& 
	g›î©‹
 +(c⁄° * 
suffix
)

125  
≠≥nd
(
suffix
, 
°©ic_ˇ°
<
size_ty≥
>–
°æí
(suffix) ));

129 
	gTiXmlSåög
& 
	g›î©‹
 +(
sögÀ
)

131  
≠≥nd
(&
sögÀ
, 1);

135 
	gTiXmlSåög
& 
	g›î©‹
 +(c⁄° 
TiXmlSåög
 & 
suffix
)

137  
≠≥nd
(
suffix
.
d©a
(), suffix.
Àngth
());

142 c⁄° * 
	$c_°r
 (Ëc⁄° {  
ªp_
->
°r
; 
	}
}

145 c⁄° * 
	$d©a
 (Ëc⁄° {  
ªp_
->
°r
; 
	}
}

148 
size_ty≥
 
	$Àngth
 (Ëc⁄° {  
ªp_
->
size
; 
	}
}

151 
size_ty≥
 
	$size
 (Ëc⁄° {  
ªp_
->
size
; 
	}
}

154 
boﬁ
 
	$em±y
 (Ëc⁄° {  
ªp_
->
size
 =0; 
	}
}

157 
size_ty≥
 
	$ˇ∑côy
 (Ëc⁄° {  
ªp_
->
ˇ∑côy
; 
	}
}

161 c⁄° & 
	$©
 (
size_ty≥
 
ödex
) const

163 
	`as£π
–
ödex
 < 
	`Àngth
() );

164  
ªp_
->
°r
[ 
ödex
 ];

165 
	}
}

168 & 
	g›î©‹
 [] (
size_ty≥
 
	gödex
) const

170 
as£π
–
ödex
 < 
Àngth
() );

171  
	gªp_
->
	g°r
[ 
ödex
 ];

175 
size_ty≥
 
	$föd
 (
lookup
) const

177  
	`föd
(
lookup
, 0);

178 
	}
}

181 
size_ty≥
 
	$föd
 (
toföd
, 
size_ty≥
 
off£t
) const

183 i‡(
off£t
 >
	`Àngth
()Ë 
≈os
;

185 c⁄° * 
p
 = 
	`c_°r
(Ë+ 
off£t
; *p != '\0'; ++p)

187 i‡(*
p
 =
toföd
Ë 
°©ic_ˇ°
< 
size_ty≥
 >–∞- 
	`c_°r
() );

189  
≈os
;

190 
	}
}

192 
	$˛ór
 ()

198 
	`quô
();

199 
	`öô
(0,0);

200 
	}
}

205 
ª£rve
 (
size_ty≥
 
ˇp
);

207 
	gTiXmlSåög
& 
assign
 (c⁄° * 
°r
, 
size_ty≥
 
Àn
);

209 
	gTiXmlSåög
& 
≠≥nd
 (c⁄° * 
°r
, 
size_ty≥
 
Àn
);

211 
	$sw≠
 (
TiXmlSåög
& 
Ÿhî
)

213 
Rï
* 
r
 = 
ªp_
;

214 
ªp_
 = 
Ÿhî
.rep_;

215 
Ÿhî
.
ªp_
 = 
r
;

216 
	}
}

218 
	g¥iv©e
:

220 
	$öô
(
size_ty≥
 
sz
Ë{ 
	`öô
(sz, sz); 
	}
}

221 
	$£t_size
(
size_ty≥
 
sz
Ë{ 
ªp_
->
°r
[Ñï_->
size
 = sz ] = '\0'; 
	}
}

222 * 
	$°¨t
(Ëc⁄° {  
ªp_
->
°r
; 
	}
}

223 * 
	$föish
(Ëc⁄° {  
ªp_
->
°r
 +Ñï_->
size
; 
	}
}

225 
	sRï


227 
size_ty≥
 
	gsize
, 
	gˇ∑côy
;

228 
	g°r
[1];

231 
	$öô
(
size_ty≥
 
sz
, size_ty≥ 
ˇp
)

233 i‡(
ˇp
)

240 c⁄° 
size_ty≥
 
byãsNìded
 = (
Rï
Ë+ 
ˇp
;

241 c⁄° 
size_ty≥
 
ötsNìded
 = ( 
byãsNìded
 + () - 1 ) / ( );

242 
ªp_
 = 
ªöãΩªt_ˇ°
<
Rï
*>–
√w
 [ 
ötsNìded
 ] );

244 
ªp_
->
°r
[Ñï_->
size
 = 
sz
 ] = '\0';

245 
ªp_
->
ˇ∑côy
 = 
ˇp
;

249 
ªp_
 = &
nuŒªp_
;

251 
	}
}

253 
	$quô
()

255 i‡(
ªp_
 !&
nuŒªp_
)

259 
dñëe
 [] ( 
ªöãΩªt_ˇ°
<*>–
ªp_
 ) );

261 
	}
}

263 
Rï
 * 
	gªp_
;

264 
Rï
 
	gnuŒªp_
;

269 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
TiXmlSåög
 & 
a
, c⁄° 
	gTiXmlSåög
 & 
	gb
)

271  ( 
	ga
.
Àngth
(Ë=
b
.length() )

272 && ( 
°rcmp
(
a
.
c_°r
(), 
b
.c_str()) == 0 );

274 
ölöe
 
boﬁ
 
	g›î©‹
 < (c⁄° 
	gTiXmlSåög
 & 
	ga
, c⁄° TiXmlSåög & 
	gb
)

276  
°rcmp
(
a
.
c_°r
(), 
b
.c_str()) < 0;

279 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
TiXmlSåög
 & 
a
, c⁄° 
	gTiXmlSåög
 & 
	gb
Ë{  !(
	ga
 =
b
); }

280 
ölöe
 
boﬁ
 
	g›î©‹
 > (c⁄° 
	gTiXmlSåög
 & 
	ga
, c⁄° TiXmlSåög & 
	gb
) {  b <á; }

281 
ölöe
 
boﬁ
 
	g›î©‹
 <(c⁄° 
TiXmlSåög
 & 
a
, c⁄° 
	gTiXmlSåög
 & 
	gb
Ë{  !(b < 
	ga
); }

282 
ölöe
 
boﬁ
 
	g›î©‹
 >(c⁄° 
TiXmlSåög
 & 
a
, c⁄° 
	gTiXmlSåög
 & 
	gb
Ë{  !(
	ga
 < b); }

284 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
TiXmlSåög
 & 
a
, c⁄° * 
	gb
Ë{  
°rcmp
◊.
c_°r
(), 
b
) == 0; }

285 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° * 
a
, c⁄° 
	gTiXmlSåög
 & 
	gb
) {  b ==á; }

286 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
TiXmlSåög
 & 
a
, c⁄° * 
	gb
Ë{  !(
	ga
 =
b
); }

287 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° * 
a
, c⁄° 
	gTiXmlSåög
 & 
	gb
) {  !(b ==á); }

289 
TiXmlSåög
 
	g›î©‹
 + (c⁄° 
	gTiXmlSåög
 & 
	ga
, c⁄° TiXmlSåög & 
	gb
);

290 
TiXmlSåög
 
	g›î©‹
 + (c⁄° 
	gTiXmlSåög
 & 
	ga
, c⁄° * 
	gb
);

291 
TiXmlSåög
 
	g›î©‹
 + (c⁄° * 
	ga
, c⁄° 
	gTiXmlSåög
 & 
	gb
);

298 ˛as†
	cTiXmlOutSåóm
 : 
public
 
TiXmlSåög


300 
public
 :

303 
TiXmlOutSåóm
 & 
›î©‹
 << (c⁄° 
TiXmlSåög
 & 
ö
)

305 *
this
 +
ö
;

306  *
	mthis
;

310 
	gTiXmlOutSåóm
 & 
	g›î©‹
 << (c⁄° * 
	gö
)

312 *
	gthis
 +
ö
;

313  *
	gthis
;

	@tinyxml.cpp

25 
	~<˘y≥.h
>

27 #ifde‡
TIXML_USE_STL


28 
	~<s°ªam
>

29 
	~<io°ªam
>

32 
	~"töyxml.h
"

35 
boﬁ
 
	gTiXmlBa£
::
c⁄dí£WhôeS∑˚
 = 
åue
;

38 
FILE
* 
	$TiXmlFO≥n
–c⁄° * 
fûíame
, c⁄° * 
mode
 )

40 #i‡
	`deföed
(
_MSC_VER
) && (_MSC_VER >= 1400 )

41 
FILE
* 
Â
 = 0;

42 
î∫o_t
 
îr
 = 
	`f›í_s
–&
Â
, 
fûíame
, 
mode
 );

43 i‡–!
îr
 && 
Â
 )

44  
Â
;

47  
	`f›í
–
fûíame
, 
mode
 );

49 
	}
}

51 
	gTiXmlBa£
::
	$EncodeSåög
–c⁄° 
TIXML_STRING
& 
°r
, TIXML_STRING* 
outSåög
 )

53 
i
=0;

55  
i
<()
°r
.
	`Àngth
() )

57 
c
 = (Ë
°r
[
i
];

59 i‡–
c
 == '&'

60 && 
i
 < ( ()
°r
.
	`Àngth
() - 2 )

61 && 
°r
[
i
+1] == '#'

62 && 
°r
[
i
+2] == 'x' )

74  
i
<()
°r
.
	`Àngth
()-1 )

76 
outSåög
->
	`≠≥nd
–
°r
.
	`c_°r
(Ë+ 
i
, 1 );

77 ++
i
;

78 i‡–
°r
[
i
] == ';' )

82 i‡–
c
 == '&' )

84 
outSåög
->
	`≠≥nd
–
ítôy
[0].
°r
,É¡ôy[0].
°rLígth
 );

85 ++
i
;

87 i‡–
c
 == '<' )

89 
outSåög
->
	`≠≥nd
–
ítôy
[1].
°r
,É¡ôy[1].
°rLígth
 );

90 ++
i
;

92 i‡–
c
 == '>' )

94 
outSåög
->
	`≠≥nd
–
ítôy
[2].
°r
,É¡ôy[2].
°rLígth
 );

95 ++
i
;

97 i‡–
c
 == '\"' )

99 
outSåög
->
	`≠≥nd
–
ítôy
[3].
°r
,É¡ôy[3].
°rLígth
 );

100 ++
i
;

102 i‡–
c
 == '\'' )

104 
outSåög
->
	`≠≥nd
–
ítôy
[4].
°r
,É¡ôy[4].
°rLígth
 );

105 ++
i
;

107 i‡–
c
 < 32 )

111 
buf
[ 32 ];

113 #i‡
	`deföed
(
TIXML_SNPRINTF
)

114 
	`TIXML_SNPRINTF
–
buf
, (buf), "&#x%02X;", (Ë–
c
 & 0xff ) );

116 
	`•rötf
–
buf
, "&#x%02X;", (Ë–
c
 & 0xff ) );

121 
outSåög
->
	`≠≥nd
–
buf
, ()
	`°æí
( buf ) );

122 ++
i
;

128 *
outSåög
 +(Ë
c
;

129 ++
i
;

132 
	}
}

135 
	gTiXmlNode
::
	$TiXmlNode
–
NodeTy≥
 
_ty≥
 ) : 
	$TiXmlBa£
()

137 
∑ª¡
 = 0;

138 
ty≥
 = 
_ty≥
;

139 
fú°Chûd
 = 0;

140 
œ°Chûd
 = 0;

141 
¥ev
 = 0;

142 
√xt
 = 0;

143 
	}
}

146 
	gTiXmlNode
::~
	$TiXmlNode
()

148 
TiXmlNode
* 
node
 = 
fú°Chûd
;

149 
TiXmlNode
* 
ãmp
 = 0;

151  
node
 )

153 
ãmp
 = 
node
;

154 
node
 =Çode->
√xt
;

155 
dñëe
 
ãmp
;

157 
	}
}

160 
	gTiXmlNode
::
	$C›yTo
–
TiXmlNode
* 
èrgë
 ) const

162 
èrgë
->
	`SëVÆue
 (
vÆue
.
	`c_°r
() );

163 
èrgë
->
u£rD©a
 = userData;

164 
	}
}

167 
	gTiXmlNode
::
	$CÀ¨
()

169 
TiXmlNode
* 
node
 = 
fú°Chûd
;

170 
TiXmlNode
* 
ãmp
 = 0;

172  
node
 )

174 
ãmp
 = 
node
;

175 
node
 =Çode->
√xt
;

176 
dñëe
 
ãmp
;

179 
fú°Chûd
 = 0;

180 
œ°Chûd
 = 0;

181 
	}
}

184 
TiXmlNode
* 
	gTiXmlNode
::
	$LökEndChûd
–
TiXmlNode
* 
node
 )

186 
	`as£π
–
node
->
∑ª¡
 =0 ||Çode->∑ª¡ =
this
 );

187 
	`as£π
–
node
->
	`GëDocumít
(Ë=0 ||Çode->GëDocumít(Ë=
this
->GetDocument() );

189 i‡–
node
->
	`Ty≥
(Ë=
TiXmlNode
::
DOCUMENT
 )

191 
dñëe
 
node
;

192 i‡–
	`GëDocumít
(ËËGëDocumít()->
	`SëEº‹
–
TIXML_ERROR_DOCUMENT_TOP_ONLY
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

196 
node
->
∑ª¡
 = 
this
;

198 
node
->
¥ev
 = 
œ°Chûd
;

199 
node
->
√xt
 = 0;

201 i‡–
œ°Chûd
 )

202 
œ°Chûd
->
√xt
 = 
node
;

204 
fú°Chûd
 = 
node
;

206 
œ°Chûd
 = 
node
;

207  
node
;

208 
	}
}

211 
TiXmlNode
* 
	gTiXmlNode
::
	$In£πEndChûd
–c⁄° 
TiXmlNode
& 
addThis
 )

213 i‡–
addThis
.
	`Ty≥
(Ë=
TiXmlNode
::
DOCUMENT
 )

215 i‡–
	`GëDocumít
(ËËGëDocumít()->
	`SëEº‹
–
TIXML_ERROR_DOCUMENT_TOP_ONLY
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

218 
TiXmlNode
* 
node
 = 
addThis
.
	`Cl⁄e
();

219 i‡–!
node
 )

222  
	`LökEndChûd
–
node
 );

223 
	}
}

226 
TiXmlNode
* 
	gTiXmlNode
::
	$In£πBef‹eChûd
–
TiXmlNode
* 
bef‹eThis
, c⁄° TiXmlNode& 
addThis
 )

228 i‡–!
bef‹eThis
 || bef‹eThis->
∑ª¡
 !
this
 ) {

231 i‡–
addThis
.
	`Ty≥
(Ë=
TiXmlNode
::
DOCUMENT
 )

233 i‡–
	`GëDocumít
(ËËGëDocumít()->
	`SëEº‹
–
TIXML_ERROR_DOCUMENT_TOP_ONLY
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

237 
TiXmlNode
* 
node
 = 
addThis
.
	`Cl⁄e
();

238 i‡–!
node
 )

240 
node
->
∑ª¡
 = 
this
;

242 
node
->
√xt
 = 
bef‹eThis
;

243 
node
->
¥ev
 = 
bef‹eThis
->prev;

244 i‡–
bef‹eThis
->
¥ev
 )

246 
bef‹eThis
->
¥ev
->
√xt
 = 
node
;

250 
	`as£π
–
fú°Chûd
 =
bef‹eThis
 );

251 
fú°Chûd
 = 
node
;

253 
bef‹eThis
->
¥ev
 = 
node
;

254  
node
;

255 
	}
}

258 
TiXmlNode
* 
	gTiXmlNode
::
	$In£πA·îChûd
–
TiXmlNode
* 
a·îThis
, c⁄° TiXmlNode& 
addThis
 )

260 i‡–!
a·îThis
 ||á·îThis->
∑ª¡
 !
this
 ) {

263 i‡–
addThis
.
	`Ty≥
(Ë=
TiXmlNode
::
DOCUMENT
 )

265 i‡–
	`GëDocumít
(ËËGëDocumít()->
	`SëEº‹
–
TIXML_ERROR_DOCUMENT_TOP_ONLY
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

269 
TiXmlNode
* 
node
 = 
addThis
.
	`Cl⁄e
();

270 i‡–!
node
 )

272 
node
->
∑ª¡
 = 
this
;

274 
node
->
¥ev
 = 
a·îThis
;

275 
node
->
√xt
 = 
a·îThis
->next;

276 i‡–
a·îThis
->
√xt
 )

278 
a·îThis
->
√xt
->
¥ev
 = 
node
;

282 
	`as£π
–
œ°Chûd
 =
a·îThis
 );

283 
œ°Chûd
 = 
node
;

285 
a·îThis
->
√xt
 = 
node
;

286  
node
;

287 
	}
}

290 
TiXmlNode
* 
	gTiXmlNode
::
	$Rïœ˚Chûd
–
TiXmlNode
* 
ª∂a˚This
, c⁄° TiXmlNode& 
wôhThis
 )

292 i‡–
ª∂a˚This
->
∑ª¡
 !
this
 )

295 
TiXmlNode
* 
node
 = 
wôhThis
.
	`Cl⁄e
();

296 i‡–!
node
 )

299 
node
->
√xt
 = 
ª∂a˚This
->next;

300 
node
->
¥ev
 = 
ª∂a˚This
->prev;

302 i‡–
ª∂a˚This
->
√xt
 )

303 
ª∂a˚This
->
√xt
->
¥ev
 = 
node
;

305 
œ°Chûd
 = 
node
;

307 i‡–
ª∂a˚This
->
¥ev
 )

308 
ª∂a˚This
->
¥ev
->
√xt
 = 
node
;

310 
fú°Chûd
 = 
node
;

312 
dñëe
 
ª∂a˚This
;

313 
node
->
∑ª¡
 = 
this
;

314  
node
;

315 
	}
}

318 
boﬁ
 
	gTiXmlNode
::
	$RemoveChûd
–
TiXmlNode
* 
ªmoveThis
 )

320 i‡–
ªmoveThis
->
∑ª¡
 !
this
 )

322 
	`as£π
( 0 );

323  
Ál£
;

326 i‡–
ªmoveThis
->
√xt
 )

327 
ªmoveThis
->
√xt
->
¥ev
 =ÑemoveThis->prev;

329 
œ°Chûd
 = 
ªmoveThis
->
¥ev
;

331 i‡–
ªmoveThis
->
¥ev
 )

332 
ªmoveThis
->
¥ev
->
√xt
 =ÑemoveThis->next;

334 
fú°Chûd
 = 
ªmoveThis
->
√xt
;

336 
dñëe
 
ªmoveThis
;

337  
åue
;

338 
	}
}

340 c⁄° 
TiXmlNode
* 
	gTiXmlNode
::
	$Fú°Chûd
–c⁄° * 
_vÆue
 ) const

342 c⁄° 
TiXmlNode
* 
node
;

343  
node
 = 
fú°Chûd
;Çode;Çodênode->
√xt
 )

345 i‡–
	`°rcmp
–
node
->
	`VÆue
(), 
_vÆue
 ) == 0 )

346  
node
;

349 
	}
}

352 c⁄° 
TiXmlNode
* 
	gTiXmlNode
::
	$La°Chûd
–c⁄° * 
_vÆue
 ) const

354 c⁄° 
TiXmlNode
* 
node
;

355  
node
 = 
œ°Chûd
;Çode;Çodênode->
¥ev
 )

357 i‡–
	`°rcmp
–
node
->
	`VÆue
(), 
_vÆue
 ) == 0 )

358  
node
;

361 
	}
}

364 c⁄° 
TiXmlNode
* 
	gTiXmlNode
::
	$IãøãChûdªn
–c⁄° 
TiXmlNode
* 
¥evious
 ) const

366 i‡–!
¥evious
 )

368  
	`Fú°Chûd
();

372 
	`as£π
–
¥evious
->
∑ª¡
 =
this
 );

373  
¥evious
->
	`NextSiblög
();

375 
	}
}

378 c⁄° 
TiXmlNode
* 
	gTiXmlNode
::
	$IãøãChûdªn
–c⁄° * 
vÆ
, c⁄° 
TiXmlNode
* 
¥evious
 ) const

380 i‡–!
¥evious
 )

382  
	`Fú°Chûd
–
vÆ
 );

386 
	`as£π
–
¥evious
->
∑ª¡
 =
this
 );

387  
¥evious
->
	`NextSiblög
–
vÆ
 );

389 
	}
}

392 c⁄° 
TiXmlNode
* 
	gTiXmlNode
::
	$NextSiblög
–c⁄° * 
_vÆue
 ) const

394 c⁄° 
TiXmlNode
* 
node
;

395  
node
 = 
√xt
;Çode;Çode =Çode->next )

397 i‡–
	`°rcmp
–
node
->
	`VÆue
(), 
_vÆue
 ) == 0 )

398  
node
;

401 
	}
}

404 c⁄° 
TiXmlNode
* 
	gTiXmlNode
::
	$PªviousSiblög
–c⁄° * 
_vÆue
 ) const

406 c⁄° 
TiXmlNode
* 
node
;

407  
node
 = 
¥ev
;Çode;Çode =Çode->prev )

409 i‡–
	`°rcmp
–
node
->
	`VÆue
(), 
_vÆue
 ) == 0 )

410  
node
;

413 
	}
}

416 
	gTiXmlEÀmít
::
	$RemoveAâribuã
–c⁄° * 
«me
 )

418 #ifde‡
TIXML_USE_STL


419 
TIXML_STRING
 
	`°r
–
«me
 );

420 
TiXmlAâribuã
* 
node
 = 
©åibuãSë
.
	`Föd
–
°r
 );

422 
TiXmlAâribuã
* 
node
 = 
©åibuãSë
.
	`Föd
–
«me
 );

424 i‡–
node
 )

426 
©åibuãSë
.
	`Remove
–
node
 );

427 
dñëe
 
node
;

429 
	}
}

431 c⁄° 
TiXmlEÀmít
* 
	gTiXmlNode
::
	$Fú°ChûdEÀmít
() const

433 c⁄° 
TiXmlNode
* 
node
;

435  
node
 = 
	`Fú°Chûd
();

436 
node
;

437 
node
 =Çode->
	`NextSiblög
() )

439 i‡–
node
->
	`ToEÀmít
() )

440  
node
->
	`ToEÀmít
();

443 
	}
}

446 c⁄° 
TiXmlEÀmít
* 
	gTiXmlNode
::
	$Fú°ChûdEÀmít
–c⁄° * 
_vÆue
 ) const

448 c⁄° 
TiXmlNode
* 
node
;

450  
node
 = 
	`Fú°Chûd
–
_vÆue
 );

451 
node
;

452 
node
 =Çode->
	`NextSiblög
–
_vÆue
 ) )

454 i‡–
node
->
	`ToEÀmít
() )

455  
node
->
	`ToEÀmít
();

458 
	}
}

461 c⁄° 
TiXmlEÀmít
* 
	gTiXmlNode
::
	$NextSiblögEÀmít
() const

463 c⁄° 
TiXmlNode
* 
node
;

465  
node
 = 
	`NextSiblög
();

466 
node
;

467 
node
 =Çode->
	`NextSiblög
() )

469 i‡–
node
->
	`ToEÀmít
() )

470  
node
->
	`ToEÀmít
();

473 
	}
}

476 c⁄° 
TiXmlEÀmít
* 
	gTiXmlNode
::
	$NextSiblögEÀmít
–c⁄° * 
_vÆue
 ) const

478 c⁄° 
TiXmlNode
* 
node
;

480  
node
 = 
	`NextSiblög
–
_vÆue
 );

481 
node
;

482 
node
 =Çode->
	`NextSiblög
–
_vÆue
 ) )

484 i‡–
node
->
	`ToEÀmít
() )

485  
node
->
	`ToEÀmít
();

488 
	}
}

491 c⁄° 
TiXmlDocumít
* 
	gTiXmlNode
::
	$GëDocumít
() const

493 c⁄° 
TiXmlNode
* 
node
;

495  
node
 = 
this
;Çode;Çodênode->
∑ª¡
 )

497 i‡–
node
->
	`ToDocumít
() )

498  
node
->
	`ToDocumít
();

501 
	}
}

504 
	gTiXmlEÀmít
::
	$TiXmlEÀmít
 (c⁄° * 
_vÆue
)

505 : 
	`TiXmlNode
–
TiXmlNode
::
ELEMENT
 )

507 
fú°Chûd
 = 
œ°Chûd
 = 0;

508 
vÆue
 = 
_vÆue
;

509 
	}
}

512 #ifde‡
TIXML_USE_STL


513 
	gTiXmlEÀmít
::
TiXmlEÀmít
–c⁄° 
°d
::
°rög
& 
_vÆue
 )

514 : 
TiXmlNode
–TiXmlNode::
ELEMENT
 )

516 
fú°Chûd
 = 
œ°Chûd
 = 0;

517 
	gvÆue
 = 
_vÆue
;

522 
	gTiXmlEÀmít
::
	$TiXmlEÀmít
–c⁄° 
TiXmlEÀmít
& 
c›y
)

523 : 
	`TiXmlNode
–
TiXmlNode
::
ELEMENT
 )

525 
fú°Chûd
 = 
œ°Chûd
 = 0;

526 
c›y
.
	`C›yTo
–
this
 );

527 
	}
}

530 
	gTiXmlEÀmít
::
›î©‹
=–c⁄° 
TiXmlEÀmít
& 
ba£
 )

532 
CÀ¨This
();

533 
	gba£
.
C›yTo
–
this
 );

537 
	gTiXmlEÀmít
::~
	$TiXmlEÀmít
()

539 
	`CÀ¨This
();

540 
	}
}

543 
	gTiXmlEÀmít
::
	$CÀ¨This
()

545 
	`CÀ¨
();

546  
©åibuãSë
.
	`Fú°
() )

548 
TiXmlAâribuã
* 
node
 = 
©åibuãSë
.
	`Fú°
();

549 
©åibuãSë
.
	`Remove
–
node
 );

550 
dñëe
 
node
;

552 
	}
}

555 c⁄° * 
	gTiXmlEÀmít
::
	$Aâribuã
–c⁄° * 
«me
 ) const

557 c⁄° 
TiXmlAâribuã
* 
node
 = 
©åibuãSë
.
	`Föd
–
«me
 );

558 i‡–
node
 )

559  
node
->
	`VÆue
();

561 
	}
}

564 #ifde‡
TIXML_USE_STL


565 c⁄° 
	g°d
::
°rög
* 
TiXmlEÀmít
::
Aâribuã
–c⁄° 
°d
::°rög& 
«me
 ) const

567 c⁄° 
TiXmlAâribuã
* 
node
 = 
©åibuãSë
.
Föd
–
«me
 );

568 i‡–
	gnode
 )

569  &
	gnode
->
VÆueSå
();

575 c⁄° * 
	gTiXmlEÀmít
::
	$Aâribuã
–c⁄° * 
«me
, * 
i
 ) const

577 c⁄° * 
s
 = 
	`Aâribuã
–
«me
 );

578 i‡–
i
 )

580 i‡–
s
 ) {

581 *
i
 = 
	`©oi
–
s
 );

584 *
i
 = 0;

587  
s
;

588 
	}
}

591 #ifde‡
TIXML_USE_STL


592 c⁄° 
	g°d
::
°rög
* 
TiXmlEÀmít
::
Aâribuã
–c⁄° 
°d
::°rög& 
«me
, * 
i
 ) const

594 c⁄° 
	g°d
::
°rög
* 
s
 = 
Aâribuã
–
«me
 );

595 i‡–
	gi
 )

597 i‡–
	gs
 ) {

598 *
	gi
 = 
©oi
–
s
->
c_°r
() );

601 *
	gi
 = 0;

604  
	gs
;

609 c⁄° * 
	gTiXmlEÀmít
::
	$Aâribuã
–c⁄° * 
«me
, * 
d
 ) const

611 c⁄° * 
s
 = 
	`Aâribuã
–
«me
 );

612 i‡–
d
 )

614 i‡–
s
 ) {

615 *
d
 = 
	`©of
–
s
 );

618 *
d
 = 0;

621  
s
;

622 
	}
}

625 #ifde‡
TIXML_USE_STL


626 c⁄° 
	g°d
::
°rög
* 
TiXmlEÀmít
::
Aâribuã
–c⁄° 
°d
::°rög& 
«me
, * 
d
 ) const

628 c⁄° 
	g°d
::
°rög
* 
s
 = 
Aâribuã
–
«me
 );

629 i‡–
	gd
 )

631 i‡–
	gs
 ) {

632 *
	gd
 = 
©of
–
s
->
c_°r
() );

635 *
	gd
 = 0;

638  
	gs
;

643 
	gTiXmlEÀmít
::
	$QuîyI¡Aâribuã
–c⁄° * 
«me
, * 
ivÆ
 ) const

645 c⁄° 
TiXmlAâribuã
* 
node
 = 
©åibuãSë
.
	`Föd
–
«me
 );

646 i‡–!
node
 )

647  
TIXML_NO_ATTRIBUTE
;

648  
node
->
	`QuîyI¡VÆue
–
ivÆ
 );

649 
	}
}

652 #ifde‡
TIXML_USE_STL


653 
	gTiXmlEÀmít
::
QuîyI¡Aâribuã
–c⁄° 
°d
::
°rög
& 
«me
, * 
ivÆ
 ) const

655 c⁄° 
TiXmlAâribuã
* 
	gnode
 = 
©åibuãSë
.
Föd
–
«me
 );

656 i‡–!
	gnode
 )

657  
	gTIXML_NO_ATTRIBUTE
;

658  
	gnode
->
QuîyI¡VÆue
–
ivÆ
 );

663 
	gTiXmlEÀmít
::
	$QuîyDoubÀAâribuã
–c⁄° * 
«me
, * 
dvÆ
 ) const

665 c⁄° 
TiXmlAâribuã
* 
node
 = 
©åibuãSë
.
	`Föd
–
«me
 );

666 i‡–!
node
 )

667  
TIXML_NO_ATTRIBUTE
;

668  
node
->
	`QuîyDoubÀVÆue
–
dvÆ
 );

669 
	}
}

672 #ifde‡
TIXML_USE_STL


673 
	gTiXmlEÀmít
::
QuîyDoubÀAâribuã
–c⁄° 
°d
::
°rög
& 
«me
, * 
dvÆ
 ) const

675 c⁄° 
TiXmlAâribuã
* 
	gnode
 = 
©åibuãSë
.
Föd
–
«me
 );

676 i‡–!
	gnode
 )

677  
	gTIXML_NO_ATTRIBUTE
;

678  
	gnode
->
QuîyDoubÀVÆue
–
dvÆ
 );

683 
	gTiXmlEÀmít
::
	$SëAâribuã
–c⁄° * 
«me
, 
vÆ
 )

685 
buf
[64];

686 #i‡
	`deföed
(
TIXML_SNPRINTF
)

687 
	`TIXML_SNPRINTF
–
buf
, (buf), "%d", 
vÆ
 );

689 
	`•rötf
–
buf
, "%d", 
vÆ
 );

691 
	`SëAâribuã
–
«me
, 
buf
 );

692 
	}
}

695 #ifde‡
TIXML_USE_STL


696 
	gTiXmlEÀmít
::
SëAâribuã
–c⁄° 
°d
::
°rög
& 
«me
, 
vÆ
 )

698 
	g°d
::
o°rög°ªam
 
oss
;

699 
	goss
 << 
	gvÆ
;

700 
SëAâribuã
–
«me
, 
oss
.
°r
() );

705 
	gTiXmlEÀmít
::
	$SëDoubÀAâribuã
–c⁄° * 
«me
, 
vÆ
 )

707 
buf
[256];

708 #i‡
	`deföed
(
TIXML_SNPRINTF
)

709 
	`TIXML_SNPRINTF
–
buf
, (buf), "%f", 
vÆ
 );

711 
	`•rötf
–
buf
, "%f", 
vÆ
 );

713 
	`SëAâribuã
–
«me
, 
buf
 );

714 
	}
}

717 
	gTiXmlEÀmít
::
	$SëAâribuã
–c⁄° * 
˙ame
, c⁄° * 
cvÆue
 )

719 #ifde‡
TIXML_USE_STL


720 
TIXML_STRING
 
	`_«me
–
˙ame
 );

721 
TIXML_STRING
 
	`_vÆue
–
cvÆue
 );

723 c⁄° * 
_«me
 = 
˙ame
;

724 c⁄° * 
_vÆue
 = 
cvÆue
;

727 
TiXmlAâribuã
* 
node
 = 
©åibuãSë
.
	`Föd
–
_«me
 );

728 i‡–
node
 )

730 
node
->
	`SëVÆue
–
_vÆue
 );

734 
TiXmlAâribuã
* 
©åib
 = 
√w
 
	`TiXmlAâribuã
–
˙ame
, 
cvÆue
 );

735 i‡–
©åib
 )

737 
©åibuãSë
.
	`Add
–
©åib
 );

741 
TiXmlDocumít
* 
documít
 = 
	`GëDocumít
();

742 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_OUT_OF_MEMORY
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

744 
	}
}

747 #ifde‡
TIXML_USE_STL


748 
	gTiXmlEÀmít
::
SëAâribuã
–c⁄° 
°d
::
°rög
& 
«me
, c⁄° std::°rög& 
_vÆue
 )

750 
TiXmlAâribuã
* 
node
 = 
©åibuãSë
.
Föd
–
«me
 );

751 i‡–
	gnode
 )

753 
	gnode
->
SëVÆue
–
_vÆue
 );

757 
TiXmlAâribuã
* 
	g©åib
 = 
√w
 TiXmlAâribuã–
«me
, 
_vÆue
 );

758 i‡–
	g©åib
 )

760 
	g©åibuãSë
.
Add
–
©åib
 );

764 
TiXmlDocumít
* 
	gdocumít
 = 
GëDocumít
();

765 i‡–
	gdocumít
 ) documít->
SëEº‹
–
TIXML_ERROR_OUT_OF_MEMORY
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

771 
	gTiXmlEÀmít
::
	$Pröt
–
FILE
* 
cfûe
, 
dïth
 ) const

773 
i
;

774 
	`as£π
–
cfûe
 );

775  
i
=0; i<
dïth
; i++ ) {

776 
	`Ârötf
–
cfûe
, " " );

779 
	`Ârötf
–
cfûe
, "<%s", 
vÆue
.
	`c_°r
() );

781 c⁄° 
TiXmlAâribuã
* 
©åib
;

782  
©åib
 = 
©åibuãSë
.
	`Fú°
();áârib;áârib =áârib->
	`Next
() )

784 
	`Ârötf
–
cfûe
, " " );

785 
©åib
->
	`Pröt
–
cfûe
, 
dïth
 );

792 
TiXmlNode
* 
node
;

793 i‡–!
fú°Chûd
 )

795 
	`Ârötf
–
cfûe
, " />" );

797 i‡–
fú°Chûd
 =
œ°Chûd
 && fú°Chûd->
	`ToText
() )

799 
	`Ârötf
–
cfûe
, ">" );

800 
fú°Chûd
->
	`Pröt
–
cfûe
, 
dïth
 + 1 );

801 
	`Ârötf
–
cfûe
, "</%s>", 
vÆue
.
	`c_°r
() );

805 
	`Ârötf
–
cfûe
, ">" );

807  
node
 = 
fú°Chûd
;Çode;ÇodeÚode->
	`NextSiblög
() )

809 i‡–!
node
->
	`ToText
() )

811 
	`Ârötf
–
cfûe
, "\n" );

813 
node
->
	`Pröt
–
cfûe
, 
dïth
+1 );

815 
	`Ârötf
–
cfûe
, "\n" );

816  
i
=0; i<
dïth
; ++i ) {

817 
	`Ârötf
–
cfûe
, " " );

819 
	`Ârötf
–
cfûe
, "</%s>", 
vÆue
.
	`c_°r
() );

821 
	}
}

824 
	gTiXmlEÀmít
::
	$C›yTo
–
TiXmlEÀmít
* 
èrgë
 ) const

827 
TiXmlNode
::
	`C›yTo
–
èrgë
 );

831 c⁄° 
TiXmlAâribuã
* 
©åibuã
 = 0;

832  
©åibuã
 = 
©åibuãSë
.
	`Fú°
();

833 
©åibuã
;

834 
©åibuã
 =áâribuã->
	`Next
() )

836 
èrgë
->
	`SëAâribuã
–
©åibuã
->
	`Name
(),áâribuã->
	`VÆue
() );

839 
TiXmlNode
* 
node
 = 0;

840  
node
 = 
fú°Chûd
;Çode;Çodênode->
	`NextSiblög
() )

842 
èrgë
->
	`LökEndChûd
–
node
->
	`Cl⁄e
() );

844 
	}
}

846 
boﬁ
 
	gTiXmlEÀmít
::
	$Ac˚±
–
TiXmlVisô‹
* 
visô‹
 ) const

848 i‡–
visô‹
->
	`VisôE¡î
–*
this
, 
©åibuãSë
.
	`Fú°
() ) )

850  c⁄° 
TiXmlNode
* 
node
=
	`Fú°Chûd
();Çode;ÇodeÚode->
	`NextSiblög
() )

852 i‡–!
node
->
	`Ac˚±
–
visô‹
 ) )

856  
visô‹
->
	`VisôExô
–*
this
 );

857 
	}
}

860 
TiXmlNode
* 
	gTiXmlEÀmít
::
	$Cl⁄e
() const

862 
TiXmlEÀmít
* 
˛⁄e
 = 
√w
 
	`TiXmlEÀmít
–
	`VÆue
() );

863 i‡–!
˛⁄e
 )

866 
	`C›yTo
–
˛⁄e
 );

867  
˛⁄e
;

868 
	}
}

871 c⁄° * 
	gTiXmlEÀmít
::
	$GëText
() const

873 c⁄° 
TiXmlNode
* 
chûd
 = 
this
->
	`Fú°Chûd
();

874 i‡–
chûd
 ) {

875 c⁄° 
TiXmlText
* 
chûdText
 = 
chûd
->
	`ToText
();

876 i‡–
chûdText
 ) {

877  
chûdText
->
	`VÆue
();

881 
	}
}

884 
	gTiXmlDocumít
::
	$TiXmlDocumít
(Ë: 
	`TiXmlNode
–
TiXmlNode
::
DOCUMENT
 )

886 
èbsize
 = 4;

887 
u£Mi¸oso·BOM
 = 
Ál£
;

888 
	`CÀ¨Eº‹
();

889 
	}
}

891 
	gTiXmlDocumít
::
	$TiXmlDocumít
–c⁄° * 
documítName
 ) : 
	`TiXmlNode
–
TiXmlNode
::
DOCUMENT
 )

893 
èbsize
 = 4;

894 
u£Mi¸oso·BOM
 = 
Ál£
;

895 
vÆue
 = 
documítName
;

896 
	`CÀ¨Eº‹
();

897 
	}
}

900 #ifde‡
TIXML_USE_STL


901 
	gTiXmlDocumít
::
TiXmlDocumít
–c⁄° 
°d
::
°rög
& 
documítName
 ) : 
TiXmlNode
–TiXmlNode::
DOCUMENT
 )

903 
èbsize
 = 4;

904 
	gu£Mi¸oso·BOM
 = 
Ál£
;

905 
	gvÆue
 = 
documítName
;

906 
CÀ¨Eº‹
();

911 
	gTiXmlDocumít
::
	$TiXmlDocumít
–c⁄° 
TiXmlDocumít
& 
c›y
 ) : 
	`TiXmlNode
–
TiXmlNode
::
DOCUMENT
 )

913 
c›y
.
	`C›yTo
–
this
 );

914 
	}
}

917 
	gTiXmlDocumít
::
›î©‹
=–c⁄° 
TiXmlDocumít
& 
c›y
 )

919 
CÀ¨
();

920 
	gc›y
.
C›yTo
–
this
 );

924 
boﬁ
 
	gTiXmlDocumít
::
	$LﬂdFûe
–
TiXmlEncodög
 
ícodög
 )

929  
	`LﬂdFûe
–
	`VÆue
(), 
ícodög
 );

930 
	}
}

933 
boﬁ
 
	gTiXmlDocumít
::
	$SaveFûe
() const

942  
	`SaveFûe
–
	`VÆue
() );

943 
	}
}

945 
boﬁ
 
	gTiXmlDocumít
::
	$LﬂdFûe
–c⁄° * 
_fûíame
, 
TiXmlEncodög
 
ícodög
 )

954 
TIXML_STRING
 
	`fûíame
–
_fûíame
 );

955 
vÆue
 = 
fûíame
;

958 
FILE
* 
fûe
 = 
	`TiXmlFO≥n
–
vÆue
.
	`c_°r
 (), "rb" );

960 i‡–
fûe
 )

962 
boﬁ
 
ªsu…
 = 
	`LﬂdFûe
–
fûe
, 
ícodög
 );

963 
	`f˛o£
–
fûe
 );

964  
ªsu…
;

968 
	`SëEº‹
–
TIXML_ERROR_OPENING_FILE
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

969  
Ál£
;

971 
	}
}

973 
boﬁ
 
	gTiXmlDocumít
::
	$LﬂdFûe
–
FILE
* 
fûe
, 
TiXmlEncodög
 
ícodög
 )

975 i‡–!
fûe
 )

977 
	`SëEº‹
–
TIXML_ERROR_OPENING_FILE
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

978  
Ál£
;

982 
	`CÀ¨
();

983 
loˇti⁄
.
	`CÀ¨
();

986 
Àngth
 = 0;

987 
	`f£ek
–
fûe
, 0, 
SEEK_END
 );

988 
Àngth
 = 
	`·ñl
–
fûe
 );

989 
	`f£ek
–
fûe
, 0, 
SEEK_SET
 );

992 i‡–
Àngth
 <= 0 )

994 
	`SëEº‹
–
TIXML_ERROR_DOCUMENT_EMPTY
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

995  
Ál£
;

1000 
TIXML_STRING
 
d©a
;

1001 
d©a
.
	`ª£rve
–
Àngth
 );

1024 * 
buf
 = 
√w
 [ 
Àngth
+1 ];

1025 
buf
[0] = 0;

1027 i‡–
	`‰ód
–
buf
, 
Àngth
, 1, 
fûe
 ) != 1 ) {

1028 
dñëe
 [] 
buf
;

1029 
	`SëEº‹
–
TIXML_ERROR_OPENING_FILE
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

1030  
Ál£
;

1033 c⁄° * 
œ°Pos
 = 
buf
;

1034 c⁄° * 
p
 = 
buf
;

1036 
buf
[
Àngth
] = 0;

1037  *
p
 ) {

1038 
	`as£π
–
p
 < (
buf
+
Àngth
) );

1039 i‡–*
p
 == 0xa ) {

1042 
d©a
.
	`≠≥nd
–
œ°Pos
, (
p
-lastPos+1) );

1043 ++
p
;

1044 
œ°Pos
 = 
p
;

1045 
	`as£π
–
p
 <(
buf
+
Àngth
) );

1047 i‡–*
p
 == 0xd ) {

1050 i‡–(
p
-
œ°Pos
) > 0 ) {

1051 
d©a
.
	`≠≥nd
–
œ°Pos
, 
p
-lastPos );

1053 
d©a
 += ()0xa;

1055 i‡–*(
p
+1) == 0xa ) {

1057 
p
 += 2;

1058 
œ°Pos
 = 
p
;

1059 
	`as£π
–
p
 <(
buf
+
Àngth
) );

1063 ++
p
;

1064 
œ°Pos
 = 
p
;

1065 
	`as£π
–
p
 <(
buf
+
Àngth
) );

1069 ++
p
;

1073 i‡–
p
-
œ°Pos
 ) {

1074 
d©a
.
	`≠≥nd
–
œ°Pos
, 
p
-lastPos );

1076 
dñëe
 [] 
buf
;

1077 
buf
 = 0;

1079 
	`P¨£
–
d©a
.
	`c_°r
(), 0, 
ícodög
 );

1081 i‡–
	`Eº‹
() )

1082  
Ál£
;

1084  
åue
;

1085 
	}
}

1088 
boﬁ
 
	gTiXmlDocumít
::
	$SaveFûe
–c⁄° * 
fûíame
 ) const

1091 
FILE
* 
Â
 = 
	`TiXmlFO≥n
–
fûíame
, "w" );

1092 i‡–
Â
 )

1094 
boﬁ
 
ªsu…
 = 
	`SaveFûe
–
Â
 );

1095 
	`f˛o£
–
Â
 );

1096  
ªsu…
;

1098  
Ál£
;

1099 
	}
}

1102 
boﬁ
 
	gTiXmlDocumít
::
	$SaveFûe
–
FILE
* 
Â
 ) const

1104 i‡–
u£Mi¸oso·BOM
 )

1106 c⁄° 
TIXML_UTF_LEAD_0
 = 0xefU;

1107 c⁄° 
TIXML_UTF_LEAD_1
 = 0xbbU;

1108 c⁄° 
TIXML_UTF_LEAD_2
 = 0xbfU;

1110 
	`Âutc
–
TIXML_UTF_LEAD_0
, 
Â
 );

1111 
	`Âutc
–
TIXML_UTF_LEAD_1
, 
Â
 );

1112 
	`Âutc
–
TIXML_UTF_LEAD_2
, 
Â
 );

1114 
	`Pröt
–
Â
, 0 );

1115  (
	`„º‹
(
Â
) == 0);

1116 
	}
}

1119 
	gTiXmlDocumít
::
	$C›yTo
–
TiXmlDocumít
* 
èrgë
 ) const

1121 
TiXmlNode
::
	`C›yTo
–
èrgë
 );

1123 
èrgë
->
îr‹
 =Érror;

1124 
èrgë
->
îr‹Id
 =ÉrrorId;

1125 
èrgë
->
îr‹Desc
 =ÉrrorDesc;

1126 
èrgë
->
èbsize
 =Åabsize;

1127 
èrgë
->
îr‹Loˇti⁄
 =ÉrrorLocation;

1128 
èrgë
->
u£Mi¸oso·BOM
 = useMicrosoftBOM;

1130 
TiXmlNode
* 
node
 = 0;

1131  
node
 = 
fú°Chûd
;Çode;Çodênode->
	`NextSiblög
() )

1133 
èrgë
->
	`LökEndChûd
–
node
->
	`Cl⁄e
() );

1135 
	}
}

1138 
TiXmlNode
* 
	gTiXmlDocumít
::
	$Cl⁄e
() const

1140 
TiXmlDocumít
* 
˛⁄e
 = 
√w
 
	`TiXmlDocumít
();

1141 i‡–!
˛⁄e
 )

1144 
	`C›yTo
–
˛⁄e
 );

1145  
˛⁄e
;

1146 
	}
}

1149 
	gTiXmlDocumít
::
	$Pröt
–
FILE
* 
cfûe
, 
dïth
 ) const

1151 
	`as£π
–
cfûe
 );

1152  c⁄° 
TiXmlNode
* 
node
=
	`Fú°Chûd
();Çode;ÇodeÚode->
	`NextSiblög
() )

1154 
node
->
	`Pröt
–
cfûe
, 
dïth
 );

1155 
	`Ârötf
–
cfûe
, "\n" );

1157 
	}
}

1160 
boﬁ
 
	gTiXmlDocumít
::
	$Ac˚±
–
TiXmlVisô‹
* 
visô‹
 ) const

1162 i‡–
visô‹
->
	`VisôE¡î
–*
this
 ) )

1164  c⁄° 
TiXmlNode
* 
node
=
	`Fú°Chûd
();Çode;ÇodeÚode->
	`NextSiblög
() )

1166 i‡–!
node
->
	`Ac˚±
–
visô‹
 ) )

1170  
visô‹
->
	`VisôExô
–*
this
 );

1171 
	}
}

1174 c⁄° 
TiXmlAâribuã
* 
	gTiXmlAâribuã
::
	$Next
() const

1178 i‡–
√xt
->
vÆue
.
	`em±y
(Ë&&Çext->
«me
.empty() )

1180  
√xt
;

1181 
	}
}

1194 c⁄° 
TiXmlAâribuã
* 
	gTiXmlAâribuã
::
	$Pªvious
() const

1198 i‡–
¥ev
->
vÆue
.
	`em±y
(Ë&&Öªv->
«me
.empty() )

1200  
¥ev
;

1201 
	}
}

1214 
	gTiXmlAâribuã
::
	$Pröt
–
FILE
* 
cfûe
, , 
TIXML_STRING
* 
°r
 ) const

1216 
TIXML_STRING
 
n
, 
v
;

1218 
	`EncodeSåög
–
«me
, &
n
 );

1219 
	`EncodeSåög
–
vÆue
, &
v
 );

1221 i‡(
vÆue
.
	`föd
 ('\"'Ë=
TIXML_STRING
::
≈os
) {

1222 i‡–
cfûe
 ) {

1223 
	`Ârötf
 (
cfûe
, "%s=\"%s\"", 
n
.
	`c_°r
(), 
v
.c_str() );

1225 i‡–
°r
 ) {

1226 (*
°r
Ë+
n
; (*°rË+"=\""; (*°rË+
v
; (*str) += "\"";

1230 i‡–
cfûe
 ) {

1231 
	`Ârötf
 (
cfûe
, "%s='%s'", 
n
.
	`c_°r
(), 
v
.c_str() );

1233 i‡–
°r
 ) {

1234 (*
°r
Ë+
n
; (*°rË+"='"; (*°rË+
v
; (*str) += "'";

1237 
	}
}

1240 
	gTiXmlAâribuã
::
	$QuîyI¡VÆue
–* 
ivÆ
 ) const

1242 i‡–
	`TIXML_SSCANF
–
vÆue
.
	`c_°r
(), "%d", 
ivÆ
 ) == 1 )

1243  
TIXML_SUCCESS
;

1244  
TIXML_WRONG_TYPE
;

1245 
	}
}

1247 
	gTiXmlAâribuã
::
	$QuîyDoubÀVÆue
–* 
dvÆ
 ) const

1249 i‡–
	`TIXML_SSCANF
–
vÆue
.
	`c_°r
(), "%lf", 
dvÆ
 ) == 1 )

1250  
TIXML_SUCCESS
;

1251  
TIXML_WRONG_TYPE
;

1252 
	}
}

1254 
	gTiXmlAâribuã
::
	$SëI¡VÆue
–
_vÆue
 )

1256 
buf
 [64];

1257 #i‡
	`deföed
(
TIXML_SNPRINTF
)

1258 
	`TIXML_SNPRINTF
(
buf
, (buf), "%d", 
_vÆue
);

1260 
	`•rötf
 (
buf
, "%d", 
_vÆue
);

1262 
	`SëVÆue
 (
buf
);

1263 
	}
}

1265 
	gTiXmlAâribuã
::
	$SëDoubÀVÆue
–
_vÆue
 )

1267 
buf
 [256];

1268 #i‡
	`deföed
(
TIXML_SNPRINTF
)

1269 
	`TIXML_SNPRINTF
–
buf
, (buf), "%lf", 
_vÆue
);

1271 
	`•rötf
 (
buf
, "%lf", 
_vÆue
);

1273 
	`SëVÆue
 (
buf
);

1274 
	}
}

1276 
	gTiXmlAâribuã
::
	$I¡VÆue
() const

1278  
	`©oi
 (
vÆue
.
	`c_°r
 ());

1279 
	}
}

1281 
	gTiXmlAâribuã
::
	$DoubÀVÆue
() const

1283  
	`©of
 (
vÆue
.
	`c_°r
 ());

1284 
	}
}

1287 
	gTiXmlCommít
::
	$TiXmlCommít
–c⁄° 
TiXmlCommít
& 
c›y
 ) : 
	`TiXmlNode
–
TiXmlNode
::
COMMENT
 )

1289 
c›y
.
	`C›yTo
–
this
 );

1290 
	}
}

1293 
	gTiXmlCommít
::
›î©‹
=–c⁄° 
TiXmlCommít
& 
ba£
 )

1295 
CÀ¨
();

1296 
	gba£
.
C›yTo
–
this
 );

1300 
	gTiXmlCommít
::
	$Pröt
–
FILE
* 
cfûe
, 
dïth
 ) const

1302 
	`as£π
–
cfûe
 );

1303  
i
=0; i<
dïth
; i++ )

1305 
	`Ârötf
–
cfûe
, " " );

1307 
	`Ârötf
–
cfûe
, "<!--%s-->", 
vÆue
.
	`c_°r
() );

1308 
	}
}

1311 
	gTiXmlCommít
::
	$C›yTo
–
TiXmlCommít
* 
èrgë
 ) const

1313 
TiXmlNode
::
	`C›yTo
–
èrgë
 );

1314 
	}
}

1317 
boﬁ
 
	gTiXmlCommít
::
	$Ac˚±
–
TiXmlVisô‹
* 
visô‹
 ) const

1319  
visô‹
->
	`Visô
–*
this
 );

1320 
	}
}

1323 
TiXmlNode
* 
	gTiXmlCommít
::
	$Cl⁄e
() const

1325 
TiXmlCommít
* 
˛⁄e
 = 
√w
 
	`TiXmlCommít
();

1327 i‡–!
˛⁄e
 )

1330 
	`C›yTo
–
˛⁄e
 );

1331  
˛⁄e
;

1332 
	}
}

1335 
	gTiXmlText
::
	$Pröt
–
FILE
* 
cfûe
, 
dïth
 ) const

1337 
	`as£π
–
cfûe
 );

1338 i‡–
cd©a
 )

1340 
i
;

1341 
	`Ârötf
–
cfûe
, "\n" );

1342  
i
=0; i<
dïth
; i++ ) {

1343 
	`Ârötf
–
cfûe
, " " );

1345 
	`Ârötf
–
cfûe
, "<![CDATA[%s]]>\n", 
vÆue
.
	`c_°r
() );

1349 
TIXML_STRING
 
buf„r
;

1350 
	`EncodeSåög
–
vÆue
, &
buf„r
 );

1351 
	`Ârötf
–
cfûe
, "%s", 
buf„r
.
	`c_°r
() );

1353 
	}
}

1356 
	gTiXmlText
::
	$C›yTo
–
TiXmlText
* 
èrgë
 ) const

1358 
TiXmlNode
::
	`C›yTo
–
èrgë
 );

1359 
èrgë
->
cd©a
 = cdata;

1360 
	}
}

1363 
boﬁ
 
	gTiXmlText
::
	$Ac˚±
–
TiXmlVisô‹
* 
visô‹
 ) const

1365  
visô‹
->
	`Visô
–*
this
 );

1366 
	}
}

1369 
TiXmlNode
* 
	gTiXmlText
::
	$Cl⁄e
() const

1371 
TiXmlText
* 
˛⁄e
 = 0;

1372 
˛⁄e
 = 
√w
 
	`TiXmlText
( "" );

1374 i‡–!
˛⁄e
 )

1377 
	`C›yTo
–
˛⁄e
 );

1378  
˛⁄e
;

1379 
	}
}

1382 
	gTiXmlDe˛¨©i⁄
::
	$TiXmlDe˛¨©i⁄
–c⁄° * 
_vîsi⁄
,

1383 c⁄° * 
_ícodög
,

1384 c⁄° * 
_°™dÆ⁄e
 )

1385 : 
	`TiXmlNode
–
TiXmlNode
::
DECLARATION
 )

1387 
vîsi⁄
 = 
_vîsi⁄
;

1388 
ícodög
 = 
_ícodög
;

1389 
°™dÆ⁄e
 = 
_°™dÆ⁄e
;

1390 
	}
}

1393 #ifde‡
TIXML_USE_STL


1394 
	gTiXmlDe˛¨©i⁄
::
TiXmlDe˛¨©i⁄
–c⁄° 
°d
::
°rög
& 
_vîsi⁄
,

1395 c⁄° 
°d
::
°rög
& 
_ícodög
,

1396 c⁄° 
°d
::
°rög
& 
_°™dÆ⁄e
 )

1397 : 
TiXmlNode
–TiXmlNode::
DECLARATION
 )

1399 
vîsi⁄
 = 
_vîsi⁄
;

1400 
	gícodög
 = 
_ícodög
;

1401 
	g°™dÆ⁄e
 = 
_°™dÆ⁄e
;

1406 
	gTiXmlDe˛¨©i⁄
::
	$TiXmlDe˛¨©i⁄
–c⁄° 
TiXmlDe˛¨©i⁄
& 
c›y
 )

1407 : 
	`TiXmlNode
–
TiXmlNode
::
DECLARATION
 )

1409 
c›y
.
	`C›yTo
–
this
 );

1410 
	}
}

1413 
	gTiXmlDe˛¨©i⁄
::
›î©‹
=–c⁄° 
TiXmlDe˛¨©i⁄
& 
c›y
 )

1415 
CÀ¨
();

1416 
	gc›y
.
C›yTo
–
this
 );

1420 
	gTiXmlDe˛¨©i⁄
::
	$Pröt
–
FILE
* 
cfûe
, , 
TIXML_STRING
* 
°r
 ) const

1422 i‡–
cfûe
 ) 
	`Ârötf
( cfile, "<?xml " );

1423 i‡–
°r
 ) (*str) += "<?xml ";

1425 i‡–!
vîsi⁄
.
	`em±y
() ) {

1426 i‡–
cfûe
 ) 
	`Ârötf
 (cfûe, "vîsi⁄=\"%s\" ", 
vîsi⁄
.
	`c_°r
 ());

1427 i‡–
°r
 ) { (*°rË+"vîsi⁄=\""; (*°rË+
vîsi⁄
; (*str) += "\" "; }

1429 i‡–!
ícodög
.
	`em±y
() ) {

1430 i‡–
cfûe
 ) 
	`Ârötf
 (cfûe, "ícodög=\"%s\" ", 
ícodög
.
	`c_°r
 ());

1431 i‡–
°r
 ) { (*°rË+"ícodög=\""; (*°rË+
ícodög
; (*str) += "\" "; }

1433 i‡–!
°™dÆ⁄e
.
	`em±y
() ) {

1434 i‡–
cfûe
 ) 
	`Ârötf
 (cfûe, "°™dÆ⁄e=\"%s\" ", 
°™dÆ⁄e
.
	`c_°r
 ());

1435 i‡–
°r
 ) { (*°rË+"°™dÆ⁄e=\""; (*°rË+
°™dÆ⁄e
; (*str) += "\" "; }

1437 i‡–
cfûe
 ) 
	`Ârötf
( cfile, "?>" );

1438 i‡–
°r
 ) (*str) += "?>";

1439 
	}
}

1442 
	gTiXmlDe˛¨©i⁄
::
	$C›yTo
–
TiXmlDe˛¨©i⁄
* 
èrgë
 ) const

1444 
TiXmlNode
::
	`C›yTo
–
èrgë
 );

1446 
èrgë
->
vîsi⁄
 = version;

1447 
èrgë
->
ícodög
 =Éncoding;

1448 
èrgë
->
°™dÆ⁄e
 = standalone;

1449 
	}
}

1452 
boﬁ
 
	gTiXmlDe˛¨©i⁄
::
	$Ac˚±
–
TiXmlVisô‹
* 
visô‹
 ) const

1454  
visô‹
->
	`Visô
–*
this
 );

1455 
	}
}

1458 
TiXmlNode
* 
	gTiXmlDe˛¨©i⁄
::
	$Cl⁄e
() const

1460 
TiXmlDe˛¨©i⁄
* 
˛⁄e
 = 
√w
 
	`TiXmlDe˛¨©i⁄
();

1462 i‡–!
˛⁄e
 )

1465 
	`C›yTo
–
˛⁄e
 );

1466  
˛⁄e
;

1467 
	}
}

1470 
	gTiXmlUnknown
::
	$Pröt
–
FILE
* 
cfûe
, 
dïth
 ) const

1472  
i
=0; i<
dïth
; i++ )

1473 
	`Ârötf
–
cfûe
, " " );

1474 
	`Ârötf
–
cfûe
, "<%s>", 
vÆue
.
	`c_°r
() );

1475 
	}
}

1478 
	gTiXmlUnknown
::
	$C›yTo
–
TiXmlUnknown
* 
èrgë
 ) const

1480 
TiXmlNode
::
	`C›yTo
–
èrgë
 );

1481 
	}
}

1484 
boﬁ
 
	gTiXmlUnknown
::
	$Ac˚±
–
TiXmlVisô‹
* 
visô‹
 ) const

1486  
visô‹
->
	`Visô
–*
this
 );

1487 
	}
}

1490 
TiXmlNode
* 
	gTiXmlUnknown
::
	$Cl⁄e
() const

1492 
TiXmlUnknown
* 
˛⁄e
 = 
√w
 
	`TiXmlUnknown
();

1494 i‡–!
˛⁄e
 )

1497 
	`C›yTo
–
˛⁄e
 );

1498  
˛⁄e
;

1499 
	}
}

1502 
	gTiXmlAâribuãSë
::
	$TiXmlAâribuãSë
()

1504 
£¡öñ
.
√xt
 = &sentinel;

1505 
£¡öñ
.
¥ev
 = &sentinel;

1506 
	}
}

1509 
	gTiXmlAâribuãSë
::~
	$TiXmlAâribuãSë
()

1511 
	`as£π
–
£¡öñ
.
√xt
 == &sentinel );

1512 
	`as£π
–
£¡öñ
.
¥ev
 == &sentinel );

1513 
	}
}

1516 
	gTiXmlAâribuãSë
::
	$Add
–
TiXmlAâribuã
* 
addMe
 )

1518 #ifde‡
TIXML_USE_STL


1519 
	`as£π
–!
	`Föd
–
	`TIXML_STRING
–
addMe
->
	`Name
() ) ) );

1521 
	`as£π
–!
	`Föd
–
addMe
->
	`Name
() ) );

1524 
addMe
->
√xt
 = &
£¡öñ
;

1525 
addMe
->
¥ev
 = 
£¡öñ
.prev;

1527 
£¡öñ
.
¥ev
->
√xt
 = 
addMe
;

1528 
£¡öñ
.
¥ev
 = 
addMe
;

1529 
	}
}

1531 
	gTiXmlAâribuãSë
::
	$Remove
–
TiXmlAâribuã
* 
ªmoveMe
 )

1533 
TiXmlAâribuã
* 
node
;

1535  
node
 = 
£¡öñ
.
√xt
;Çode != &sentinel;Çode =Çode->next )

1537 i‡–
node
 =
ªmoveMe
 )

1539 
node
->
¥ev
->
√xt
 =Çode->next;

1540 
node
->
√xt
->
¥ev
 =Çode->prev;

1541 
node
->
√xt
 = 0;

1542 
node
->
¥ev
 = 0;

1546 
	`as£π
( 0 );

1547 
	}
}

1550 #ifde‡
TIXML_USE_STL


1551 c⁄° 
TiXmlAâribuã
* 
	gTiXmlAâribuãSë
::
Föd
–c⁄° 
°d
::
°rög
& 
«me
 ) const

1553  c⁄° 
TiXmlAâribuã
* 
node
 = 
£¡öñ
.
√xt
; 
	gnode
 != &sentinel;Çode =Çode->next )

1555 i‡–
node
->
«me
 ==Çame )

1556  
node
;

1575 c⁄° 
TiXmlAâribuã
* 
	gTiXmlAâribuãSë
::
	$Föd
–c⁄° * 
«me
 ) const

1577  c⁄° 
TiXmlAâribuã
* 
node
 = 
£¡öñ
.
√xt
;Çode != &sentinel;Çode =Çode->next )

1579 i‡–
	`°rcmp
–
node
->
«me
.
	`c_°r
(),Çame ) == 0 )

1580  
node
;

1583 
	}
}

1597 #ifde‡
TIXML_USE_STL


1598 
	g°d
::
i°ªam
& 
›î©‹
>> (
°d
::i°ªam & 
ö
, 
	gTiXmlNode
 & 
	gba£
)

1600 
TIXML_STRING
 
	gèg
;

1601 
	gèg
.
ª£rve
( 8 * 1000 );

1602 
	gba£
.
SåómIn
–&
ö
, &
èg
 );

1604 
	gba£
.
P¨£
–
èg
.
c_°r
(), 0, 
TIXML_DEFAULT_ENCODING
 );

1605  
	gö
;

1610 #ifde‡
TIXML_USE_STL


1611 
	g°d
::
o°ªam
& 
›î©‹
<< (
°d
::o°ªam & 
out
, c⁄° 
	gTiXmlNode
 & 
	gba£
)

1613 
TiXmlPröãr
 
	g¥öãr
;

1614 
	g¥öãr
.
SëSåómPrötög
();

1615 
	gba£
.
Ac˚±
–&
¥öãr
 );

1616 
	gout
 << 
	g¥öãr
.
Så
();

1618  
	gout
;

1622 
	g°d
::
°rög
& 
›î©‹
<< (
°d
::°rög& 
out
, c⁄° 
	gTiXmlNode
& 
	gba£
 )

1624 
TiXmlPröãr
 
	g¥öãr
;

1625 
	g¥öãr
.
SëSåómPrötög
();

1626 
	gba£
.
Ac˚±
–&
¥öãr
 );

1627 
	gout
.
≠≥nd
–
¥öãr
.
Så
() );

1629  
	gout
;

1634 
TiXmlH™dÀ
 
	gTiXmlH™dÀ
::
	$Fú°Chûd
() const

1636 i‡–
node
 )

1638 
TiXmlNode
* 
chûd
 = 
node
->
	`Fú°Chûd
();

1639 i‡–
chûd
 )

1640  
	`TiXmlH™dÀ
–
chûd
 );

1642  
	`TiXmlH™dÀ
( 0 );

1643 
	}
}

1646 
TiXmlH™dÀ
 
	gTiXmlH™dÀ
::
	$Fú°Chûd
–c⁄° * 
vÆue
 ) const

1648 i‡–
node
 )

1650 
TiXmlNode
* 
chûd
 = 
node
->
	`Fú°Chûd
–
vÆue
 );

1651 i‡–
chûd
 )

1652  
	`TiXmlH™dÀ
–
chûd
 );

1654  
	`TiXmlH™dÀ
( 0 );

1655 
	}
}

1658 
TiXmlH™dÀ
 
	gTiXmlH™dÀ
::
	$Fú°ChûdEÀmít
() const

1660 i‡–
node
 )

1662 
TiXmlEÀmít
* 
chûd
 = 
node
->
	`Fú°ChûdEÀmít
();

1663 i‡–
chûd
 )

1664  
	`TiXmlH™dÀ
–
chûd
 );

1666  
	`TiXmlH™dÀ
( 0 );

1667 
	}
}

1670 
TiXmlH™dÀ
 
	gTiXmlH™dÀ
::
	$Fú°ChûdEÀmít
–c⁄° * 
vÆue
 ) const

1672 i‡–
node
 )

1674 
TiXmlEÀmít
* 
chûd
 = 
node
->
	`Fú°ChûdEÀmít
–
vÆue
 );

1675 i‡–
chûd
 )

1676  
	`TiXmlH™dÀ
–
chûd
 );

1678  
	`TiXmlH™dÀ
( 0 );

1679 
	}
}

1682 
TiXmlH™dÀ
 
	gTiXmlH™dÀ
::
	$Chûd
–
cou¡
 ) const

1684 i‡–
node
 )

1686 
i
;

1687 
TiXmlNode
* 
chûd
 = 
node
->
	`Fú°Chûd
();

1688  
i
=0;

1689 
chûd
 && 
i
<
cou¡
;

1690 
chûd
 = chûd->
	`NextSiblög
(), ++
i
 )

1694 i‡–
chûd
 )

1695  
	`TiXmlH™dÀ
–
chûd
 );

1697  
	`TiXmlH™dÀ
( 0 );

1698 
	}
}

1701 
TiXmlH™dÀ
 
	gTiXmlH™dÀ
::
	$Chûd
–c⁄° * 
vÆue
, 
cou¡
 ) const

1703 i‡–
node
 )

1705 
i
;

1706 
TiXmlNode
* 
chûd
 = 
node
->
	`Fú°Chûd
–
vÆue
 );

1707  
i
=0;

1708 
chûd
 && 
i
<
cou¡
;

1709 
chûd
 = chûd->
	`NextSiblög
–
vÆue
 ), ++
i
 )

1713 i‡–
chûd
 )

1714  
	`TiXmlH™dÀ
–
chûd
 );

1716  
	`TiXmlH™dÀ
( 0 );

1717 
	}
}

1720 
TiXmlH™dÀ
 
	gTiXmlH™dÀ
::
	$ChûdEÀmít
–
cou¡
 ) const

1722 i‡–
node
 )

1724 
i
;

1725 
TiXmlEÀmít
* 
chûd
 = 
node
->
	`Fú°ChûdEÀmít
();

1726  
i
=0;

1727 
chûd
 && 
i
<
cou¡
;

1728 
chûd
 = chûd->
	`NextSiblögEÀmít
(), ++
i
 )

1732 i‡–
chûd
 )

1733  
	`TiXmlH™dÀ
–
chûd
 );

1735  
	`TiXmlH™dÀ
( 0 );

1736 
	}
}

1739 
TiXmlH™dÀ
 
	gTiXmlH™dÀ
::
	$ChûdEÀmít
–c⁄° * 
vÆue
, 
cou¡
 ) const

1741 i‡–
node
 )

1743 
i
;

1744 
TiXmlEÀmít
* 
chûd
 = 
node
->
	`Fú°ChûdEÀmít
–
vÆue
 );

1745  
i
=0;

1746 
chûd
 && 
i
<
cou¡
;

1747 
chûd
 = chûd->
	`NextSiblögEÀmít
–
vÆue
 ), ++
i
 )

1751 i‡–
chûd
 )

1752  
	`TiXmlH™dÀ
–
chûd
 );

1754  
	`TiXmlH™dÀ
( 0 );

1755 
	}
}

1758 
boﬁ
 
	gTiXmlPröãr
::
	$VisôE¡î
–c⁄° 
TiXmlDocumít
& )

1760  
åue
;

1761 
	}
}

1763 
boﬁ
 
	gTiXmlPröãr
::
	$VisôExô
–c⁄° 
TiXmlDocumít
& )

1765  
åue
;

1766 
	}
}

1768 
boﬁ
 
	gTiXmlPröãr
::
	$VisôE¡î
–c⁄° 
TiXmlEÀmít
& 
ñemít
, c⁄° 
TiXmlAâribuã
* 
fú°Aâribuã
 )

1770 
	`DoIndít
();

1771 
buf„r
 += "<";

1772 
buf„r
 +
ñemít
.
	`VÆue
();

1774  c⁄° 
TiXmlAâribuã
* 
©åib
 = 
fú°Aâribuã
;áârib;áârib =áârib->
	`Next
() )

1776 
buf„r
 += " ";

1777 
©åib
->
	`Pröt
–0, 0, &
buf„r
 );

1780 i‡–!
ñemít
.
	`Fú°Chûd
() )

1782 
buf„r
 += " />";

1783 
	`DoLöeBªak
();

1787 
buf„r
 += ">";

1788 i‡–
ñemít
.
	`Fú°Chûd
()->
	`ToText
()

1789 && 
ñemít
.
	`La°Chûd
(Ë=ñemít.
	`Fú°Chûd
()

1790 && 
ñemít
.
	`Fú°Chûd
()->
	`ToText
()->
	`CDATA
(Ë=
Ál£
 )

1792 
sim∂eTextPröt
 = 
åue
;

1797 
	`DoLöeBªak
();

1800 ++
dïth
;

1801  
åue
;

1802 
	}
}

1805 
boﬁ
 
	gTiXmlPröãr
::
	$VisôExô
–c⁄° 
TiXmlEÀmít
& 
ñemít
 )

1807 --
dïth
;

1808 i‡–!
ñemít
.
	`Fú°Chûd
() )

1814 i‡–
sim∂eTextPröt
 )

1816 
sim∂eTextPröt
 = 
Ál£
;

1820 
	`DoIndít
();

1822 
buf„r
 += "</";

1823 
buf„r
 +
ñemít
.
	`VÆue
();

1824 
buf„r
 += ">";

1825 
	`DoLöeBªak
();

1827  
åue
;

1828 
	}
}

1831 
boﬁ
 
	gTiXmlPröãr
::
	$Visô
–c⁄° 
TiXmlText
& 
ãxt
 )

1833 i‡–
ãxt
.
	`CDATA
() )

1835 
	`DoIndít
();

1836 
buf„r
 += "<![CDATA[";

1837 
buf„r
 +
ãxt
.
	`VÆue
();

1838 
buf„r
 += "]]>";

1839 
	`DoLöeBªak
();

1841 i‡–
sim∂eTextPröt
 )

1843 
TIXML_STRING
 
°r
;

1844 
TiXmlBa£
::
	`EncodeSåög
–
ãxt
.
	`VÆueTSå
(), &
°r
 );

1845 
buf„r
 +
°r
;

1849 
	`DoIndít
();

1850 
TIXML_STRING
 
°r
;

1851 
TiXmlBa£
::
	`EncodeSåög
–
ãxt
.
	`VÆueTSå
(), &
°r
 );

1852 
buf„r
 +
°r
;

1853 
	`DoLöeBªak
();

1855  
åue
;

1856 
	}
}

1859 
boﬁ
 
	gTiXmlPröãr
::
	$Visô
–c⁄° 
TiXmlDe˛¨©i⁄
& 
de˛¨©i⁄
 )

1861 
	`DoIndít
();

1862 
de˛¨©i⁄
.
	`Pröt
–0, 0, &
buf„r
 );

1863 
	`DoLöeBªak
();

1864  
åue
;

1865 
	}
}

1868 
boﬁ
 
	gTiXmlPröãr
::
	$Visô
–c⁄° 
TiXmlCommít
& 
commít
 )

1870 
	`DoIndít
();

1871 
buf„r
 += "<!--";

1872 
buf„r
 +
commít
.
	`VÆue
();

1873 
buf„r
 += "-->";

1874 
	`DoLöeBªak
();

1875  
åue
;

1876 
	}
}

1879 
boﬁ
 
	gTiXmlPröãr
::
	$Visô
–c⁄° 
TiXmlUnknown
& 
unknown
 )

1881 
	`DoIndít
();

1882 
buf„r
 += "<";

1883 
buf„r
 +
unknown
.
	`VÆue
();

1884 
buf„r
 += ">";

1885 
	`DoLöeBªak
();

1886  
åue
;

1887 
	}
}

	@tinyxml.h

26 #i‚de‡
TINYXML_INCLUDED


27 
	#TINYXML_INCLUDED


	)

29 #ifde‡
_MSC_VER


30 #¥agm®
w¨nög
–
push
 )

31 #¥agm®
w¨nög
–
dißbÀ
 : 4530 )

32 #¥agm®
w¨nög
–
dißbÀ
 : 4786 )

35 
	~<˘y≥.h
>

36 
	~<°dio.h
>

37 
	~<°dlib.h
>

38 
	~<°rög.h
>

39 
	~<as£π.h
>

42 #i‡
deföed
–
_DEBUG
 ) && !deföed–
DEBUG
 )

43 
	#DEBUG


	)

46 #ifde‡
TIXML_USE_STL


47 
	~<°rög
>

48 
	~<io°ªam
>

49 
	~<s°ªam
>

50 
	#TIXML_STRING
 
°d
::
°rög


	)

52 
	~"töy°r.h
"

53 
	#TIXML_STRING
 
TiXmlSåög


	)

60 
	#TIXML_SAFE


	)

62 #ifde‡
TIXML_SAFE


63 #i‡
deföed
(
_MSC_VER
) && (_MSC_VER >= 1400 )

65 
	#TIXML_SNPRINTF
 
_¢¥ötf_s


	)

66 
	#TIXML_SNSCANF
 
_¢sˇnf_s


	)

67 
	#TIXML_SSCANF
 
ssˇnf_s


	)

68 #ñi‡
deföed
(
_MSC_VER
) && (_MSC_VER >= 1200 )

71 
	#TIXML_SNPRINTF
 
_¢¥ötf


	)

72 
	#TIXML_SNSCANF
 
_¢sˇnf


	)

73 
	#TIXML_SSCANF
 
ssˇnf


	)

74 #ñi‡
deföed
(
__GNUC__
) && (__GNUC__ >= 3 )

77 
	#TIXML_SNPRINTF
 
¢¥ötf


	)

78 
	#TIXML_SNSCANF
 
¢sˇnf


	)

79 
	#TIXML_SSCANF
 
ssˇnf


	)

81 
	#TIXML_SSCANF
 
ssˇnf


	)

85 
˛ass
 
	gTiXmlDocumít
;

86 
˛ass
 
	gTiXmlEÀmít
;

87 
˛ass
 
	gTiXmlCommít
;

88 
˛ass
 
	gTiXmlUnknown
;

89 
˛ass
 
	gTiXmlAâribuã
;

90 
˛ass
 
	gTiXmlText
;

91 
˛ass
 
	gTiXmlDe˛¨©i⁄
;

92 
˛ass
 
	gTiXmlP¨sögD©a
;

94 c⁄° 
	gTIXML_MAJOR_VERSION
 = 2;

95 c⁄° 
	gTIXML_MINOR_VERSION
 = 5;

96 c⁄° 
	gTIXML_PATCH_VERSION
 = 3;

101 
	sTiXmlCurs‹


103 
TiXmlCurs‹
(Ë{ 
CÀ¨
(); }

104 
CÀ¨
(Ë{ 
	mrow
 = 
cﬁ
 = -1; }

106 
	mrow
;

107 
	mcﬁ
;

129 ˛as†
	cTiXmlVisô‹


131 
	mpublic
:

132 
vútuÆ
 ~
	$TiXmlVisô‹
() {}

135 
vútuÆ
 
boﬁ
 
	$VisôE¡î
–c⁄° 
TiXmlDocumít
& ) {  
åue
; 
	}
}

137 
vútuÆ
 
boﬁ
 
	$VisôExô
–c⁄° 
TiXmlDocumít
& ) {  
åue
; 
	}
}

140 
vútuÆ
 
boﬁ
 
	$VisôE¡î
–c⁄° 
TiXmlEÀmít
& , c⁄° 
TiXmlAâribuã
* ) {  
åue
; 
	}
}

142 
vútuÆ
 
boﬁ
 
	$VisôExô
–c⁄° 
TiXmlEÀmít
& ) {  
åue
; 
	}
}

145 
vútuÆ
 
boﬁ
 
	$Visô
–c⁄° 
TiXmlDe˛¨©i⁄
& ) {  
åue
; 
	}
}

147 
vútuÆ
 
boﬁ
 
	$Visô
–c⁄° 
TiXmlText
& ) {  
åue
; 
	}
}

149 
vútuÆ
 
boﬁ
 
	$Visô
–c⁄° 
TiXmlCommít
& ) {  
åue
; 
	}
}

151 
vútuÆ
 
boﬁ
 
	$Visô
–c⁄° 
TiXmlUnknown
& ) {  
åue
; 
	}
}

157 
	mTIXML_SUCCESS
,

158 
	mTIXML_NO_ATTRIBUTE
,

159 
	mTIXML_WRONG_TYPE


164 
	eTiXmlEncodög


166 
	mTIXML_ENCODING_UNKNOWN
,

167 
	mTIXML_ENCODING_UTF8
,

168 
	mTIXML_ENCODING_LEGACY


171 c⁄° 
TiXmlEncodög
 
	gTIXML_DEFAULT_ENCODING
 = 
TIXML_ENCODING_UNKNOWN
;

195 ˛as†
	cTiXmlBa£


197 
‰õnd
 
˛ass
 
	mTiXmlNode
;

198 
‰õnd
 
˛ass
 
	mTiXmlEÀmít
;

199 
‰õnd
 
˛ass
 
	mTiXmlDocumít
;

201 
	mpublic
:

202 
	$TiXmlBa£
(Ë: 
	$u£rD©a
(0) {}

203 
vútuÆ
 ~
	$TiXmlBa£
(Ë{
	}
}

214 
vútuÆ
 
	$Pröt
–
FILE
* 
cfûe
, 
dïth
 ) const = 0;

222 
	$SëC⁄dí£WhôeS∑˚
–
boﬁ
 
c⁄dí£
 ) { 
c⁄dí£WhôeS∑˚
 = c⁄dí£; 
	}
}

225 
boﬁ
 
	$IsWhôeS∑˚C⁄dí£d
(Ë{  
c⁄dí£WhôeS∑˚
; 
	}
}

245 
	$Row
(Ëc⁄° {  
loˇti⁄
.
row
 + 1; 
	}
}

246 
	$Cﬁumn
(Ëc⁄° {  
loˇti⁄
.
cﬁ
 + 1; 
	}
}

248 
	$SëU£rD©a
–* 
u£r
 ) { 
u£rD©a
 = u£r; 
	}
}

249 * 
	$GëU£rD©a
(Ë{  
u£rD©a
; 
	}
}

250 c⁄° * 
	$GëU£rD©a
(Ëc⁄° {  
u£rD©a
; 
	}
}

254 c⁄° 
	gutf8ByãTabÀ
[256];

256 
vútuÆ
 c⁄° * 
P¨£
–c⁄° * 
p
,

257 
TiXmlP¨sögD©a
* 
d©a
,

258 
TiXmlEncodög
 
ícodög
 ) = 0;

263 
EncodeSåög
–c⁄° 
TIXML_STRING
& 
°r
, TIXML_STRING* 
out
 );

267 
	gTIXML_NO_ERROR
 = 0,

268 
	gTIXML_ERROR
,

269 
	gTIXML_ERROR_OPENING_FILE
,

270 
	gTIXML_ERROR_OUT_OF_MEMORY
,

271 
	gTIXML_ERROR_PARSING_ELEMENT
,

272 
	gTIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME
,

273 
	gTIXML_ERROR_READING_ELEMENT_VALUE
,

274 
	gTIXML_ERROR_READING_ATTRIBUTES
,

275 
	gTIXML_ERROR_PARSING_EMPTY
,

276 
	gTIXML_ERROR_READING_END_TAG
,

277 
	gTIXML_ERROR_PARSING_UNKNOWN
,

278 
	gTIXML_ERROR_PARSING_COMMENT
,

279 
	gTIXML_ERROR_PARSING_DECLARATION
,

280 
	gTIXML_ERROR_DOCUMENT_EMPTY
,

281 
	gTIXML_ERROR_EMBEDDED_NULL
,

282 
	gTIXML_ERROR_PARSING_CDATA
,

283 
	gTIXML_ERROR_DOCUMENT_TOP_ONLY
,

285 
	gTIXML_ERROR_STRING_COUNT


288 
	g¥Ÿe˘ed
:

290 c⁄° * 
SkùWhôeS∑˚
–c⁄° *, 
TiXmlEncodög
 
ícodög
 );

291 
ölöe
 
boﬁ
 
	$IsWhôeS∑˚
–
c
 )

293  ( 
	`is•a˚
–(Ë
c
 ) || c == '\n' || c == '\r' );

294 
	}
}

295 
ölöe
 
boﬁ
 
	$IsWhôeS∑˚
–
c
 )

297 i‡–
c
 < 256 )

298  
	`IsWhôeS∑˚
–(Ë
c
 );

299  
Ál£
;

300 
	}
}

302 #ifde‡
TIXML_USE_STL


303 
boﬁ
 
SåómWhôeS∑˚
–
°d
::
i°ªam
 * 
ö
, 
TIXML_STRING
 * 
èg
 );

304 
boﬁ
 
SåómTo
–
°d
::
i°ªam
 * 
ö
, 
ch¨a˘î
, 
TIXML_STRING
 * 
èg
 );

311 c⁄° * 
RódName
–c⁄° * 
p
, 
TIXML_STRING
* 
«me
, 
TiXmlEncodög
 
ícodög
 );

316 c⁄° * 
RódText
–c⁄° * 
ö
,

317 
TIXML_STRING
* 
ãxt
,

318 
boﬁ
 
ign‹eWhôeS∑˚
,

319 c⁄° * 
ídTag
,

320 
boﬁ
 
ign‹eCa£
,

321 
TiXmlEncodög
 
ícodög
 );

324 c⁄° * 
GëE¡ôy
–c⁄° * 
ö
, * 
vÆue
, * 
Àngth
, 
TiXmlEncodög
 
ícodög
 );

328 
ölöe
 c⁄° * 
	$GëCh¨
–c⁄° * 
p
, * 
_vÆue
, * 
Àngth
, 
TiXmlEncodög
 
ícodög
 )

330 
	`as£π
–
p
 );

331 i‡–
ícodög
 =
TIXML_ENCODING_UTF8
 )

333 *
Àngth
 = 
utf8ByãTabÀ
[ *((c⁄° *)
p
) ];

334 
	`as£π
–*
Àngth
 >= 0 && *length < 5 );

338 *
Àngth
 = 1;

341 i‡–*
Àngth
 == 1 )

343 i‡–*
p
 == '&' )

344  
	`GëE¡ôy
–
p
, 
_vÆue
, 
Àngth
, 
ícodög
 );

345 *
_vÆue
 = *
p
;

346  
p
+1;

348 i‡–*
Àngth
 )

352  
i
=0; 
p
[i] && i<*
Àngth
; ++i ) {

353 
_vÆue
[
i
] = 
p
[i];

355  
p
 + (*
Àngth
);

362 
	}
}

367 
boﬁ
 
SåögEquÆ
–c⁄° * 
p
,

368 c⁄° * 
ídTag
,

369 
boﬁ
 
ign‹eCa£
,

370 
TiXmlEncodög
 
ícodög
 );

372 c⁄° * 
	gîr‹Såög
[ 
TIXML_ERROR_STRING_COUNT
 ];

374 
TiXmlCurs‹
 
	gloˇti⁄
;

377 * 
	gu£rD©a
;

381 
IsAÕha
–
™yByã
, 
TiXmlEncodög
 
ícodög
 );

382 
IsAÕhaNum
–
™yByã
, 
TiXmlEncodög
 
ícodög
 );

383 
ölöe
 
	$ToLowî
–
v
, 
TiXmlEncodög
 
ícodög
 )

385 i‡–
ícodög
 =
TIXML_ENCODING_UTF8
 )

387 i‡–
v
 < 128 )  
	`tﬁowî
( v );

388  
v
;

392  
	`tﬁowî
–
v
 );

394 
	}
}

395 
C⁄vîtUTF32ToUTF8
–
öput
, * 
ouçut
, * 
Àngth
 );

397 
	g¥iv©e
:

398 
TiXmlBa£
( const TiXmlBase& );

399 
	g›î©‹
=–c⁄° 
TiXmlBa£
& 
ba£
 );

401 
	sE¡ôy


403 c⁄° * 
	g°r
;

404 
	g°rLígth
;

405 
	gchr
;

409 
	gNUM_ENTITY
 = 5,

410 
	gMAX_ENTITY_LENGTH
 = 6

413 
E¡ôy
 
	gítôy
[ 
NUM_ENTITY
 ];

414 
boﬁ
 
	gc⁄dí£WhôeS∑˚
;

424 ˛as†
	cTiXmlNode
 : 
public
 
TiXmlBa£


426 
‰õnd
 
˛ass
 
TiXmlDocumít
;

427 
‰õnd
 
˛ass
 
	mTiXmlEÀmít
;

429 
	mpublic
:

430 #ifde‡
TIXML_USE_STL


435 
‰õnd
 
°d
::
i°ªam
& 
›î©‹
 >> (°d::i°ªam& 
ö
, 
	mTiXmlNode
& 
	mba£
);

453 
‰õnd
 
	m°d
::
o°ªam
& 
›î©‹
<< (
°d
::o°ªam& 
out
, c⁄° 
	mTiXmlNode
& 
	mba£
);

456 
‰õnd
 
	m°d
::
°rög
& 
›î©‹
<< (
°d
::°rög& 
out
, c⁄° 
	mTiXmlNode
& 
	mba£
 );

463 
	eNodeTy≥


465 
	mDOCUMENT
,

466 
	mELEMENT
,

467 
	mCOMMENT
,

468 
	mUNKNOWN
,

469 
	mTEXT
,

470 
	mDECLARATION
,

471 
	mTYPECOUNT


474 
	gvútuÆ
 ~
TiXmlNode
();

488 c⁄° *
	$VÆue
(Ëc⁄° {  
vÆue
.
	`c_°r
 (); 
	}
}

490 #ifde‡
TIXML_USE_STL


495 c⁄° 
	g°d
::
°rög
& 
	$VÆueSå
(Ëc⁄° {  
vÆue
; 
	}
}

498 c⁄° 
	gTIXML_STRING
& 
	$VÆueTSå
(Ëc⁄° {  
vÆue
; 
	}
}

509 
	$SëVÆue
(c⁄° * 
_vÆue
Ë{ 
vÆue
 = _vÆue;
	}
}

511 #ifde‡
TIXML_USE_STL


513 
SëVÆue
–c⁄° 
°d
::
°rög
& 
_vÆue
 ) { 
vÆue
 = _value; }

517 
CÀ¨
();

520 
TiXmlNode
* 
	$P¨ít
(Ë{  
∑ª¡
; 
	}
}

521 c⁄° 
TiXmlNode
* 
	$P¨ít
(Ëc⁄° {  
∑ª¡
; 
	}
}

523 c⁄° 
TiXmlNode
* 
	$Fú°Chûd
(Ëc⁄° {  
fú°Chûd
; 
	}
}

524 
TiXmlNode
* 
	$Fú°Chûd
(Ë{  
fú°Chûd
; 
	}
}

525 c⁄° 
TiXmlNode
* 
	$Fú°Chûd
–c⁄° * 
vÆue
 ) const;

527 
TiXmlNode
* 
	$Fú°Chûd
–c⁄° * 
_vÆue
 ) {

530  
c⁄°_ˇ°
< 
TiXmlNode
* > ((c⁄°_ˇ°< c⁄° TiXmlNode* >(
this
))->
	`Fú°Chûd
–
_vÆue
 ));

531 
	}
}

532 c⁄° 
TiXmlNode
* 
	$La°Chûd
(Ëc⁄° {  
œ°Chûd
; 
	}
}

533 
TiXmlNode
* 
	$La°Chûd
(Ë{  
œ°Chûd
; 
	}
}

535 c⁄° 
TiXmlNode
* 
	$La°Chûd
–c⁄° * 
vÆue
 ) const;

536 
TiXmlNode
* 
	$La°Chûd
–c⁄° * 
_vÆue
 ) {

537  
c⁄°_ˇ°
< 
TiXmlNode
* > ((c⁄°_ˇ°< c⁄° TiXmlNode* >(
this
))->
	`La°Chûd
–
_vÆue
 ));

538 
	}
}

540 #ifde‡
TIXML_USE_STL


541 c⁄° 
TiXmlNode
* 
Fú°Chûd
–c⁄° 
°d
::
°rög
& 
_vÆue
 ) c⁄° {  Fú°Chûd (_vÆue.
c_°r
 ()); }

542 
TiXmlNode
* 
Fú°Chûd
–c⁄° 
°d
::
°rög
& 
_vÆue
 ) {  Fú°Chûd (_vÆue.
c_°r
 ()); }

543 c⁄° 
TiXmlNode
* 
La°Chûd
–c⁄° 
°d
::
°rög
& 
_vÆue
 ) c⁄° {  La°Chûd (_vÆue.
c_°r
 ()); }

544 
TiXmlNode
* 
La°Chûd
–c⁄° 
°d
::
°rög
& 
_vÆue
 ) {  La°Chûd (_vÆue.
c_°r
 ()); }

563 c⁄° 
TiXmlNode
* 
	$IãøãChûdªn
–c⁄° 
TiXmlNode
* 
¥evious
 ) const;

564 
TiXmlNode
* 
	$IãøãChûdªn
–c⁄° 
TiXmlNode
* 
¥evious
 ) {

565  
c⁄°_ˇ°
< 
TiXmlNode
* >–(c⁄°_ˇ°< c⁄° TiXmlNode* >(
this
))->
	`IãøãChûdªn
–
¥evious
 ) );

566 
	}
}

569 c⁄° 
TiXmlNode
* 
	$IãøãChûdªn
–c⁄° * 
vÆue
, c⁄° 
TiXmlNode
* 
¥evious
 ) const;

570 
TiXmlNode
* 
	$IãøãChûdªn
–c⁄° * 
_vÆue
, c⁄° 
TiXmlNode
* 
¥evious
 ) {

571  
c⁄°_ˇ°
< 
TiXmlNode
* >–(c⁄°_ˇ°< c⁄° TiXmlNode* >(
this
))->
	`IãøãChûdªn
–
_vÆue
, 
¥evious
 ) );

572 
	}
}

574 #ifde‡
TIXML_USE_STL


575 c⁄° 
TiXmlNode
* 
IãøãChûdªn
–c⁄° 
°d
::
°rög
& 
_vÆue
, c⁄° TiXmlNode* 
¥evious
 ) c⁄° {  IãøãChûdª¿(_vÆue.
c_°r
 (),Örevious); }

576 
TiXmlNode
* 
IãøãChûdªn
–c⁄° 
°d
::
°rög
& 
_vÆue
, c⁄° TiXmlNode* 
¥evious
 ) {  IãøãChûdª¿(_vÆue.
c_°r
 (),Örevious); }

582 
TiXmlNode
* 
In£πEndChûd
–c⁄° TiXmlNode& 
addThis
 );

594 
TiXmlNode
* 
LökEndChûd
–TiXmlNode* 
addThis
 );

599 
TiXmlNode
* 
In£πBef‹eChûd
–TiXmlNode* 
bef‹eThis
, c⁄° TiXmlNode& 
addThis
 );

604 
TiXmlNode
* 
In£πA·îChûd
–TiXmlNode* 
a·îThis
, c⁄° TiXmlNode& 
addThis
 );

609 
TiXmlNode
* 
Rïœ˚Chûd
–TiXmlNode* 
ª∂a˚This
, c⁄° TiXmlNode& 
wôhThis
 );

612 
boﬁ
 
RemoveChûd
–
TiXmlNode
* 
ªmoveThis
 );

615 c⁄° 
TiXmlNode
* 
	$PªviousSiblög
(Ëc⁄° {  
¥ev
; 
	}
}

616 
TiXmlNode
* 
	$PªviousSiblög
(Ë{  
¥ev
; 
	}
}

619 c⁄° 
TiXmlNode
* 
	$PªviousSiblög
( const * ) const;

620 
TiXmlNode
* 
	$PªviousSiblög
–c⁄° *
_¥ev
 ) {

621  
c⁄°_ˇ°
< 
TiXmlNode
* >–(c⁄°_ˇ°< c⁄° TiXmlNode* >(
this
))->
	`PªviousSiblög
–
_¥ev
 ) );

622 
	}
}

624 #ifde‡
TIXML_USE_STL


625 c⁄° 
TiXmlNode
* 
PªviousSiblög
–c⁄° 
°d
::
°rög
& 
_vÆue
 ) c⁄° {  PªviousSiblög (_vÆue.
c_°r
 ()); }

626 
TiXmlNode
* 
PªviousSiblög
–c⁄° 
°d
::
°rög
& 
_vÆue
 ) {  PªviousSiblög (_vÆue.
c_°r
 ()); }

627 c⁄° 
TiXmlNode
* 
NextSiblög
–c⁄° 
°d
::
°rög
& 
_vÆue
Ëc⁄° {  NextSiblög (_vÆue.
c_°r
 ()); }

628 
TiXmlNode
* 
NextSiblög
–c⁄° 
°d
::
°rög
& 
_vÆue
Ë{  NextSiblög (_vÆue.
c_°r
 ()); }

632 c⁄° 
TiXmlNode
* 
	$NextSiblög
(Ëc⁄° {  
√xt
; 
	}
}

633 
TiXmlNode
* 
	$NextSiblög
(Ë{  
√xt
; 
	}
}

636 c⁄° 
TiXmlNode
* 
	$NextSiblög
( const * ) const;

637 
TiXmlNode
* 
	$NextSiblög
–c⁄° * 
_√xt
 ) {

638  
c⁄°_ˇ°
< 
TiXmlNode
* >–(c⁄°_ˇ°< c⁄° TiXmlNode* >(
this
))->
	`NextSiblög
–
_√xt
 ) );

639 
	}
}

645 c⁄° 
TiXmlEÀmít
* 
	$NextSiblögEÀmít
() const;

646 
TiXmlEÀmít
* 
	$NextSiblögEÀmít
() {

647  
c⁄°_ˇ°
< 
TiXmlEÀmít
* >–(c⁄°_ˇ°< c⁄° 
TiXmlNode
* >(
this
))->
	`NextSiblögEÀmít
() );

648 
	}
}

654 c⁄° 
TiXmlEÀmít
* 
	$NextSiblögEÀmít
( const * ) const;

655 
TiXmlEÀmít
* 
	$NextSiblögEÀmít
–c⁄° *
_√xt
 ) {

656  
c⁄°_ˇ°
< 
TiXmlEÀmít
* >–(c⁄°_ˇ°< c⁄° 
TiXmlNode
* >(
this
))->
	`NextSiblögEÀmít
–
_√xt
 ) );

657 
	}
}

659 #ifde‡
TIXML_USE_STL


660 c⁄° 
TiXmlEÀmít
* 
NextSiblögEÀmít
–c⁄° 
°d
::
°rög
& 
_vÆue
Ëc⁄° {  NextSiblögEÀmíà(_vÆue.
c_°r
 ()); }

661 
TiXmlEÀmít
* 
NextSiblögEÀmít
–c⁄° 
°d
::
°rög
& 
_vÆue
Ë{  NextSiblögEÀmíà(_vÆue.
c_°r
 ()); }

665 c⁄° 
TiXmlEÀmít
* 
	$Fú°ChûdEÀmít
() const;

666 
TiXmlEÀmít
* 
	$Fú°ChûdEÀmít
() {

667  
c⁄°_ˇ°
< 
TiXmlEÀmít
* >–(c⁄°_ˇ°< c⁄° 
TiXmlNode
* >(
this
))->
	`Fú°ChûdEÀmít
() );

668 
	}
}

671 c⁄° 
TiXmlEÀmít
* 
	$Fú°ChûdEÀmít
–c⁄° * 
_vÆue
 ) const;

672 
TiXmlEÀmít
* 
	$Fú°ChûdEÀmít
–c⁄° * 
_vÆue
 ) {

673  
c⁄°_ˇ°
< 
TiXmlEÀmít
* >–(c⁄°_ˇ°< c⁄° 
TiXmlNode
* >(
this
))->
	`Fú°ChûdEÀmít
–
_vÆue
 ) );

674 
	}
}

676 #ifde‡
TIXML_USE_STL


677 c⁄° 
TiXmlEÀmít
* 
Fú°ChûdEÀmít
–c⁄° 
°d
::
°rög
& 
_vÆue
 ) c⁄° {  Fú°ChûdEÀmíà(_vÆue.
c_°r
 ()); }

678 
TiXmlEÀmít
* 
Fú°ChûdEÀmít
–c⁄° 
°d
::
°rög
& 
_vÆue
 ) {  Fú°ChûdEÀmíà(_vÆue.
c_°r
 ()); }

685 
	$Ty≥
(Ëc⁄° {  
ty≥
; 
	}
}

690 c⁄° 
TiXmlDocumít
* 
	$GëDocumít
() const;

691 
TiXmlDocumít
* 
	$GëDocumít
() {

692  
c⁄°_ˇ°
< 
TiXmlDocumít
* >–(c⁄°_ˇ°< c⁄° 
TiXmlNode
* >(
this
))->
	`GëDocumít
() );

693 
	}
}

696 
boﬁ
 
	$NoChûdªn
(Ëc⁄° {  !
fú°Chûd
; 
	}
}

698 
vútuÆ
 c⁄° 
TiXmlDocumít
* 
	$ToDocumít
(Ëc⁄° {  0; 
	}
}

699 
vútuÆ
 c⁄° 
TiXmlEÀmít
* 
	$ToEÀmít
(Ëc⁄° {  0; 
	}
}

700 
vútuÆ
 c⁄° 
TiXmlCommít
* 
	$ToCommít
(Ëc⁄° {  0; 
	}
}

701 
vútuÆ
 c⁄° 
TiXmlUnknown
* 
	$ToUnknown
(Ëc⁄° {  0; 
	}
}

702 
vútuÆ
 c⁄° 
TiXmlText
* 
	$ToText
(Ëc⁄° {  0; 
	}
}

703 
vútuÆ
 c⁄° 
TiXmlDe˛¨©i⁄
* 
	$ToDe˛¨©i⁄
(Ëc⁄° {  0; 
	}
}

705 
vútuÆ
 
TiXmlDocumít
* 
	$ToDocumít
(Ë{  0; 
	}
}

706 
vútuÆ
 
TiXmlEÀmít
* 
	$ToEÀmít
(Ë{  0; 
	}
}

707 
vútuÆ
 
TiXmlCommít
* 
	$ToCommít
(Ë{  0; 
	}
}

708 
vútuÆ
 
TiXmlUnknown
* 
	$ToUnknown
(Ë{  0; 
	}
}

709 
vútuÆ
 
TiXmlText
* 
	$ToText
(Ë{  0; 
	}
}

710 
vútuÆ
 
TiXmlDe˛¨©i⁄
* 
	$ToDe˛¨©i⁄
(Ë{  0; 
	}
}

715 
vútuÆ
 
TiXmlNode
* 
	$Cl⁄e
() const = 0;

739 
vútuÆ
 
boﬁ
 
	$Ac˚±
–
TiXmlVisô‹
* 
visô‹
 ) const = 0;

741 
¥Ÿe˘ed
:

742 
	`TiXmlNode
–
NodeTy≥
 
_ty≥
 );

746 
	$C›yTo
–
TiXmlNode
* 
èrgë
 ) const;

748 #ifde‡
TIXML_USE_STL


750 
vútuÆ
 
	`SåómIn
–
°d
::
i°ªam
* 
ö
, 
TIXML_STRING
* 
èg
 ) = 0;

754 
TiXmlNode
* 
	`Idítify
–c⁄° * 
°¨t
, 
TiXmlEncodög
 
ícodög
 );

756 
TiXmlNode
* 
∑ª¡
;

757 
NodeTy≥
 
ty≥
;

759 
TiXmlNode
* 
fú°Chûd
;

760 
TiXmlNode
* 
œ°Chûd
;

762 
TIXML_STRING
 
vÆue
;

764 
TiXmlNode
* 
¥ev
;

765 
TiXmlNode
* 
√xt
;

767 
¥iv©e
:

768 
	`TiXmlNode
–c⁄° 
TiXmlNode
& );

769 
›î©‹
=–c⁄° 
TiXmlNode
& 
ba£
 );

770 
	}
};

780 ˛as†
	cTiXmlAâribuã
 : 
public
 
TiXmlBa£


782 
‰õnd
 
˛ass
 
TiXmlAâribuãSë
;

784 
	mpublic
:

786 
	$TiXmlAâribuã
(Ë: 
	$TiXmlBa£
()

788 
documít
 = 0;

789 
¥ev
 = 
√xt
 = 0;

792 #ifde‡
TIXML_USE_STL


794 
	`TiXmlAâribuã
–c⁄° 
°d
::
°rög
& 
_«me
, c⁄° std::°rög& 
_vÆue
 )

796 
«me
 = 
_«me
;

797 
vÆue
 = 
_vÆue
;

798 
documít
 = 0;

799 
¥ev
 = 
√xt
 = 0;

800 
	}
}

804 
	$TiXmlAâribuã
–c⁄° * 
_«me
, c⁄° * 
_vÆue
 )

806 
«me
 = 
_«me
;

807 
vÆue
 = 
_vÆue
;

808 
documít
 = 0;

809 
¥ev
 = 
√xt
 = 0;

810 
	}
}

812 c⁄° * 
	$Name
(Ëc⁄° {  
«me
.
	`c_°r
(); 
	}
}

813 c⁄° * 
	$VÆue
(Ëc⁄° {  
vÆue
.
	`c_°r
(); 
	}
}

814 #ifde‡
TIXML_USE_STL


815 c⁄° 
	g°d
::
°rög
& 
	$VÆueSå
(Ëc⁄° {  
vÆue
; 
	}
}

817 
	$I¡VÆue
() const;

818 
	$DoubÀVÆue
() const;

821 c⁄° 
TIXML_STRING
& 
	$NameTSå
(Ëc⁄° {  
«me
; 
	}
}

832 
	$QuîyI¡VÆue
–* 
_vÆue
 ) const;

834 
	$QuîyDoubÀVÆue
–* 
_vÆue
 ) const;

836 
	$SëName
–c⁄° * 
_«me
 ) { 
«me
 = _«me; 
	}
}

837 
	$SëVÆue
–c⁄° * 
_vÆue
 ) { 
vÆue
 = _vÆue; 
	}
}

839 
SëI¡VÆue
–
_vÆue
 );

840 
SëDoubÀVÆue
–
_vÆue
 );

842 #ifde‡
TIXML_USE_STL


844 
SëName
–c⁄° 
°d
::
°rög
& 
_«me
 ) { 
«me
 = _name; }

846 
SëVÆue
–c⁄° 
°d
::
°rög
& 
_vÆue
 ) { 
vÆue
 = _value; }

850 c⁄° 
TiXmlAâribuã
* 
	$Next
() const;

851 
TiXmlAâribuã
* 
	$Next
() {

852  
c⁄°_ˇ°
< 
TiXmlAâribuã
* >–(c⁄°_ˇ°< c⁄° TiXmlAâribuã* >(
this
))->
	`Next
() );

853 
	}
}

856 c⁄° 
TiXmlAâribuã
* 
	$Pªvious
() const;

857 
TiXmlAâribuã
* 
	$Pªvious
() {

858  
c⁄°_ˇ°
< 
TiXmlAâribuã
* >–(c⁄°_ˇ°< c⁄° TiXmlAâribuã* >(
this
))->
	`Pªvious
() );

859 
	}
}

861 
boﬁ
 
	g›î©‹
==–c⁄° 
TiXmlAâribuã
& 
rhs
 ) c⁄° { Ñhs.
«me
 ==Çame; }

862 
boﬁ
 
	g›î©‹
<–c⁄° 
	gTiXmlAâribuã
& 
	grhs
 ) c⁄° {  
	g«me
 <Ñhs.name; }

863 
boﬁ
 
	g›î©‹
>–c⁄° 
	gTiXmlAâribuã
& 
	grhs
 ) c⁄° {  
	g«me
 >Ñhs.name; }

868 
vútuÆ
 c⁄° * 
P¨£
–c⁄° * 
p
, 
TiXmlP¨sögD©a
* 
d©a
, 
TiXmlEncodög
 
ícodög
 );

871 
vútuÆ
 
	$Pröt
–
FILE
* 
cfûe
, 
dïth
 ) const {

872 
	`Pröt
–
cfûe
, 
dïth
, 0 );

873 
	}
}

874 
	$Pröt
–
FILE
* 
cfûe
, 
dïth
, 
TIXML_STRING
* 
°r
 ) const;

878 
	$SëDocumít
–
TiXmlDocumít
* 
doc
 ) { 
documít
 = doc; 
	}
}

880 
	g¥iv©e
:

881 
TiXmlAâribuã
( const TiXmlAttribute& );

882 
	g›î©‹
=–c⁄° 
TiXmlAâribuã
& 
ba£
 );

884 
TiXmlDocumít
* 
	gdocumít
;

885 
TIXML_STRING
 
	g«me
;

886 
TIXML_STRING
 
	gvÆue
;

887 
TiXmlAâribuã
* 
	g¥ev
;

888 
TiXmlAâribuã
* 
	g√xt
;

904 ˛as†
	cTiXmlAâribuãSë


906 
	mpublic
:

907 
TiXmlAâribuãSë
();

908 ~
TiXmlAâribuãSë
();

910 
Add
–
TiXmlAâribuã
* 
©åibuã
 );

911 
Remove
–
TiXmlAâribuã
* 
©åibuã
 );

913 c⁄° 
TiXmlAâribuã
* 
	$Fú°
(Ëc⁄° {  ( 
£¡öñ
.
√xt
 == &sentinel ) ? 0 : sentinel.next; }

914 
TiXmlAâribuã
* 
	$Fú°
(Ë{  ( 
£¡öñ
.
√xt
 =&£¡öñ ) ? 0 : sítöñ.√xt; 
	}
}

915 c⁄° 
TiXmlAâribuã
* 
	$La°
(Ëc⁄° {  ( 
£¡öñ
.
¥ev
 =&£¡öñ ) ? 0 : sítöñ.¥ev; 
	}
}

916 
TiXmlAâribuã
* 
	$La°
(Ë{  ( 
£¡öñ
.
¥ev
 =&£¡öñ ) ? 0 : sítöñ.¥ev; 
	}
}

918 c⁄° 
TiXmlAâribuã
* 
	$Föd
–c⁄° * 
_«me
 ) const;

919 
TiXmlAâribuã
* 
	$Föd
–c⁄° * 
_«me
 ) {

920  
c⁄°_ˇ°
< 
TiXmlAâribuã
* >–(c⁄°_ˇ°< c⁄° 
TiXmlAâribuãSë
* >(
this
))->
	`Föd
–
_«me
 ) );

921 
	}
}

922 #ifde‡
TIXML_USE_STL


923 c⁄° 
TiXmlAâribuã
* 
Föd
–c⁄° 
°d
::
°rög
& 
_«me
 ) const;

924 
TiXmlAâribuã
* 
Föd
–c⁄° 
°d
::
°rög
& 
_«me
 ) {

925  
c⁄°_ˇ°
< 
TiXmlAâribuã
* >–(c⁄°_ˇ°< c⁄° 
TiXmlAâribuãSë
* >(
this
))->
Föd
–
_«me
 ) );

930 
	g¥iv©e
:

933 
TiXmlAâribuãSë
( const TiXmlAttributeSet& );

934 
	g›î©‹
=–c⁄° 
TiXmlAâribuãSë
& );

936 
TiXmlAâribuã
 
	g£¡öñ
;

944 ˛as†
	cTiXmlEÀmít
 : 
public
 
TiXmlNode


946 
public
:

948 
TiXmlEÀmít
 (c⁄° * 
ö_vÆue
);

950 #ifde‡
TIXML_USE_STL


952 
TiXmlEÀmít
–c⁄° 
°d
::
°rög
& 
_vÆue
 );

955 
TiXmlEÀmít
( const TiXmlElement& );

957 
	m›î©‹
=–c⁄° 
TiXmlEÀmít
& 
ba£
 );

959 
	mvútuÆ
 ~
TiXmlEÀmít
();

964 c⁄° * 
	$Aâribuã
–c⁄° * 
«me
 ) const;

972 c⁄° * 
	$Aâribuã
–c⁄° * 
«me
, * 
i
 ) const;

980 c⁄° * 
	$Aâribuã
–c⁄° * 
«me
, * 
d
 ) const;

989 
	$QuîyI¡Aâribuã
–c⁄° * 
«me
, * 
_vÆue
 ) const;

991 
	$QuîyDoubÀAâribuã
–c⁄° * 
«me
, * 
_vÆue
 ) const;

993 
	$QuîyFlﬂtAâribuã
–c⁄° * 
«me
, * 
_vÆue
 ) const {

994 
d
;

995 
ªsu…
 = 
	`QuîyDoubÀAâribuã
–
«me
, &
d
 );

996 i‡–
ªsu…
 =
TIXML_SUCCESS
 ) {

997 *
_vÆue
 = ()
d
;

999  
ªsu…
;

1002 #ifde‡
TIXML_USE_STL


1011 
ãm∂©e
< 
ty≥«me
 
T
 > 
	`QuîyVÆueAâribuã
–c⁄° 
°d
::
°rög
& 
«me
, T* 
outVÆue
 ) const

1013 c⁄° 
TiXmlAâribuã
* 
node
 = 
©åibuãSë
.
	`Föd
–
«me
 );

1014 i‡–!
node
 )

1015  
TIXML_NO_ATTRIBUTE
;

1017 
°d
::
°rög°ªam
 
	`s°ªam
–
node
->
	`VÆueSå
() );

1018 
s°ªam
 >> *
outVÆue
;

1019 i‡–!
s°ªam
.
	`Áû
() )

1020  
TIXML_SUCCESS
;

1021  
TIXML_WRONG_TYPE
;

1022 
	}
}

1043 
SëAâribuã
–c⁄° * 
«me
, c⁄° * 
_vÆue
 );

1045 #ifde‡
TIXML_USE_STL


1046 c⁄° 
	g°d
::
°rög
* 
Aâribuã
–c⁄° 
°d
::°rög& 
«me
 ) const;

1047 c⁄° 
	g°d
::
°rög
* 
Aâribuã
–c⁄° 
°d
::°rög& 
«me
, * 
i
 ) const;

1048 c⁄° 
	g°d
::
°rög
* 
Aâribuã
–c⁄° 
°d
::°rög& 
«me
, * 
d
 ) const;

1049 
QuîyI¡Aâribuã
–c⁄° 
°d
::
°rög
& 
«me
, * 
_vÆue
 ) const;

1050 
QuîyDoubÀAâribuã
–c⁄° 
°d
::
°rög
& 
«me
, * 
_vÆue
 ) const;

1053 
SëAâribuã
–c⁄° 
°d
::
°rög
& 
«me
, c⁄° std::°rög& 
_vÆue
 );

1055 
SëAâribuã
–c⁄° 
°d
::
°rög
& 
«me
, 
_vÆue
 );

1061 
SëAâribuã
–c⁄° * 
«me
, 
vÆue
 );

1066 
SëDoubÀAâribuã
–c⁄° * 
«me
, 
vÆue
 );

1070 
RemoveAâribuã
–c⁄° * 
«me
 );

1071 #ifde‡
TIXML_USE_STL


1072 
RemoveAâribuã
–c⁄° 
°d
::
°rög
& 
«me
 ) { RemoveAâribuã («me.
c_°r
 ()); }

1075 c⁄° 
TiXmlAâribuã
* 
	$Fú°Aâribuã
(Ëc⁄° {  
©åibuãSë
.
	`Fú°
(); 
	}
}

1076 
TiXmlAâribuã
* 
	$Fú°Aâribuã
(Ë{  
©åibuãSë
.
	`Fú°
(); 
	}
}

1077 c⁄° 
TiXmlAâribuã
* 
	$La°Aâribuã
(Ëc⁄° {  
©åibuãSë
.
	`La°
(); 
	}
}

1078 
TiXmlAâribuã
* 
	$La°Aâribuã
(Ë{  
©åibuãSë
.
	`La°
(); 
	}
}

1112 c⁄° * 
	$GëText
() const;

1115 
vútuÆ
 
TiXmlNode
* 
	$Cl⁄e
() const;

1117 
vútuÆ
 
	$Pröt
–
FILE
* 
cfûe
, 
dïth
 ) const;

1122 
vútuÆ
 c⁄° * 
	`P¨£
–c⁄° * 
p
, 
TiXmlP¨sögD©a
* 
d©a
, 
TiXmlEncodög
 
ícodög
 );

1124 
vútuÆ
 c⁄° 
TiXmlEÀmít
* 
	$ToEÀmít
(Ëc⁄° {  
this
; 
	}
}

1125 
vútuÆ
 
TiXmlEÀmít
* 
	$ToEÀmít
(Ë{  
this
; 
	}
}

1129 
vútuÆ
 
boﬁ
 
	$Ac˚±
–
TiXmlVisô‹
* 
visô‹
 ) const;

1131 
¥Ÿe˘ed
:

1133 
	$C›yTo
–
TiXmlEÀmít
* 
èrgë
 ) const;

1134 
	`CÀ¨This
();

1137 #ifde‡
TIXML_USE_STL


1138 
vútuÆ
 
	`SåómIn
–
°d
::
i°ªam
 * 
ö
, 
TIXML_STRING
 * 
èg
 );

1144 c⁄° * 
	`RódVÆue
–c⁄° * 
ö
, 
TiXmlP¨sögD©a
* 
¥evD©a
, 
TiXmlEncodög
 
ícodög
 );

1146 
¥iv©e
:

1148 
TiXmlAâribuãSë
 
©åibuãSë
;

1149 
	}
};

1154 ˛as†
	cTiXmlCommít
 : 
public
 
TiXmlNode


1156 
public
:

1158 
	$TiXmlCommít
(Ë: 
	`TiXmlNode
–
TiXmlNode
::
COMMENT
 ) {}

1160 
	$TiXmlCommít
–c⁄° * 
_vÆue
 ) : 
	`TiXmlNode
–
TiXmlNode
::
COMMENT
 ) {

1161 
	`SëVÆue
–
_vÆue
 );

1162 
	}
}

1163 
TiXmlCommít
( const TiXmlComment& );

1164 
	g›î©‹
=–c⁄° 
TiXmlCommít
& 
ba£
 );

1166 
	gvútuÆ
 ~
	$TiXmlCommít
(Ë{
	}
}

1169 
vútuÆ
 
TiXmlNode
* 
	$Cl⁄e
() const;

1171 
vútuÆ
 
	$Pröt
–
FILE
* 
cfûe
, 
dïth
 ) const;

1176 
vútuÆ
 c⁄° * 
	`P¨£
–c⁄° * 
p
, 
TiXmlP¨sögD©a
* 
d©a
, 
TiXmlEncodög
 
ícodög
 );

1178 
vútuÆ
 c⁄° 
TiXmlCommít
* 
	$ToCommít
(Ëc⁄° {  
this
; 
	}
}

1179 
vútuÆ
 
TiXmlCommít
* 
	$ToCommít
(Ë{  
this
; 
	}
}

1183 
vútuÆ
 
boﬁ
 
	$Ac˚±
–
TiXmlVisô‹
* 
visô‹
 ) const;

1185 
¥Ÿe˘ed
:

1186 
	$C›yTo
–
TiXmlCommít
* 
èrgë
 ) const;

1189 #ifde‡
TIXML_USE_STL


1190 
vútuÆ
 
	`SåómIn
–
°d
::
i°ªam
 * 
ö
, 
TIXML_STRING
 * 
èg
 );

1194 
¥iv©e
:

1196 
	}
};

1204 ˛as†
	cTiXmlText
 : 
public
 
TiXmlNode


1206 
‰õnd
 
˛ass
 
TiXmlEÀmít
;

1207 
	mpublic
:

1212 
	$TiXmlText
 (c⁄° * 
öôVÆue
 ) : 
	`TiXmlNode
 (
TiXmlNode
::
TEXT
)

1214 
	`SëVÆue
–
öôVÆue
 );

1215 
cd©a
 = 
Ál£
;

1217 
vútuÆ
 ~
	$TiXmlText
(Ë{
	}
}

1219 #ifde‡
TIXML_USE_STL


1221 
TiXmlText
–c⁄° 
°d
::
°rög
& 
öôVÆue
 ) : 
TiXmlNode
 (TiXmlNode::
TEXT
)

1223 
SëVÆue
–
öôVÆue
 );

1224 
	gcd©a
 = 
Ál£
;

1228 
	$TiXmlText
–c⁄° 
TiXmlText
& 
c›y
 ) : 
	`TiXmlNode
–
TiXmlNode
::
TEXT
 ) { c›y.
	`C›yTo
–
this
 ); 
	}
}

1229 
	g›î©‹
=–c⁄° 
TiXmlText
& 
ba£
 ) { ba£.
C›yTo
–
this
 ); }

1232 
vútuÆ
 
	$Pröt
–
FILE
* 
cfûe
, 
dïth
 ) const;

1235 
boﬁ
 
	$CDATA
(Ëc⁄° {  
cd©a
; 
	}
}

1237 
	$SëCDATA
–
boﬁ
 
_cd©a
 ) { 
cd©a
 = _cd©a; 
	}
}

1239 
vútuÆ
 c⁄° * 
P¨£
–c⁄° * 
p
, 
TiXmlP¨sögD©a
* 
d©a
, 
TiXmlEncodög
 
ícodög
 );

1241 
vútuÆ
 c⁄° 
TiXmlText
* 
	$ToText
(Ëc⁄° {  
this
; 
	}
}

1242 
vútuÆ
 
TiXmlText
* 
	$ToText
(Ë{  
this
; 
	}
}

1246 
vútuÆ
 
boﬁ
 
	$Ac˚±
–
TiXmlVisô‹
* 
c⁄ã¡
 ) const;

1248 
¥Ÿe˘ed
 :

1250 
vútuÆ
 
TiXmlNode
* 
	$Cl⁄e
() const;

1251 
	$C›yTo
–
TiXmlText
* 
èrgë
 ) const;

1253 
boﬁ
 
	$Bœnk
() const;

1255 #ifde‡
TIXML_USE_STL


1256 
vútuÆ
 
	`SåómIn
–
°d
::
i°ªam
 * 
ö
, 
TIXML_STRING
 * 
èg
 );

1259 
¥iv©e
:

1260 
boﬁ
 
cd©a
;

1261 
	}
};

1277 ˛as†
	cTiXmlDe˛¨©i⁄
 : 
public
 
TiXmlNode


1279 
public
:

1281 
	$TiXmlDe˛¨©i⁄
(Ë: 
	`TiXmlNode
–
TiXmlNode
::
DECLARATION
 ) {}

1283 #ifde‡
TIXML_USE_STL


1285 
	`TiXmlDe˛¨©i⁄
–c⁄° 
°d
::
°rög
& 
_vîsi⁄
,

1286 c⁄° 
°d
::
°rög
& 
_ícodög
,

1287 c⁄° 
°d
::
°rög
& 
_°™dÆ⁄e
 );

1291 
	`TiXmlDe˛¨©i⁄
–c⁄° * 
_vîsi⁄
,

1292 c⁄° * 
_ícodög
,

1293 c⁄° * 
_°™dÆ⁄e
 );

1295 
	`TiXmlDe˛¨©i⁄
–c⁄° 
TiXmlDe˛¨©i⁄
& 
c›y
 );

1296 
›î©‹
=–c⁄° 
TiXmlDe˛¨©i⁄
& 
c›y
 );

1298 
vútuÆ
 ~
	$TiXmlDe˛¨©i⁄
(Ë{
	}
}

1301 c⁄° *
	$Vîsi⁄
(Ëc⁄° {  
vîsi⁄
.
	`c_°r
 (); 
	}
}

1303 c⁄° *
	$Encodög
(Ëc⁄° {  
ícodög
.
	`c_°r
 (); 
	}
}

1305 c⁄° *
	$SèndÆ⁄e
(Ëc⁄° {  
°™dÆ⁄e
.
	`c_°r
 (); 
	}
}

1308 
vútuÆ
 
TiXmlNode
* 
	$Cl⁄e
() const;

1310 
vútuÆ
 
	$Pröt
–
FILE
* 
cfûe
, 
dïth
, 
TIXML_STRING
* 
°r
 ) const;

1311 
vútuÆ
 
	$Pröt
–
FILE
* 
cfûe
, 
dïth
 ) const {

1312 
	`Pröt
–
cfûe
, 
dïth
, 0 );

1313 
	}
}

1315 
vútuÆ
 c⁄° * 
P¨£
–c⁄° * 
p
, 
TiXmlP¨sögD©a
* 
d©a
, 
TiXmlEncodög
 
ícodög
 );

1317 
vútuÆ
 c⁄° 
TiXmlDe˛¨©i⁄
* 
	$ToDe˛¨©i⁄
(Ëc⁄° {  
this
; 
	}
}

1318 
vútuÆ
 
TiXmlDe˛¨©i⁄
* 
	$ToDe˛¨©i⁄
(Ë{  
this
; 
	}
}

1322 
vútuÆ
 
boﬁ
 
	$Ac˚±
–
TiXmlVisô‹
* 
visô‹
 ) const;

1324 
¥Ÿe˘ed
:

1325 
	$C›yTo
–
TiXmlDe˛¨©i⁄
* 
èrgë
 ) const;

1327 #ifde‡
TIXML_USE_STL


1328 
vútuÆ
 
	`SåómIn
–
°d
::
i°ªam
 * 
ö
, 
TIXML_STRING
 * 
èg
 );

1331 
¥iv©e
:

1333 
TIXML_STRING
 
vîsi⁄
;

1334 
TIXML_STRING
 
ícodög
;

1335 
TIXML_STRING
 
°™dÆ⁄e
;

1336 
	}
};

1346 ˛as†
	cTiXmlUnknown
 : 
public
 
TiXmlNode


1348 
public
:

1349 
	$TiXmlUnknown
(Ë: 
	`TiXmlNode
–
TiXmlNode
::
UNKNOWN
 ) {}

1350 
vútuÆ
 ~
	$TiXmlUnknown
(Ë{
	}
}

1352 
	$TiXmlUnknown
–c⁄° 
TiXmlUnknown
& 
c›y
 ) : 
	`TiXmlNode
–
TiXmlNode
::
UNKNOWN
 ) { c›y.
	`C›yTo
–
this
 ); 
	}
}

1353 
	g›î©‹
=–c⁄° 
TiXmlUnknown
& 
c›y
 ) { c›y.
C›yTo
–
this
 ); }

1356 
vútuÆ
 
TiXmlNode
* 
	$Cl⁄e
() const;

1358 
vútuÆ
 
	$Pröt
–
FILE
* 
cfûe
, 
dïth
 ) const;

1360 
vútuÆ
 c⁄° * 
	`P¨£
–c⁄° * 
p
, 
TiXmlP¨sögD©a
* 
d©a
, 
TiXmlEncodög
 
ícodög
 );

1362 
vútuÆ
 c⁄° 
TiXmlUnknown
* 
	$ToUnknown
(Ëc⁄° {  
this
; 
	}
}

1363 
vútuÆ
 
TiXmlUnknown
* 
	$ToUnknown
(Ë{  
this
; 
	}
}

1367 
vútuÆ
 
boﬁ
 
	$Ac˚±
–
TiXmlVisô‹
* 
c⁄ã¡
 ) const;

1369 
¥Ÿe˘ed
:

1370 
	$C›yTo
–
TiXmlUnknown
* 
èrgë
 ) const;

1372 #ifde‡
TIXML_USE_STL


1373 
vútuÆ
 
	`SåómIn
–
°d
::
i°ªam
 * 
ö
, 
TIXML_STRING
 * 
èg
 );

1376 
¥iv©e
:

1378 
	}
};

1385 ˛as†
	cTiXmlDocumít
 : 
public
 
TiXmlNode


1387 
public
:

1389 
TiXmlDocumít
();

1391 
TiXmlDocumít
–c⁄° * 
documítName
 );

1393 #ifde‡
TIXML_USE_STL


1395 
TiXmlDocumít
–c⁄° 
°d
::
°rög
& 
documítName
 );

1398 
TiXmlDocumít
–c⁄° TiXmlDocumít& 
c›y
 );

1399 
	m›î©‹
=–c⁄° 
TiXmlDocumít
& 
c›y
 );

1401 
	mvútuÆ
 ~
	$TiXmlDocumít
() {}

1407 
boﬁ
 
	`LﬂdFûe
–
TiXmlEncodög
 
ícodög
 = 
TIXML_DEFAULT_ENCODING
 );

1409 
boﬁ
 
	$SaveFûe
() const;

1411 
boﬁ
 
	`LﬂdFûe
–c⁄° * 
fûíame
, 
TiXmlEncodög
 
ícodög
 = 
TIXML_DEFAULT_ENCODING
 );

1413 
boﬁ
 
	$SaveFûe
–c⁄° * 
fûíame
 ) const;

1419 
boﬁ
 
	`LﬂdFûe
–
FILE
*, 
TiXmlEncodög
 
ícodög
 = 
TIXML_DEFAULT_ENCODING
 );

1421 
boﬁ
 
	$SaveFûe
–
FILE
* ) const;

1423 #ifde‡
TIXML_USE_STL


1424 
boﬁ
 
	`LﬂdFûe
–c⁄° 
°d
::
°rög
& 
fûíame
, 
TiXmlEncodög
 
ícodög
 = 
TIXML_DEFAULT_ENCODING
 )

1428  
	`LﬂdFûe
–
fûíame
.
	`c_°r
(), 
ícodög
 );

1429 
	}
}

1430 
boﬁ
 
SaveFûe
–c⁄° 
°d
::
°rög
& 
fûíame
 ) const

1434  
SaveFûe
–
fûíame
.
c_°r
() );

1442 
vútuÆ
 c⁄° * 
P¨£
–c⁄° * 
p
, 
TiXmlP¨sögD©a
* 
d©a
 = 0, 
TiXmlEncodög
 
ícodög
 = 
TIXML_DEFAULT_ENCODING
 );

1448 c⁄° 
TiXmlEÀmít
* 
	$RoŸEÀmít
(Ëc⁄° {  
	`Fú°ChûdEÀmít
(); 
	}
}

1449 
TiXmlEÀmít
* 
	$RoŸEÀmít
(Ë{  
	`Fú°ChûdEÀmít
(); 
	}
}

1456 
boﬁ
 
	$Eº‹
(Ëc⁄° {  
îr‹
; 
	}
}

1459 c⁄° * 
	$Eº‹Desc
(Ëc⁄° {  
îr‹Desc
.
	`c_°r
 (); 
	}
}

1464 
	$Eº‹Id
(Ëc⁄° {  
îr‹Id
; 
	}
}

1473 
	$Eº‹Row
(Ëc⁄° {  
îr‹Loˇti⁄
.
row
+1; 
	}
}

1474 
	$Eº‹Cﬁ
(Ëc⁄° {  
îr‹Loˇti⁄
.
cﬁ
+1; 
	}
}

1500 
	$SëTabSize
–
_èbsize
 ) { 
èbsize
 = _èbsize; 
	}
}

1502 
	$TabSize
(Ëc⁄° {  
èbsize
; 
	}
}

1507 
	$CÀ¨Eº‹
(Ë{ 
îr‹
 = 
Ál£
;

1508 
îr‹Id
 = 0;

1509 
îr‹Desc
 = "";

1510 
îr‹Loˇti⁄
.
row
 =Éº‹Loˇti⁄.
cﬁ
 = 0;

1512 
	}
}

1515 
	$Pröt
(Ëc⁄° { 
	`Pröt
–
°dout
, 0 ); 
	}
}

1524 
vútuÆ
 
	$Pröt
–
FILE
* 
cfûe
, 
dïth
 = 0 ) const;

1526 
	`SëEº‹
–
îr
, c⁄° * 
îr‹Loˇti⁄
, 
TiXmlP¨sögD©a
* 
¥evD©a
, 
TiXmlEncodög
 
ícodög
 );

1528 
vútuÆ
 c⁄° 
TiXmlDocumít
* 
	$ToDocumít
(Ëc⁄° {  
this
; 
	}
}

1529 
vútuÆ
 
TiXmlDocumít
* 
	$ToDocumít
(Ë{  
this
; 
	}
}

1533 
vútuÆ
 
boﬁ
 
	$Ac˚±
–
TiXmlVisô‹
* 
c⁄ã¡
 ) const;

1535 
¥Ÿe˘ed
 :

1537 
vútuÆ
 
TiXmlNode
* 
	$Cl⁄e
() const;

1538 #ifde‡
TIXML_USE_STL


1539 
vútuÆ
 
	`SåómIn
–
°d
::
i°ªam
 * 
ö
, 
TIXML_STRING
 * 
èg
 );

1542 
¥iv©e
:

1543 
	$C›yTo
–
TiXmlDocumít
* 
èrgë
 ) const;

1545 
boﬁ
 
îr‹
;

1546 
îr‹Id
;

1547 
TIXML_STRING
 
îr‹Desc
;

1548 
èbsize
;

1549 
TiXmlCurs‹
 
îr‹Loˇti⁄
;

1550 
boﬁ
 
u£Mi¸oso·BOM
;

1551 
	}
};

1634 ˛as†
	cTiXmlH™dÀ


1636 
	mpublic
:

1638 
	$TiXmlH™dÀ
–
TiXmlNode
* 
_node
 ) { 
this
->
node
 = _node; }

1640 
	$TiXmlH™dÀ
–c⁄° 
TiXmlH™dÀ
& 
ªf
 ) { 
this
->
node
 =Ñef.node; 
	}
}

1641 
TiXmlH™dÀ
 
	g›î©‹
=–c⁄° TiXmlH™dÀ& 
ªf
 ) { 
this
->
node
 =Ñef.node;  *
	gthis
; }

1644 
TiXmlH™dÀ
 
	$Fú°Chûd
() const;

1646 
TiXmlH™dÀ
 
	$Fú°Chûd
–c⁄° * 
vÆue
 ) const;

1648 
TiXmlH™dÀ
 
	$Fú°ChûdEÀmít
() const;

1650 
TiXmlH™dÀ
 
	$Fú°ChûdEÀmít
–c⁄° * 
vÆue
 ) const;

1655 
TiXmlH™dÀ
 
	$Chûd
–c⁄° * 
vÆue
, 
ödex
 ) const;

1659 
TiXmlH™dÀ
 
	$Chûd
–
ödex
 ) const;

1664 
TiXmlH™dÀ
 
	$ChûdEÀmít
–c⁄° * 
vÆue
, 
ödex
 ) const;

1669 
TiXmlH™dÀ
 
	$ChûdEÀmít
–
ödex
 ) const;

1671 #ifde‡
TIXML_USE_STL


1672 
TiXmlH™dÀ
 
	`Fú°Chûd
–c⁄° 
°d
::
°rög
& 
_vÆue
 ) c⁄° {  Fú°Chûd–_vÆue.
	`c_°r
(Ë); 
	}
}

1673 
TiXmlH™dÀ
 
Fú°ChûdEÀmít
–c⁄° 
°d
::
°rög
& 
_vÆue
 ) c⁄° {  Fú°ChûdEÀmít–_vÆue.
c_°r
() ); }

1675 
TiXmlH™dÀ
 
Chûd
–c⁄° 
°d
::
°rög
& 
_vÆue
, 
ödex
 ) c⁄° {  Chûd–_vÆue.
c_°r
(), index ); }

1676 
TiXmlH™dÀ
 
ChûdEÀmít
–c⁄° 
°d
::
°rög
& 
_vÆue
, 
ödex
 ) c⁄° {  ChûdEÀmít–_vÆue.
c_°r
(), index ); }

1681 
TiXmlNode
* 
	$ToNode
(Ëc⁄° {  
node
; 
	}
}

1684 
TiXmlEÀmít
* 
	$ToEÀmít
(Ëc⁄° {  ( ( 
node
 &&Çode->
	`ToEÀmít
(ËË?Çode->ToEÀmít(Ë: 0 ); 
	}
}

1687 
TiXmlText
* 
	$ToText
(Ëc⁄° {  ( ( 
node
 &&Çode->
	`ToText
(ËË?Çode->ToText(Ë: 0 ); 
	}
}

1690 
TiXmlUnknown
* 
	$ToUnknown
(Ëc⁄° {  ( ( 
node
 &&Çode->
	`ToUnknown
(ËË?Çode->ToUnknown(Ë: 0 ); 
	}
}

1695 
TiXmlNode
* 
	$Node
(Ëc⁄° {  
	`ToNode
(); 
	}
}

1699 
TiXmlEÀmít
* 
	$EÀmít
(Ëc⁄° {  
	`ToEÀmít
(); 
	}
}

1703 
TiXmlText
* 
	$Text
(Ëc⁄° {  
	`ToText
(); 
	}
}

1707 
TiXmlUnknown
* 
	$Unknown
(Ëc⁄° {  
	`ToUnknown
(); 
	}
}

1709 
	g¥iv©e
:

1710 
TiXmlNode
* 
node
;

1733 ˛as†
	cTiXmlPröãr
 : 
public
 
TiXmlVisô‹


1735 
public
:

1736 
	$TiXmlPröãr
(Ë: 
	`dïth
–0 ), 
	`sim∂eTextPröt
–
Ál£
 ),

1737 
	`buf„r
(), 
	`ödít
–" " ), 
	`löeBªak
( "\n" ) {}

1739 
vútuÆ
 
boﬁ
 
	`VisôE¡î
–c⁄° 
TiXmlDocumít
& 
doc
 );

1740 
vútuÆ
 
boﬁ
 
	`VisôExô
–c⁄° 
TiXmlDocumít
& 
doc
 );

1742 
vútuÆ
 
boﬁ
 
	`VisôE¡î
–c⁄° 
TiXmlEÀmít
& 
ñemít
, c⁄° 
TiXmlAâribuã
* 
fú°Aâribuã
 );

1743 
vútuÆ
 
boﬁ
 
	`VisôExô
–c⁄° 
TiXmlEÀmít
& 
ñemít
 );

1745 
vútuÆ
 
boﬁ
 
	`Visô
–c⁄° 
TiXmlDe˛¨©i⁄
& 
de˛¨©i⁄
 );

1746 
vútuÆ
 
boﬁ
 
	`Visô
–c⁄° 
TiXmlText
& 
ãxt
 );

1747 
vútuÆ
 
boﬁ
 
	`Visô
–c⁄° 
TiXmlCommít
& 
commít
 );

1748 
vútuÆ
 
boﬁ
 
	`Visô
–c⁄° 
TiXmlUnknown
& 
unknown
 );

1753 
	$SëIndít
–c⁄° * 
_ödít
 ) { 
ödít
 = _ödíà? _ödíà: "" ; 
	}
}

1755 c⁄° * 
	$Indít
(Ë{  
ödít
.
	`c_°r
(); 
	}
}

1760 
	$SëLöeBªak
–c⁄° * 
_löeBªak
 ) { 
löeBªak
 = _löeBªak ? _löeBªak : ""; 
	}
}

1762 c⁄° * 
	$LöeBªak
(Ë{  
löeBªak
.
	`c_°r
(); 
	}
}

1767 
	$SëSåómPrötög
(Ë{ 
ödít
 = "";

1768 
löeBªak
 = "";

1769 
	}
}

1771 c⁄° * 
	$CSå
(Ë{  
buf„r
.
	`c_°r
(); 
	}
}

1773 
size_t
 
	$Size
(Ë{  
buf„r
.
	`size
(); 
	}
}

1775 #ifde‡
TIXML_USE_STL


1777 c⁄° 
	g°d
::
°rög
& 
	$Så
(Ë{  
buf„r
; 
	}
}

1780 
	g¥iv©e
:

1781 
	$DoIndít
() {

1782  
i
=0; i<
dïth
; ++i )

1783 
buf„r
 +
ödít
;

1784 
	}
}

1785 
	$DoLöeBªak
() {

1786 
buf„r
 +
löeBªak
;

1787 
	}
}

1789 
	gdïth
;

1790 
boﬁ
 
	gsim∂eTextPröt
;

1791 
TIXML_STRING
 
	gbuf„r
;

1792 
TIXML_STRING
 
	gödít
;

1793 
TIXML_STRING
 
	glöeBªak
;

1797 #ifde‡
_MSC_VER


1798 #¥agm®
w¨nög
–
p›
 )

	@tinyxmlerror.cpp

25 
	~"töyxml.h
"

34 c⁄° * 
	gTiXmlBa£
::
îr‹Såög
[ 
TIXML_ERROR_STRING_COUNT
 ] =

	@tinyxmlparser.cpp

25 
	~<˘y≥.h
>

26 
	~<°ddef.h
>

28 
	~"töyxml.h
"

31 #i‡
deföed
–
DEBUG_PARSER
 )

32 #i‡
deföed
–
DEBUG
 ) && deföed–
_MSC_VER
 )

33 
	~<wödows.h
>

34 
	#TIXML_LOG
 
OuçutDebugSåög


	)

36 
	#TIXML_LOG
 
¥ötf


	)

43 
	gTiXmlBa£
::
E¡ôy
 
TiXmlBa£
::
ítôy
[ 
NUM_ENTITY
 ] =

62 c⁄° 
	gTIXML_UTF_LEAD_0
 = 0xefU;

63 c⁄° 
	gTIXML_UTF_LEAD_1
 = 0xbbU;

64 c⁄° 
	gTIXML_UTF_LEAD_2
 = 0xbfU;

66 c⁄° 
	gTiXmlBa£
::
utf8ByãTabÀ
[256] =

88 
	gTiXmlBa£
::
	$C⁄vîtUTF32ToUTF8
–
öput
, * 
ouçut
, * 
Àngth
 )

90 c⁄° 
BYTE_MASK
 = 0xBF;

91 c⁄° 
BYTE_MARK
 = 0x80;

92 c⁄° 
FIRST_BYTE_MARK
[7] = { 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC };

94 i‡(
öput
 < 0x80)

95 *
Àngth
 = 1;

96 i‡–
öput
 < 0x800 )

97 *
Àngth
 = 2;

98 i‡–
öput
 < 0x10000 )

99 *
Àngth
 = 3;

100 i‡–
öput
 < 0x200000 )

101 *
Àngth
 = 4;

103 { *
Àngth
 = 0; ; }

105 
ouçut
 +*
Àngth
;

108 *
Àngth
)

111 --
ouçut
;

112 *
ouçut
 = ()((
öput
 | 
BYTE_MARK
Ë& 
BYTE_MASK
);

113 
öput
 >>= 6;

115 --
ouçut
;

116 *
ouçut
 = ()((
öput
 | 
BYTE_MARK
Ë& 
BYTE_MASK
);

117 
öput
 >>= 6;

119 --
ouçut
;

120 *
ouçut
 = ()((
öput
 | 
BYTE_MARK
Ë& 
BYTE_MASK
);

121 
öput
 >>= 6;

123 --
ouçut
;

124 *
ouçut
 = ()(
öput
 | 
FIRST_BYTE_MARK
[*
Àngth
]);

126 
	}
}

129  
	gTiXmlBa£
::
	$IsAÕha
–
™yByã
, 
TiXmlEncodög
 )

138 i‡–
™yByã
 < 127 )

139  
	`ißÕha
–
™yByã
 );

147 
	}
}

150  
	gTiXmlBa£
::
	$IsAÕhaNum
–
™yByã
, 
TiXmlEncodög
 )

159 i‡–
™yByã
 < 127 )

160  
	`iß um
–
™yByã
 );

168 
	}
}

171 ˛as†
	cTiXmlP¨sögD©a


173 
‰õnd
 
˛ass
 
	mTiXmlDocumít
;

174 
	mpublic
:

175 
Sèmp
–c⁄° * 
now
, 
TiXmlEncodög
 
ícodög
 );

177 c⁄° 
	mTiXmlCurs‹
& 
	$Curs‹
(Ë{  
curs‹
; }

179 
¥iv©e
:

181 
	$TiXmlP¨sögD©a
–c⁄° * 
°¨t
, 
_èbsize
, 
row
, 
cﬁ
 )

183 
	`as£π
–
°¨t
 );

184 
°amp
 = 
°¨t
;

185 
èbsize
 = 
_èbsize
;

186 
curs‹
.
row
 =Ñow;

187 
curs‹
.
cﬁ
 = col;

188 
	}
}

190 
TiXmlCurs‹
 
	gcurs‹
;

191 c⁄° * 
	g°amp
;

192 
	gèbsize
;

196 
	gTiXmlP¨sögD©a
::
	$Sèmp
–c⁄° * 
now
, 
TiXmlEncodög
 
ícodög
 )

198 
	`as£π
–
now
 );

201 i‡–
èbsize
 < 1 )

207 
row
 = 
curs‹
.row;

208 
cﬁ
 = 
curs‹
.col;

209 c⁄° * 
p
 = 
°amp
;

210 
	`as£π
–
p
 );

212  
p
 < 
now
 )

215 c⁄° * 
pU
 = (c⁄° *)
p
;

218 *
pU
) {

226 ++
row
;

227 
cﬁ
 = 0;

229 ++
p
;

232 i‡(*
p
 == '\n') {

233 ++
p
;

239 ++
row
;

240 
cﬁ
 = 0;

243 ++
p
;

248 i‡(*
p
 == '\r') {

249 ++
p
;

255 ++
p
;

258 
cﬁ
 = (cﬁ / 
èbsize
 + 1) *Åabsize;

261 
TIXML_UTF_LEAD_0
:

262 i‡–
ícodög
 =
TIXML_ENCODING_UTF8
 )

264 i‡–*(
p
+1) && *(p+2) )

268 i‡–*(
pU
+1)==
TIXML_UTF_LEAD_1
 && *’U+2)==
TIXML_UTF_LEAD_2
 )

269 
p
 += 3;

270 i‡–*(
pU
+1)==0xbfU && *(pU+2)==0xbeU )

271 
p
 += 3;

272 i‡–*(
pU
+1)==0xbfU && *(pU+2)==0xbfU )

273 
p
 += 3;

275 { 
p
 +=3; ++
cﬁ
; }

280 ++
p
;

281 ++
cﬁ
;

286 i‡–
ícodög
 =
TIXML_ENCODING_UTF8
 )

289 
°ï
 = 
TiXmlBa£
::
utf8ByãTabÀ
[*((c⁄° *)
p
)];

290 i‡–
°ï
 == 0 )

291 
°ï
 = 1;

292 
p
 +
°ï
;

295 ++
cﬁ
;

299 ++
p
;

300 ++
cﬁ
;

305 
curs‹
.
row
 =Ñow;

306 
curs‹
.
cﬁ
 = col;

307 
	`as£π
–
curs‹
.
row
 >= -1 );

308 
	`as£π
–
curs‹
.
cﬁ
 >= -1 );

309 
°amp
 = 
p
;

310 
	`as£π
–
°amp
 );

311 
	}
}

314 c⁄° * 
	gTiXmlBa£
::
	$SkùWhôeS∑˚
–c⁄° * 
p
, 
TiXmlEncodög
 
ícodög
 )

316 i‡–!
p
 || !*p )

320 i‡–
ícodög
 =
TIXML_ENCODING_UTF8
 )

322  *
p
 )

324 c⁄° * 
pU
 = (c⁄° *)
p
;

327 i‡–*(
pU
+0)==
TIXML_UTF_LEAD_0


328 && *(
pU
+1)==
TIXML_UTF_LEAD_1


329 && *(
pU
+2)==
TIXML_UTF_LEAD_2
 )

331 
p
 += 3;

334 if(*(
pU
+0)==
TIXML_UTF_LEAD_0


335 && *(
pU
+1)==0xbfU

336 && *(
pU
+2)==0xbeU )

338 
p
 += 3;

341 if(*(
pU
+0)==
TIXML_UTF_LEAD_0


342 && *(
pU
+1)==0xbfU

343 && *(
pU
+2)==0xbfU )

345 
p
 += 3;

349 i‡–
	`IsWhôeS∑˚
–*
p
 ) || *p == '\n' || *p =='\r' )

350 ++
p
;

357  *
p
 && 
	`IsWhôeS∑˚
( *p ) || *p == '\n' || *p =='\r' )

358 ++
p
;

361  
p
;

362 
	}
}

364 #ifde‡
TIXML_USE_STL


365  
boﬁ
 
	gTiXmlBa£
::
SåómWhôeS∑˚
–
°d
::
i°ªam
 * 
ö
, 
TIXML_STRING
 * 
èg
 )

369 i‡–!
	gö
->
good
(ËË 
	gÁl£
;

371 
	gc
 = 
ö
->
≥ek
();

373 i‡–!
IsWhôeS∑˚
–
c
 ) || 
	gc
 <= 0 )

374  
åue
;

376 *
	gèg
 +(Ë
ö
->
gë
();

380  
boﬁ
 
	gTiXmlBa£
::
SåómTo
–
°d
::
i°ªam
 * 
ö
, 
ch¨a˘î
, 
TIXML_STRING
 * 
èg
 )

383  
	gö
->
good
() )

385 
	gc
 = 
ö
->
≥ek
();

386 i‡–
	gc
 =
ch¨a˘î
 )

387  
åue
;

388 i‡–
	gc
 <= 0 )

389  
Ál£
;

391 
	gö
->
gë
();

392 *
	gèg
 +(Ë
c
;

394  
	gÁl£
;

401 c⁄° * 
	gTiXmlBa£
::
	$RódName
–c⁄° * 
p
, 
TIXML_STRING
 * 
«me
, 
TiXmlEncodög
 
ícodög
 )

406 *
«me
 = "";

407 
	`as£π
–
p
 );

416 i‡–
p
 && *p

417 && ( 
	`IsAÕha
–(Ë*
p
, 
ícodög
 ) || *p == '_' ) )

419 c⁄° * 
°¨t
 = 
p
;

420  
p
 && *p

421 && ( 
	`IsAÕhaNum
–(Ë*
p
, 
ícodög
 )

422 || *
p
 == '_'

423 || *
p
 == '-'

424 || *
p
 == '.'

425 || *
p
 == ':' ) )

428 ++
p
;

430 i‡–
p
-
°¨t
 > 0 ) {

431 
«me
->
	`assign
–
°¨t
, 
p
-start );

433  
p
;

436 
	}
}

438 c⁄° * 
	gTiXmlBa£
::
	$GëE¡ôy
–c⁄° * 
p
, * 
vÆue
, * 
Àngth
, 
TiXmlEncodög
 
ícodög
 )

441 
TIXML_STRING
 
ít
;

442 
i
;

443 *
Àngth
 = 0;

445 i‡–*(
p
+1) && *(p+1) == '#' && *(p+2) )

447 
ucs
 = 0;

448 
±rdiff_t
 
dñè
 = 0;

449 
mu…
 = 1;

451 i‡–*(
p
+2) == 'x' )

454 i‡–!*(
p
+3) )  0;

456 c⁄° * 
q
 = 
p
+3;

457 
q
 = 
	`°rchr
( q, ';' );

459 i‡–!
q
 || !*q )  0;

461 
dñè
 = 
q
-
p
;

462 --
q
;

464  *
q
 != 'x' )

466 i‡–*
q
 >= '0' && *q <= '9' )

467 
ucs
 +
mu…
 * (*
q
 - '0');

468 i‡–*
q
 >= 'a' && *q <= 'f' )

469 
ucs
 +
mu…
 * (*
q
 - 'a' + 10);

470 i‡–*
q
 >= 'A' && *q <= 'F' )

471 
ucs
 +
mu…
 * (*
q
 - 'A' + 10 );

474 
mu…
 *= 16;

475 --
q
;

481 i‡–!*(
p
+2) )  0;

483 c⁄° * 
q
 = 
p
+2;

484 
q
 = 
	`°rchr
( q, ';' );

486 i‡–!
q
 || !*q )  0;

488 
dñè
 = 
q
-
p
;

489 --
q
;

491  *
q
 != '#' )

493 i‡–*
q
 >= '0' && *q <= '9' )

494 
ucs
 +
mu…
 * (*
q
 - '0');

497 
mu…
 *= 10;

498 --
q
;

501 i‡–
ícodög
 =
TIXML_ENCODING_UTF8
 )

504 
	`C⁄vîtUTF32ToUTF8
–
ucs
, 
vÆue
, 
Àngth
 );

508 *
vÆue
 = ()
ucs
;

509 *
Àngth
 = 1;

511  
p
 + 
dñè
 + 1;

515  
i
=0; i<
NUM_ENTITY
; ++i )

517 i‡–
	`°∫cmp
–
ítôy
[
i
].
°r
, 
p
,É¡ôy[i].
°rLígth
 ) == 0 )

519 
	`as£π
–
	`°æí
–
ítôy
[
i
].
°r
 ) =ítôy[i].
°rLígth
 );

520 *
vÆue
 = 
ítôy
[
i
].
chr
;

521 *
Àngth
 = 1;

522  ( 
p
 + 
ítôy
[
i
].
°rLígth
 );

527 *
vÆue
 = *
p
;

530  
p
+1;

531 
	}
}

534 
boﬁ
 
	gTiXmlBa£
::
	$SåögEquÆ
–c⁄° * 
p
,

535 c⁄° * 
èg
,

536 
boﬁ
 
ign‹eCa£
,

537 
TiXmlEncodög
 
ícodög
 )

539 
	`as£π
–
p
 );

540 
	`as£π
–
èg
 );

541 i‡–!
p
 || !*p )

543 
	`as£π
( 0 );

544  
Ál£
;

547 c⁄° * 
q
 = 
p
;

549 i‡–
ign‹eCa£
 )

551  *
q
 && *
èg
 && 
	`ToLowî
–*q, 
ícodög
 ) == ToLower( *tag,Éncoding ) )

553 ++
q
;

554 ++
èg
;

557 i‡–*
èg
 == 0 )

558  
åue
;

562  *
q
 && *
èg
 && *q == *tag )

564 ++
q
;

565 ++
èg
;

568 i‡–*
èg
 == 0 )

569  
åue
;

571  
Ál£
;

572 
	}
}

574 c⁄° * 
	gTiXmlBa£
::
	$RódText
–c⁄° * 
p
,

575 
TIXML_STRING
 * 
ãxt
,

576 
boﬁ
 
åimWhôeS∑˚
,

577 c⁄° * 
ídTag
,

578 
boﬁ
 
ˇ£In£nsôive
,

579 
TiXmlEncodög
 
ícodög
 )

581 *
ãxt
 = "";

582 i‡–!
åimWhôeS∑˚


583 || !
c⁄dí£WhôeS∑˚
 )

586  
p
 && *p

587 && !
	`SåögEquÆ
–
p
, 
ídTag
, 
ˇ£In£nsôive
, 
ícodög
 )

590 
Àn
;

591 
cAº
[4] = { 0, 0, 0, 0 };

592 
p
 = 
	`GëCh¨
–p, 
cAº
, &
Àn
, 
ícodög
 );

593 
ãxt
->
	`≠≥nd
–
cAº
, 
Àn
 );

598 
boﬁ
 
whôe•a˚
 = 
Ál£
;

601 
p
 = 
	`SkùWhôeS∑˚
–p, 
ícodög
 );

602  
p
 && *p

603 && !
	`SåögEquÆ
–
p
, 
ídTag
, 
ˇ£In£nsôive
, 
ícodög
 ) )

605 i‡–*
p
 == '\r' || *p == '\n' )

607 
whôe•a˚
 = 
åue
;

608 ++
p
;

610 i‡–
	`IsWhôeS∑˚
–*
p
 ) )

612 
whôe•a˚
 = 
åue
;

613 ++
p
;

619 i‡–
whôe•a˚
 )

621 (*
ãxt
) += ' ';

622 
whôe•a˚
 = 
Ál£
;

624 
Àn
;

625 
cAº
[4] = { 0, 0, 0, 0 };

626 
p
 = 
	`GëCh¨
–p, 
cAº
, &
Àn
, 
ícodög
 );

627 i‡–
Àn
 == 1 )

628 (*
ãxt
Ë+
cAº
[0];

630 
ãxt
->
	`≠≥nd
–
cAº
, 
Àn
 );

634 i‡–
p
 )

635 
p
 +
	`°æí
–
ídTag
 );

636  
p
;

637 
	}
}

639 #ifde‡
TIXML_USE_STL


641 
	gTiXmlDocumít
::
SåómIn
–
°d
::
i°ªam
 * 
ö
, 
TIXML_STRING
 * 
èg
 )

650 i‡–!
SåómTo
–
ö
, '<', 
èg
 ) )

652 
SëEº‹
–
TIXML_ERROR_PARSING_EMPTY
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

656  
	gö
->
good
() )

658 
	gègIndex
 = (Ë
èg
->
Àngth
();

659  
	gö
->
good
(Ë&& in->
≥ek
() != '>' )

661 
c
 = 
ö
->
gë
();

662 i‡–
	gc
 <= 0 )

664 
SëEº‹
–
TIXML_ERROR_EMBEDDED_NULL
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

667 (*
	gèg
Ë+(Ë
c
;

670 i‡–
	gö
->
good
() )

675 
TiXmlNode
* 
	gnode
 = 
Idítify
–
èg
->
c_°r
(Ë+ 
ègIndex
, 
TIXML_DEFAULT_ENCODING
 );

677 i‡–
	gnode
 )

679 
	gnode
->
SåómIn
–
ö
, 
èg
 );

680 
boﬁ
 
	gisEÀmít
 = 
node
->
ToEÀmít
() != 0;

681 
dñëe
 
	gnode
;

682 
	gnode
 = 0;

686 i‡–
	gisEÀmít
 )

693 
SëEº‹
–
TIXML_ERROR
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

699 
SëEº‹
–
TIXML_ERROR
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

704 c⁄° * 
	gTiXmlDocumít
::
	$P¨£
–c⁄° * 
p
, 
TiXmlP¨sögD©a
* 
¥evD©a
, 
TiXmlEncodög
 
ícodög
 )

706 
	`CÀ¨Eº‹
();

711 i‡–!
p
 || !*p )

713 
	`SëEº‹
–
TIXML_ERROR_DOCUMENT_EMPTY
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

720 
loˇti⁄
.
	`CÀ¨
();

721 i‡–
¥evD©a
 )

723 
loˇti⁄
.
row
 = 
¥evD©a
->
curs‹
.row;

724 
loˇti⁄
.
cﬁ
 = 
¥evD©a
->
curs‹
.col;

728 
loˇti⁄
.
row
 = 0;

729 
loˇti⁄
.
cﬁ
 = 0;

731 
TiXmlP¨sögD©a
 
	`d©a
–
p
, 
	`TabSize
(), 
loˇti⁄
.
row
,Üoˇti⁄.
cﬁ
 );

732 
loˇti⁄
 = 
d©a
.
	`Curs‹
();

734 i‡–
ícodög
 =
TIXML_ENCODING_UNKNOWN
 )

737 c⁄° * 
pU
 = (c⁄° *)
p
;

738 i‡–*(
pU
+0Ë&& *’U+0Ë=
TIXML_UTF_LEAD_0


739 && *(
pU
+1Ë&& *’U+1Ë=
TIXML_UTF_LEAD_1


740 && *(
pU
+2Ë&& *’U+2Ë=
TIXML_UTF_LEAD_2
 )

742 
ícodög
 = 
TIXML_ENCODING_UTF8
;

743 
u£Mi¸oso·BOM
 = 
åue
;

747 
p
 = 
	`SkùWhôeS∑˚
–p, 
ícodög
 );

748 i‡–!
p
 )

750 
	`SëEº‹
–
TIXML_ERROR_DOCUMENT_EMPTY
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

754  
p
 && *p )

756 
TiXmlNode
* 
node
 = 
	`Idítify
–
p
, 
ícodög
 );

757 i‡–
node
 )

759 
p
 = 
node
->
	`P¨£
–p, &
d©a
, 
ícodög
 );

760 
	`LökEndChûd
–
node
 );

768 i‡–
ícodög
 =
TIXML_ENCODING_UNKNOWN


769 && 
node
->
	`ToDe˛¨©i⁄
() )

771 
TiXmlDe˛¨©i⁄
* 
dec
 = 
node
->
	`ToDe˛¨©i⁄
();

772 c⁄° * 
íc
 = 
dec
->
	`Encodög
();

773 
	`as£π
–
íc
 );

775 i‡–*
íc
 == 0 )

776 
ícodög
 = 
TIXML_ENCODING_UTF8
;

777 i‡–
	`SåögEquÆ
–
íc
, "UTF-8", 
åue
, 
TIXML_ENCODING_UNKNOWN
 ) )

778 
ícodög
 = 
TIXML_ENCODING_UTF8
;

779 i‡–
	`SåögEquÆ
–
íc
, "UTF8", 
åue
, 
TIXML_ENCODING_UNKNOWN
 ) )

780 
ícodög
 = 
TIXML_ENCODING_UTF8
;

782 
ícodög
 = 
TIXML_ENCODING_LEGACY
;

785 
p
 = 
	`SkùWhôeS∑˚
–p, 
ícodög
 );

789 i‡–!
fú°Chûd
 ) {

790 
	`SëEº‹
–
TIXML_ERROR_DOCUMENT_EMPTY
, 0, 0, 
ícodög
 );

795  
p
;

796 
	}
}

798 
	gTiXmlDocumít
::
	$SëEº‹
–
îr
, c⁄° * 
pEº‹
, 
TiXmlP¨sögD©a
* 
d©a
, 
TiXmlEncodög
 
ícodög
 )

801 i‡–
îr‹
 )

804 
	`as£π
–
îr
 > 0 &&Éº < 
TIXML_ERROR_STRING_COUNT
 );

805 
îr‹
 = 
åue
;

806 
îr‹Id
 = 
îr
;

807 
îr‹Desc
 = 
îr‹Såög
[ 
îr‹Id
 ];

809 
îr‹Loˇti⁄
.
	`CÀ¨
();

810 i‡–
pEº‹
 && 
d©a
 )

812 
d©a
->
	`Sèmp
–
pEº‹
, 
ícodög
 );

813 
îr‹Loˇti⁄
 = 
d©a
->
	`Curs‹
();

815 
	}
}

818 
TiXmlNode
* 
	gTiXmlNode
::
	$Idítify
–c⁄° * 
p
, 
TiXmlEncodög
 
ícodög
 )

820 
TiXmlNode
* 
ªtu∫Node
 = 0;

822 
p
 = 
	`SkùWhôeS∑˚
–p, 
ícodög
 );

823 if–!
p
 || !*p || *p != '<' )

828 
TiXmlDocumít
* 
doc
 = 
	`GëDocumít
();

829 
p
 = 
	`SkùWhôeS∑˚
–p, 
ícodög
 );

831 i‡–!
p
 || !*p )

843 c⁄° * 
xmlHódî
 = { "<?xml" };

844 c⁄° * 
commítHódî
 = { "<!--" };

845 c⁄° * 
dtdHódî
 = { "<!" };

846 c⁄° * 
cd©aHódî
 = { "<![CDATA[" };

848 i‡–
	`SåögEquÆ
–
p
, 
xmlHódî
, 
åue
, 
ícodög
 ) )

850 #ifde‡
DEBUG_PARSER


851 
	`TIXML_LOG
( "XMLÖarsing Declaration\n" );

853 
ªtu∫Node
 = 
√w
 
	`TiXmlDe˛¨©i⁄
();

855 i‡–
	`SåögEquÆ
–
p
, 
commítHódî
, 
Ál£
, 
ícodög
 ) )

857 #ifde‡
DEBUG_PARSER


858 
	`TIXML_LOG
( "XMLÖarsing Comment\n" );

860 
ªtu∫Node
 = 
√w
 
	`TiXmlCommít
();

862 i‡–
	`SåögEquÆ
–
p
, 
cd©aHódî
, 
Ál£
, 
ícodög
 ) )

864 #ifde‡
DEBUG_PARSER


865 
	`TIXML_LOG
( "XMLÖarsing CDATA\n" );

867 
TiXmlText
* 
ãxt
 = 
√w
 
	`TiXmlText
( "" );

868 
ãxt
->
	`SëCDATA
–
åue
 );

869 
ªtu∫Node
 = 
ãxt
;

871 i‡–
	`SåögEquÆ
–
p
, 
dtdHódî
, 
Ál£
, 
ícodög
 ) )

873 #ifde‡
DEBUG_PARSER


874 
	`TIXML_LOG
( "XMLÖarsing Unknown(1)\n" );

876 
ªtu∫Node
 = 
√w
 
	`TiXmlUnknown
();

878 i‡–
	`IsAÕha
–*(
p
+1), 
ícodög
 )

879 || *(
p
+1) == '_' )

881 #ifde‡
DEBUG_PARSER


882 
	`TIXML_LOG
( "XMLÖarsing Element\n" );

884 
ªtu∫Node
 = 
√w
 
	`TiXmlEÀmít
( "" );

888 #ifde‡
DEBUG_PARSER


889 
	`TIXML_LOG
( "XMLÖarsing Unknown(2)\n" );

891 
ªtu∫Node
 = 
√w
 
	`TiXmlUnknown
();

894 i‡–
ªtu∫Node
 )

897 
ªtu∫Node
->
∑ª¡
 = 
this
;

901 i‡–
doc
 )

902 
doc
->
	`SëEº‹
–
TIXML_ERROR_OUT_OF_MEMORY
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

904  
ªtu∫Node
;

905 
	}
}

907 #ifde‡
TIXML_USE_STL


909 
	gTiXmlEÀmít
::
SåómIn
 (
°d
::
i°ªam
 * 
ö
, 
TIXML_STRING
 * 
èg
)

913  
	gö
->
good
() )

915 
	gc
 = 
ö
->
gë
();

916 i‡–
	gc
 <= 0 )

918 
TiXmlDocumít
* 
documít
 = 
GëDocumít
();

919 i‡–
	gdocumít
 )

920 
	gdocumít
->
SëEº‹
–
TIXML_ERROR_EMBEDDED_NULL
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

923 (*
	gèg
Ë+(Ë
c
 ;

925 i‡–
	gc
 == '>' )

929 i‡–
	gèg
->
Àngth
() < 3 ) ;

934 i‡–
	gèg
->
©
–
èg
->
Àngth
() - 1 ) == '>'

935 && 
èg
->
©
–èg->
Àngth
() - 2 ) == '/' )

940 i‡–
	gèg
->
©
–
èg
->
Àngth
() - 1 ) == '>' )

949 
SåómWhôeS∑˚
–
ö
, 
èg
 );

952 i‡–
	gö
->
good
(Ë&& in->
≥ek
() != '<' )

955 
TiXmlText
 
ãxt
( "" );

956 
	gãxt
.
SåómIn
–
ö
, 
èg
 );

965 i‡–!
	gö
->
good
() ) ;

966 
as£π
–
ö
->
≥ek
() == '<' );

967 
	gègIndex
 = (Ë
èg
->
Àngth
();

969 
boﬁ
 
	g˛osögTag
 = 
Ál£
;

970 
boﬁ
 
	gfú°Ch¨Found
 = 
Ál£
;

974 i‡–!
	gö
->
good
() )

977 
	gc
 = 
ö
->
≥ek
();

978 i‡–
	gc
 <= 0 )

980 
TiXmlDocumít
* 
documít
 = 
GëDocumít
();

981 i‡–
	gdocumít
 )

982 
	gdocumít
->
SëEº‹
–
TIXML_ERROR_EMBEDDED_NULL
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

986 i‡–
	gc
 == '>' )

989 *
	gèg
 +(Ë
c
;

990 
	gö
->
gë
();

993 i‡–
	gc
 ='[' && 
èg
->
size
() >= 9 )

995 
size_t
 
Àn
 = 
èg
->
size
();

996 c⁄° * 
	g°¨t
 = 
èg
->
c_°r
(Ë+ 
Àn
 - 9;

997 i‡–
°rcmp
–
°¨t
, "<![CDATA[" ) == 0 ) {

998 
as£π
–!
˛osögTag
 );

1003 i‡–!
	gfú°Ch¨Found
 && 
	gc
 !'<' && !
IsWhôeS∑˚
–
c
 ) )

1005 
fú°Ch¨Found
 = 
åue
;

1006 i‡–
	gc
 == '/' )

1007 
˛osögTag
 = 
åue
;

1012 i‡–
	g˛osögTag
 )

1014 i‡–!
	gö
->
good
() )

1017 
	gc
 = 
ö
->
gë
();

1018 i‡–
	gc
 <= 0 )

1020 
TiXmlDocumít
* 
documít
 = 
GëDocumít
();

1021 i‡–
	gdocumít
 )

1022 
	gdocumít
->
SëEº‹
–
TIXML_ERROR_EMBEDDED_NULL
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

1025 
as£π
–
c
 == '>' );

1026 *
	gèg
 +(Ë
c
;

1034 c⁄° * 
	gègloc
 = 
èg
->
c_°r
(Ë+ 
ègIndex
;

1035 
TiXmlNode
* 
	gnode
 = 
Idítify
–
ègloc
, 
TIXML_DEFAULT_ENCODING
 );

1036 i‡–!
	gnode
 )

1038 
	gnode
->
SåómIn
–
ö
, 
èg
 );

1039 
dñëe
 
	gnode
;

1040 
	gnode
 = 0;

1049 c⁄° * 
	gTiXmlEÀmít
::
	$P¨£
–c⁄° * 
p
, 
TiXmlP¨sögD©a
* 
d©a
, 
TiXmlEncodög
 
ícodög
 )

1051 
p
 = 
	`SkùWhôeS∑˚
–p, 
ícodög
 );

1052 
TiXmlDocumít
* 
documít
 = 
	`GëDocumít
();

1054 i‡–!
p
 || !*p )

1056 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_PARSING_ELEMENT
, 0, 0, 
ícodög
 );

1060 i‡–
d©a
 )

1062 
d©a
->
	`Sèmp
–
p
, 
ícodög
 );

1063 
loˇti⁄
 = 
d©a
->
	`Curs‹
();

1066 i‡–*
p
 != '<' )

1068 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_PARSING_ELEMENT
, 
p
, 
d©a
, 
ícodög
 );

1072 
p
 = 
	`SkùWhôeS∑˚
–p+1, 
ícodög
 );

1075 c⁄° * 
pEº
 = 
p
;

1077 
p
 = 
	`RódName
–p, &
vÆue
, 
ícodög
 );

1078 i‡–!
p
 || !*p )

1080 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME
, 
pEº
, 
d©a
, 
ícodög
 );

1084 
TIXML_STRING
 
	`ídTag
 ("</");

1085 
ídTag
 +
vÆue
;

1086 
ídTag
 += ">";

1090  
p
 && *p )

1092 
pEº
 = 
p
;

1093 
p
 = 
	`SkùWhôeS∑˚
–p, 
ícodög
 );

1094 i‡–!
p
 || !*p )

1096 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_READING_ATTRIBUTES
, 
pEº
, 
d©a
, 
ícodög
 );

1099 i‡–*
p
 == '/' )

1101 ++
p
;

1103 i‡–*
p
 != '>' )

1105 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_PARSING_EMPTY
, 
p
, 
d©a
, 
ícodög
 );

1108  (
p
+1);

1110 i‡–*
p
 == '>' )

1115 ++
p
;

1116 
p
 = 
	`RódVÆue
–p, 
d©a
, 
ícodög
 );

1117 i‡–!
p
 || !*p ) {

1120 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_READING_END_TAG
, 
p
, 
d©a
, 
ícodög
 );

1125 i‡–
	`SåögEquÆ
–
p
, 
ídTag
.
	`c_°r
(), 
Ál£
, 
ícodög
 ) )

1127 
p
 +
ídTag
.
	`Àngth
();

1128  
p
;

1132 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_READING_END_TAG
, 
p
, 
d©a
, 
ícodög
 );

1139 
TiXmlAâribuã
* 
©åib
 = 
√w
 
	`TiXmlAâribuã
();

1140 i‡–!
©åib
 )

1142 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_OUT_OF_MEMORY
, 
pEº
, 
d©a
, 
ícodög
 );

1146 
©åib
->
	`SëDocumít
–
documít
 );

1147 
pEº
 = 
p
;

1148 
p
 = 
©åib
->
	`P¨£
–p, 
d©a
, 
ícodög
 );

1150 i‡–!
p
 || !*p )

1152 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_PARSING_ELEMENT
, 
pEº
, 
d©a
, 
ícodög
 );

1153 
dñëe
 
©åib
;

1158 #ifde‡
TIXML_USE_STL


1159 
TiXmlAâribuã
* 
node
 = 
©åibuãSë
.
	`Föd
–
©åib
->
	`NameTSå
() );

1161 
TiXmlAâribuã
* 
node
 = 
©åibuãSë
.
	`Föd
–
©åib
->
	`Name
() );

1163 i‡–
node
 )

1165 
node
->
	`SëVÆue
–
©åib
->
	`VÆue
() );

1166 
dñëe
 
©åib
;

1170 
©åibuãSë
.
	`Add
–
©åib
 );

1173  
p
;

1174 
	}
}

1177 c⁄° * 
	gTiXmlEÀmít
::
	$RódVÆue
–c⁄° * 
p
, 
TiXmlP¨sögD©a
* 
d©a
, 
TiXmlEncodög
 
ícodög
 )

1179 
TiXmlDocumít
* 
documít
 = 
	`GëDocumít
();

1182 c⁄° * 
pWôhWhôeS∑˚
 = 
p
;

1183 
p
 = 
	`SkùWhôeS∑˚
–p, 
ícodög
 );

1185  
p
 && *p )

1187 i‡–*
p
 != '<' )

1190 
TiXmlText
* 
ãxtNode
 = 
√w
 
	`TiXmlText
( "" );

1192 i‡–!
ãxtNode
 )

1194 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_OUT_OF_MEMORY
, 0, 0, 
ícodög
 );

1198 i‡–
TiXmlBa£
::
	`IsWhôeS∑˚C⁄dí£d
() )

1200 
p
 = 
ãxtNode
->
	`P¨£
–p, 
d©a
, 
ícodög
 );

1206 
p
 = 
ãxtNode
->
	`P¨£
–
pWôhWhôeS∑˚
, 
d©a
, 
ícodög
 );

1209 i‡–!
ãxtNode
->
	`Bœnk
() )

1210 
	`LökEndChûd
–
ãxtNode
 );

1212 
dñëe
 
ãxtNode
;

1219 i‡–
	`SåögEquÆ
–
p
, "</", 
Ál£
, 
ícodög
 ) )

1221  
p
;

1225 
TiXmlNode
* 
node
 = 
	`Idítify
–
p
, 
ícodög
 );

1226 i‡–
node
 )

1228 
p
 = 
node
->
	`P¨£
–p, 
d©a
, 
ícodög
 );

1229 
	`LökEndChûd
–
node
 );

1237 
pWôhWhôeS∑˚
 = 
p
;

1238 
p
 = 
	`SkùWhôeS∑˚
–p, 
ícodög
 );

1241 i‡–!
p
 )

1243 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_READING_ELEMENT_VALUE
, 0, 0, 
ícodög
 );

1245  
p
;

1246 
	}
}

1249 #ifde‡
TIXML_USE_STL


1250 
	gTiXmlUnknown
::
SåómIn
–
°d
::
i°ªam
 * 
ö
, 
TIXML_STRING
 * 
èg
 )

1252  
	gö
->
good
() )

1254 
	gc
 = 
ö
->
gë
();

1255 i‡–
	gc
 <= 0 )

1257 
TiXmlDocumít
* 
documít
 = 
GëDocumít
();

1258 i‡–
	gdocumít
 )

1259 
	gdocumít
->
SëEº‹
–
TIXML_ERROR_EMBEDDED_NULL
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

1262 (*
	gèg
Ë+(Ë
c
;

1264 i‡–
	gc
 == '>' )

1274 c⁄° * 
	gTiXmlUnknown
::
	$P¨£
–c⁄° * 
p
, 
TiXmlP¨sögD©a
* 
d©a
, 
TiXmlEncodög
 
ícodög
 )

1276 
TiXmlDocumít
* 
documít
 = 
	`GëDocumít
();

1277 
p
 = 
	`SkùWhôeS∑˚
–p, 
ícodög
 );

1279 i‡–
d©a
 )

1281 
d©a
->
	`Sèmp
–
p
, 
ícodög
 );

1282 
loˇti⁄
 = 
d©a
->
	`Curs‹
();

1284 i‡–!
p
 || !*p || *p != '<' )

1286 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_PARSING_UNKNOWN
, 
p
, 
d©a
, 
ícodög
 );

1289 ++
p
;

1290 
vÆue
 = "";

1292  
p
 && *p && *p != '>' )

1294 
vÆue
 +*
p
;

1295 ++
p
;

1298 i‡–!
p
 )

1300 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_PARSING_UNKNOWN
, 0, 0, 
ícodög
 );

1302 i‡–*
p
 == '>' )

1303  
p
+1;

1304  
p
;

1305 
	}
}

1307 #ifde‡
TIXML_USE_STL


1308 
	gTiXmlCommít
::
SåómIn
–
°d
::
i°ªam
 * 
ö
, 
TIXML_STRING
 * 
èg
 )

1310  
	gö
->
good
() )

1312 
	gc
 = 
ö
->
gë
();

1313 i‡–
	gc
 <= 0 )

1315 
TiXmlDocumít
* 
documít
 = 
GëDocumít
();

1316 i‡–
	gdocumít
 )

1317 
	gdocumít
->
SëEº‹
–
TIXML_ERROR_EMBEDDED_NULL
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

1321 (*
	gèg
Ë+(Ë
c
;

1323 i‡–
	gc
 == '>'

1324 && 
èg
->
©
–èg->
Àngth
() - 2 ) == '-'

1325 && 
èg
->
©
–èg->
Àngth
() - 3 ) == '-' )

1335 c⁄° * 
	gTiXmlCommít
::
	$P¨£
–c⁄° * 
p
, 
TiXmlP¨sögD©a
* 
d©a
, 
TiXmlEncodög
 
ícodög
 )

1337 
TiXmlDocumít
* 
documít
 = 
	`GëDocumít
();

1338 
vÆue
 = "";

1340 
p
 = 
	`SkùWhôeS∑˚
–p, 
ícodög
 );

1342 i‡–
d©a
 )

1344 
d©a
->
	`Sèmp
–
p
, 
ícodög
 );

1345 
loˇti⁄
 = 
d©a
->
	`Curs‹
();

1347 c⁄° * 
°¨tTag
 = "<!--";

1348 c⁄° * 
ídTag
 = "-->";

1350 i‡–!
	`SåögEquÆ
–
p
, 
°¨tTag
, 
Ál£
, 
ícodög
 ) )

1352 
documít
->
	`SëEº‹
–
TIXML_ERROR_PARSING_COMMENT
, 
p
, 
d©a
, 
ícodög
 );

1355 
p
 +
	`°æí
–
°¨tTag
 );

1375 
vÆue
 = "";

1377  
p
 && *∞&& !
	`SåögEquÆ
–p, 
ídTag
, 
Ál£
, 
ícodög
 ) )

1379 
vÆue
.
	`≠≥nd
–
p
, 1 );

1380 ++
p
;

1382 i‡–
p
 )

1383 
p
 +
	`°æí
–
ídTag
 );

1385  
p
;

1386 
	}
}

1389 c⁄° * 
	gTiXmlAâribuã
::
	$P¨£
–c⁄° * 
p
, 
TiXmlP¨sögD©a
* 
d©a
, 
TiXmlEncodög
 
ícodög
 )

1391 
p
 = 
	`SkùWhôeS∑˚
–p, 
ícodög
 );

1392 i‡–!
p
 || !*p )  0;

1398 i‡–
d©a
 )

1400 
d©a
->
	`Sèmp
–
p
, 
ícodög
 );

1401 
loˇti⁄
 = 
d©a
->
	`Curs‹
();

1404 c⁄° * 
pEº
 = 
p
;

1405 
p
 = 
	`RódName
–p, &
«me
, 
ícodög
 );

1406 i‡–!
p
 || !*p )

1408 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_READING_ATTRIBUTES
, 
pEº
, 
d©a
, 
ícodög
 );

1411 
p
 = 
	`SkùWhôeS∑˚
–p, 
ícodög
 );

1412 i‡–!
p
 || !*p || *p != '=' )

1414 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_READING_ATTRIBUTES
, 
p
, 
d©a
, 
ícodög
 );

1418 ++
p
;

1419 
p
 = 
	`SkùWhôeS∑˚
–p, 
ícodög
 );

1420 i‡–!
p
 || !*p )

1422 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_READING_ATTRIBUTES
, 
p
, 
d©a
, 
ícodög
 );

1426 c⁄° * 
íd
;

1427 c⁄° 
SINGLE_QUOTE
 = '\'';

1428 c⁄° 
DOUBLE_QUOTE
 = '\"';

1430 i‡–*
p
 =
SINGLE_QUOTE
 )

1432 ++
p
;

1433 
íd
 = "\'";

1434 
p
 = 
	`RódText
–p, &
vÆue
, 
Ál£
, 
íd
, fÆ£, 
ícodög
 );

1436 i‡–*
p
 =
DOUBLE_QUOTE
 )

1438 ++
p
;

1439 
íd
 = "\"";

1440 
p
 = 
	`RódText
–p, &
vÆue
, 
Ál£
, 
íd
, fÆ£, 
ícodög
 );

1447 
vÆue
 = "";

1448  
p
 && *p

1449 && !
	`IsWhôeS∑˚
–*
p
 ) && *p != '\n' && *p != '\r'

1450 && *
p
 != '/' && *p != '>' )

1452 i‡–*
p
 =
SINGLE_QUOTE
 || *∞=
DOUBLE_QUOTE
 ) {

1456 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_READING_ATTRIBUTES
, 
p
, 
d©a
, 
ícodög
 );

1459 
vÆue
 +*
p
;

1460 ++
p
;

1463  
p
;

1464 
	}
}

1466 #ifde‡
TIXML_USE_STL


1467 
	gTiXmlText
::
SåómIn
–
°d
::
i°ªam
 * 
ö
, 
TIXML_STRING
 * 
èg
 )

1469  
	gö
->
good
() )

1471 
	gc
 = 
ö
->
≥ek
();

1472 i‡–!
	gcd©a
 && (
	gc
 == '<' ) )

1476 i‡–
	gc
 <= 0 )

1478 
TiXmlDocumít
* 
documít
 = 
GëDocumít
();

1479 i‡–
	gdocumít
 )

1480 
	gdocumít
->
SëEº‹
–
TIXML_ERROR_EMBEDDED_NULL
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

1484 (*
	gèg
Ë+(Ë
c
;

1485 
	gö
->
gë
();

1487 i‡–
	gcd©a
 && 
	gc
 ='>' && 
èg
->
size
() >= 3 ) {

1488 
size_t
 
Àn
 = 
èg
->
size
();

1489 i‡–(*
	gèg
)[
Àn
-2] =']' && (*
èg
)[len-3] == ']' ) {

1498 c⁄° * 
	gTiXmlText
::
	$P¨£
–c⁄° * 
p
, 
TiXmlP¨sögD©a
* 
d©a
, 
TiXmlEncodög
 
ícodög
 )

1500 
vÆue
 = "";

1501 
TiXmlDocumít
* 
documít
 = 
	`GëDocumít
();

1503 i‡–
d©a
 )

1505 
d©a
->
	`Sèmp
–
p
, 
ícodög
 );

1506 
loˇti⁄
 = 
d©a
->
	`Curs‹
();

1509 c⁄° * c⁄° 
°¨tTag
 = "<![CDATA[";

1510 c⁄° * c⁄° 
ídTag
 = "]]>";

1512 i‡–
cd©a
 || 
	`SåögEquÆ
–
p
, 
°¨tTag
, 
Ál£
, 
ícodög
 ) )

1514 
cd©a
 = 
åue
;

1516 i‡–!
	`SåögEquÆ
–
p
, 
°¨tTag
, 
Ál£
, 
ícodög
 ) )

1518 
documít
->
	`SëEº‹
–
TIXML_ERROR_PARSING_CDATA
, 
p
, 
d©a
, 
ícodög
 );

1521 
p
 +
	`°æí
–
°¨tTag
 );

1524  
p
 && *p

1525 && !
	`SåögEquÆ
–
p
, 
ídTag
, 
Ál£
, 
ícodög
 )

1528 
vÆue
 +*
p
;

1529 ++
p
;

1532 
TIXML_STRING
 
dummy
;

1533 
p
 = 
	`RódText
–p, &
dummy
, 
Ál£
, 
ídTag
, fÆ£, 
ícodög
 );

1534  
p
;

1538 
boﬁ
 
ign‹eWhôe
 = 
åue
;

1540 c⁄° * 
íd
 = "<";

1541 
p
 = 
	`RódText
–p, &
vÆue
, 
ign‹eWhôe
, 
íd
, 
Ál£
, 
ícodög
 );

1542 i‡–
p
 )

1543  
p
-1;

1546 
	}
}

1548 #ifde‡
TIXML_USE_STL


1549 
	gTiXmlDe˛¨©i⁄
::
SåómIn
–
°d
::
i°ªam
 * 
ö
, 
TIXML_STRING
 * 
èg
 )

1551  
	gö
->
good
() )

1553 
	gc
 = 
ö
->
gë
();

1554 i‡–
	gc
 <= 0 )

1556 
TiXmlDocumít
* 
documít
 = 
GëDocumít
();

1557 i‡–
	gdocumít
 )

1558 
	gdocumít
->
SëEº‹
–
TIXML_ERROR_EMBEDDED_NULL
, 0, 0, 
TIXML_ENCODING_UNKNOWN
 );

1561 (*
	gèg
Ë+(Ë
c
;

1563 i‡–
	gc
 == '>' )

1572 c⁄° * 
	gTiXmlDe˛¨©i⁄
::
	$P¨£
–c⁄° * 
p
, 
TiXmlP¨sögD©a
* 
d©a
, 
TiXmlEncodög
 
_ícodög
 )

1574 
p
 = 
	`SkùWhôeS∑˚
–p, 
_ícodög
 );

1577 
TiXmlDocumít
* 
documít
 = 
	`GëDocumít
();

1578 i‡–!
p
 || !*∞|| !
	`SåögEquÆ
–p, "<?xml", 
åue
, 
_ícodög
 ) )

1580 i‡–
documít
 ) documít->
	`SëEº‹
–
TIXML_ERROR_PARSING_DECLARATION
, 0, 0, 
_ícodög
 );

1583 i‡–
d©a
 )

1585 
d©a
->
	`Sèmp
–
p
, 
_ícodög
 );

1586 
loˇti⁄
 = 
d©a
->
	`Curs‹
();

1588 
p
 += 5;

1590 
vîsi⁄
 = "";

1591 
ícodög
 = "";

1592 
°™dÆ⁄e
 = "";

1594  
p
 && *p )

1596 i‡–*
p
 == '>' )

1598 ++
p
;

1599  
p
;

1602 
p
 = 
	`SkùWhôeS∑˚
–p, 
_ícodög
 );

1603 i‡–
	`SåögEquÆ
–
p
, "vîsi⁄", 
åue
, 
_ícodög
 ) )

1605 
TiXmlAâribuã
 
©åib
;

1606 
p
 = 
©åib
.
	`P¨£
–p, 
d©a
, 
_ícodög
 );

1607 
vîsi⁄
 = 
©åib
.
	`VÆue
();

1609 i‡–
	`SåögEquÆ
–
p
, "ícodög", 
åue
, 
_ícodög
 ) )

1611 
TiXmlAâribuã
 
©åib
;

1612 
p
 = 
©åib
.
	`P¨£
–p, 
d©a
, 
_ícodög
 );

1613 
ícodög
 = 
©åib
.
	`VÆue
();

1615 i‡–
	`SåögEquÆ
–
p
, "°™dÆ⁄e", 
åue
, 
_ícodög
 ) )

1617 
TiXmlAâribuã
 
©åib
;

1618 
p
 = 
©åib
.
	`P¨£
–p, 
d©a
, 
_ícodög
 );

1619 
°™dÆ⁄e
 = 
©åib
.
	`VÆue
();

1624  
p
 && *∞&& *∞!'>' && !
	`IsWhôeS∑˚
( *p ) )

1625 ++
p
;

1629 
	}
}

1631 
boﬁ
 
	gTiXmlText
::
	$Bœnk
() const

1633  
i
=0; i<
vÆue
.
	`Àngth
(); i++ )

1634 i‡–!
	`IsWhôeS∑˚
–
vÆue
[
i
] ) )

1635  
Ál£
;

1636  
åue
;

1637 
	}
}

	@
1
.
0
23
261
CodeConverter.cc
CodeConverter.h
Config.h
MD5.cc
MD5.h
Mystar.cc
Mystar.h
User.cc
User.h
blog.cc
checkAndSetConfig.cc
gMystar.cc
gMystar.h
gbk2utf8.cc
main.cc
myerr.cc
sendpacket.cc
tinystr.cpp
tinystr.h
tinyxml.cpp
tinyxml.h
tinyxmlerror.cpp
tinyxmlparser.cpp
