#############################################################################
# Makefile for building: kstar
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Sun Feb  8 13:02:53 2009
# Project:  src.pro
# Template: app
# Command: $(QMAKE) -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -g -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe -g -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I/usr/include/qt3
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/share/qt3/lib -L/usr/X11R6/lib -lpcap -lnet -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = kstar.h \
		trayicon.h \
		md5.h \
		mystar.h \
		myinifile.h
SOURCES = md5.cpp \
		kstar.cpp \
		trayicon.cpp \
		myinifile.cpp \
		main.cpp \
		mystar.cpp
OBJECTS = md5.o \
		kstar.o \
		trayicon.o \
		myinifile.o \
		main.o \
		mystar.o \
		kstarbase.o
FORMS = kstarbase.ui
UICDECLS = kstarbase.h
UICIMPLS = kstarbase.cpp
SRCMOC   = moc_kstar.cpp \
		moc_trayicon.cpp \
		moc_kstarbase.cpp
OBJMOC = moc_kstar.o \
		moc_trayicon.o \
		moc_kstarbase.o
DIST	   = src.pro
QMAKE_TARGET = kstar
DESTDIR  = 
TARGET   = kstar

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: src.pro  /usr/share/qt3/mkspecs/default/qmake.conf /usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile src.pro
qmake: 
	@$(QMAKE) -o Makefile src.pro

dist: 
	@mkdir -p .tmp/kstar && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/kstar/ && ( cd `dirname .tmp/kstar` && $(TAR) kstar.tar kstar && $(GZIP) kstar.tar ) && $(MOVE) `dirname .tmp/kstar`/kstar.tar.gz . && $(DEL_FILE) -r .tmp/kstar

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

md5.o: md5.cpp md5.h

kstar.o: kstar.cpp kstar.h \
		kstarbase.h \
		myinifile.h \
		mystar.h \
		trayicon.h

trayicon.o: trayicon.cpp trayicon.h \
		trayicon_win.cpp \
		trayicon_x11.cpp

myinifile.o: myinifile.cpp myinifile.h

main.o: main.cpp myinifile.h \
		kstar.h \
		kstarbase.h \
		mystar.h \
		trayicon.h

mystar.o: mystar.cpp mystar.h \
		md5.h

kstarbase.h: kstarbase.ui 
	$(UIC) kstarbase.ui -o kstarbase.h

kstarbase.cpp: kstarbase.h kstarbase.ui 
	$(UIC) kstarbase.ui -i kstarbase.h -o kstarbase.cpp

kstarbase.o: kstarbase.cpp kstarbase.h

moc_kstar.o: moc_kstar.cpp  kstar.h kstarbase.h \
		myinifile.h \
		mystar.h \
		trayicon.h

moc_trayicon.o: moc_trayicon.cpp  trayicon.h 

moc_kstarbase.o: moc_kstarbase.cpp  kstarbase.h 

moc_kstar.cpp: $(MOC) kstar.h
	$(MOC) kstar.h -o moc_kstar.cpp

moc_trayicon.cpp: $(MOC) trayicon.h
	$(MOC) trayicon.h -o moc_trayicon.cpp

moc_kstarbase.cpp: $(MOC) kstarbase.h
	$(MOC) kstarbase.h -o moc_kstarbase.cpp

####### Install

install:  

uninstall:  

